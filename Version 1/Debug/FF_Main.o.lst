   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,1
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "FF_Main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.SysTick_Handler,"ax",%progbits
  18              	 .align 2
  19              	 .global SysTick_Handler
  20              	 .code 16
  21              	 .thumb_func
  23              	SysTick_Handler:
  24              	.LFB546:
  25              	 .file 1 "../FF_Main.c"
   1:../FF_Main.c  **** /******************************************************************************
   2:../FF_Main.c  ****  * @file     EasyMain.c
   3:../FF_Main.c  ****  * @brief    Uses a system timer to toggle the  ports P0.5, P0.6, P1.5 and P1.6 with 200ms frequenc
   4:../FF_Main.c  ****  *			 LEDs that are connected to these ports will toggle respectively.
   5:../FF_Main.c  ****  * 			 In addition it uses the UART of USIC Channel 1 to send a message every 2s to a terminal
   6:../FF_Main.c  ****  *			 emulator. The communication settings are 57.6kbps/8N1
   7:../FF_Main.c  ****  *			 P1.3 is configured as input (RXD) and P1.2 is configured as output(TXD)
   8:../FF_Main.c  ****  *			 This project runs without modifications on the XMC1100 kit for ARDUINO
   9:../FF_Main.c  ****  * @version  V1.0
  10:../FF_Main.c  ****  * @date     20. February 2015
  11:../FF_Main.c  ****  * @note
  12:../FF_Main.c  ****  * Copyright (C) 2015 Infineon Technologies AG. All rights reserved.
  13:../FF_Main.c  ****  ******************************************************************************
  14:../FF_Main.c  ****  * @par
  15:../FF_Main.c  ****  * Infineon Technologies AG (Infineon) is supplying this software for use with
  16:../FF_Main.c  ****  * Infineonï¿½s microcontrollers.
  17:../FF_Main.c  ****  * This file can be freely distributed within development tools that are
  18:../FF_Main.c  ****  * supporting such microcontrollers.
  19:../FF_Main.c  ****  * @par
  20:../FF_Main.c  ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  21:../FF_Main.c  ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  22:../FF_Main.c  ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  23:../FF_Main.c  ****  * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
  24:../FF_Main.c  ****  * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  25:../FF_Main.c  ****  *****************************************************************************/
  26:../FF_Main.c  **** 
  27:../FF_Main.c  **** #include <string.h>
  28:../FF_Main.c  **** 
  29:../FF_Main.c  **** #include "XMC1100.h"
  30:../FF_Main.c  **** #include "xmc_uart.h"
  31:../FF_Main.c  **** #include "xmc_gpio.h"
  32:../FF_Main.c  **** #include "xmc_ccu4.h"
  33:../FF_Main.c  **** #include "xmc_scu.h"
  34:../FF_Main.c  **** 
  35:../FF_Main.c  **** #include "GPIO.h"
  36:../FF_Main.c  **** 
  37:../FF_Main.c  **** #include "port.h"
  38:../FF_Main.c  **** #include "mbport.h"
  39:../FF_Main.c  **** #include "mb.h"
  40:../FF_Main.c  **** 
  41:../FF_Main.c  **** #include "modbus_if.h"
  42:../FF_Main.c  **** 
  43:../FF_Main.c  **** #define  DSEL_DXnA ( 0 )
  44:../FF_Main.c  **** #define  DSEL_DXnB ( 1 )
  45:../FF_Main.c  **** #define  DSEL_DXnC ( 2 )
  46:../FF_Main.c  **** #define  DSEL_DXnD ( 3 )
  47:../FF_Main.c  **** #define  DSEL_DXnE ( 4 )
  48:../FF_Main.c  **** #define  DSEL_DXnF ( 5 )
  49:../FF_Main.c  **** #define  DSEL_DXnG ( 6 )
  50:../FF_Main.c  **** #define  DSEL_ALWAYS_ONE ( 7 )
  51:../FF_Main.c  **** 
  52:../FF_Main.c  **** /**************************************************************************************************
  53:../FF_Main.c  ****  * MACROS
  54:../FF_Main.c  ****  **************************************************************************************************
  55:../FF_Main.c  **** #define SLICE_PTR         CCU40_CC40
  56:../FF_Main.c  **** #define MODULE_PTR        CCU40
  57:../FF_Main.c  **** #define MODULE_NUMBER     (0U)
  58:../FF_Main.c  **** #define SLICE_NUMBER      (0U)
  59:../FF_Main.c  **** #define CCU_OUTPUT		  P0_5
  60:../FF_Main.c  **** /* We need 3.5T as 3.5 Char Time */
  61:../FF_Main.c  **** /* We use 19200 Baud meaning 52us per Bit */
  62:../FF_Main.c  **** /* With 8e1 and 1 stopbit and 1 startbit we got 11 Bits per char */
  63:../FF_Main.c  **** /* times 3.5 menas 38.5 bits -> 38.5*50us = 2.028 ms timeout.... */
  64:../FF_Main.c  **** 
  65:../FF_Main.c  **** /* Period 62499 -> 64000000 means (64Mhz/1024 -1) resulting in 1 secong */
  66:../FF_Main.c  **** /* We need a 2.028ms timer here with 1 tick = 16us */
  67:../FF_Main.c  **** /* Resulting in 127,75 -> 128 ticks -1 - > 127 */
  68:../FF_Main.c  **** 
  69:../FF_Main.c  **** 
  70:../FF_Main.c  **** #define PWMPERIOD		  (127U) //PWM period calculated based on PCLK = 64MHz
  71:../FF_Main.c  **** #define DUTYCYCLE		  (127U)
  72:../FF_Main.c  **** 
  73:../FF_Main.c  **** 
  74:../FF_Main.c  **** 
  75:../FF_Main.c  **** XMC_GPIO_CONFIG_t rx_pin_config;
  76:../FF_Main.c  **** XMC_GPIO_CONFIG_t tx_pin_config;
  77:../FF_Main.c  **** 
  78:../FF_Main.c  **** 
  79:../FF_Main.c  **** /* Config for Systick timer */
  80:../FF_Main.c  **** #define TICKS_PER_SECOND 1000
  81:../FF_Main.c  **** 
  82:../FF_Main.c  **** XMC_CCU4_SLICE_COMPARE_CONFIG_t compare_config =
  83:../FF_Main.c  **** {
  84:../FF_Main.c  ****   .timer_mode 		   = (uint32_t) XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA,
  85:../FF_Main.c  ****   .monoshot   		   = (uint32_t) true,
  86:../FF_Main.c  ****   .shadow_xfer_clear   = (uint32_t) 0,
  87:../FF_Main.c  ****   .dither_timer_period = (uint32_t) 0,
  88:../FF_Main.c  ****   .dither_duty_cycle   = (uint32_t) 0,
  89:../FF_Main.c  ****   .prescaler_mode	   = (uint32_t) XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL,
  90:../FF_Main.c  ****   .mcm_enable		   = (uint32_t) 0,
  91:../FF_Main.c  ****   .prescaler_initval   = (uint32_t) 10,
  92:../FF_Main.c  ****   .float_limit		   = (uint32_t) 0,
  93:../FF_Main.c  ****   .dither_limit		   = (uint32_t) 0,
  94:../FF_Main.c  ****   .passive_level 	   = (uint32_t) XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW,
  95:../FF_Main.c  ****   .timer_concatenation = (uint32_t) 0
  96:../FF_Main.c  **** };
  97:../FF_Main.c  **** 
  98:../FF_Main.c  **** volatile bool boService=true;
  99:../FF_Main.c  **** extern void ff_check_position( void );
 100:../FF_Main.c  **** 
 101:../FF_Main.c  **** volatile uint32_t Delay_x =0;
 102:../FF_Main.c  **** void SysTick_Handler(void)
 103:../FF_Main.c  **** {
  26              	 .loc 1 103 0
  27              	 .cfi_startproc
  28 0000 08B5     	 push {r3,lr}
  29              	.LCFI0:
  30              	 .cfi_def_cfa_offset 8
  31              	 .cfi_offset 3,-8
  32              	 .cfi_offset 14,-4
 104:../FF_Main.c  **** 	if(Delay_x>0){
  33              	 .loc 1 104 0
  34 0002 074B     	 ldr r3,.L4
  35 0004 1B68     	 ldr r3,[r3]
  36 0006 002B     	 cmp r3,#0
  37 0008 03D0     	 beq .L2
 105:../FF_Main.c  **** 		Delay_x--;
  38              	 .loc 1 105 0
  39 000a 054A     	 ldr r2,.L4
  40 000c 1368     	 ldr r3,[r2]
  41 000e 013B     	 sub r3,r3,#1
  42 0010 1360     	 str r3,[r2]
  43              	.L2:
 106:../FF_Main.c  **** 	}
 107:../FF_Main.c  **** 	if(boService==false){
  44              	 .loc 1 107 0
  45 0012 044B     	 ldr r3,.L4+4
  46 0014 1B78     	 ldrb r3,[r3]
  47 0016 002B     	 cmp r3,#0
  48 0018 01D1     	 bne .L1
 108:../FF_Main.c  **** 		ff_check_position();
  49              	 .loc 1 108 0
  50 001a FFF7FEFF 	 bl ff_check_position
  51              	.LVL0:
  52              	.L1:
 109:../FF_Main.c  **** 	}
 110:../FF_Main.c  **** 
 111:../FF_Main.c  **** 
 112:../FF_Main.c  **** }
  53              	 .loc 1 112 0
  54              	 
  55 001e 08BD     	 pop {r3,pc}
  56              	.L5:
  57              	 .align 2
  58              	.L4:
  59 0020 00000000 	 .word .LANCHOR0
  60 0024 00000000 	 .word .LANCHOR1
  61              	 .cfi_endproc
  62              	.LFE546:
  64              	 .section .text.SetUpGPIO,"ax",%progbits
  65              	 .align 2
  66              	 .global SetUpGPIO
  67              	 .code 16
  68              	 .thumb_func
  70              	SetUpGPIO:
  71              	.LFB547:
 113:../FF_Main.c  **** 
 114:../FF_Main.c  **** 
 115:../FF_Main.c  **** void SetUpGPIO(){
  72              	 .loc 1 115 0
  73              	 .cfi_startproc
  74 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  75              	.LCFI1:
  76              	 .cfi_def_cfa_offset 20
  77              	 .cfi_offset 4,-20
  78              	 .cfi_offset 5,-16
  79              	 .cfi_offset 6,-12
  80              	 .cfi_offset 7,-8
  81              	 .cfi_offset 14,-4
  82 0002 87B0     	 sub sp,sp,#28
  83              	.LCFI2:
  84              	 .cfi_def_cfa_offset 48
 116:../FF_Main.c  **** 
 117:../FF_Main.c  **** 	/* ID Switch */
 118:../FF_Main.c  **** 	/*
 119:../FF_Main.c  **** 	 * P2.4
 120:../FF_Main.c  **** 	 * P2.5
 121:../FF_Main.c  **** 	 * P2.6
 122:../FF_Main.c  **** 	 * P2.7
 123:../FF_Main.c  **** 	 * P2.8
 124:../FF_Main.c  **** 	 * P2.9
 125:../FF_Main.c  **** 	 * P2.10
 126:../FF_Main.c  **** 	 * P2.11
 127:../FF_Main.c  **** 	 *
 128:../FF_Main.c  **** 	 */
 129:../FF_Main.c  **** 
 130:../FF_Main.c  **** 	XMC_GPIO_CONFIG_t pin_input_config_pullup =
  85              	 .loc 1 130 0
  86 0004 04AC     	 add r4,sp,#16
  87 0006 414B     	 ldr r3,.L7
  88 0008 221C     	 mov r2,r4
  89 000a 03CB     	 ldmia r3!,{r0,r1}
  90 000c 03C2     	 stmia r2!,{r0,r1}
  91 000e 1E1C     	 mov r6,r3
 131:../FF_Main.c  **** 		{
 132:../FF_Main.c  **** 		   .mode                = XMC_GPIO_MODE_INPUT_PULL_UP,
 133:../FF_Main.c  **** 		   .input_hysteresis    = XMC_GPIO_INPUT_HYSTERESIS_STANDARD,
 134:../FF_Main.c  **** 		   .output_level        = XMC_GPIO_OUTPUT_LEVEL_LOW,
 135:../FF_Main.c  **** 		};
 136:../FF_Main.c  **** 	XMC_GPIO_Init(P2_4, &pin_input_config_pullup);
  92              	 .loc 1 136 0
  93 0010 3F48     	 ldr r0,.L7+4
  94 0012 0421     	 mov r1,#4
  95 0014 221C     	 mov r2,r4
  96 0016 FFF7FEFF 	 bl XMC_GPIO_Init
  97              	.LVL1:
 137:../FF_Main.c  **** 	XMC_GPIO_Init(P2_5, &pin_input_config_pullup);
  98              	 .loc 1 137 0
  99 001a 3D48     	 ldr r0,.L7+4
 100 001c 0521     	 mov r1,#5
 101 001e 221C     	 mov r2,r4
 102 0020 FFF7FEFF 	 bl XMC_GPIO_Init
 103              	.LVL2:
 138:../FF_Main.c  **** 	XMC_GPIO_Init(P2_6, &pin_input_config_pullup);
 104              	 .loc 1 138 0
 105 0024 3A48     	 ldr r0,.L7+4
 106 0026 0621     	 mov r1,#6
 107 0028 221C     	 mov r2,r4
 108 002a FFF7FEFF 	 bl XMC_GPIO_Init
 109              	.LVL3:
 139:../FF_Main.c  **** 	XMC_GPIO_Init(P2_7, &pin_input_config_pullup);
 110              	 .loc 1 139 0
 111 002e 3848     	 ldr r0,.L7+4
 112 0030 0721     	 mov r1,#7
 113 0032 221C     	 mov r2,r4
 114 0034 FFF7FEFF 	 bl XMC_GPIO_Init
 115              	.LVL4:
 140:../FF_Main.c  **** 	XMC_GPIO_Init(P2_8, &pin_input_config_pullup);
 116              	 .loc 1 140 0
 117 0038 3548     	 ldr r0,.L7+4
 118 003a 0821     	 mov r1,#8
 119 003c 221C     	 mov r2,r4
 120 003e FFF7FEFF 	 bl XMC_GPIO_Init
 121              	.LVL5:
 141:../FF_Main.c  **** 	XMC_GPIO_Init(P2_9, &pin_input_config_pullup);
 122              	 .loc 1 141 0
 123 0042 3348     	 ldr r0,.L7+4
 124 0044 0921     	 mov r1,#9
 125 0046 221C     	 mov r2,r4
 126 0048 FFF7FEFF 	 bl XMC_GPIO_Init
 127              	.LVL6:
 142:../FF_Main.c  **** 	XMC_GPIO_Init(P2_10, &pin_input_config_pullup);
 128              	 .loc 1 142 0
 129 004c 3048     	 ldr r0,.L7+4
 130 004e 0A21     	 mov r1,#10
 131 0050 221C     	 mov r2,r4
 132 0052 FFF7FEFF 	 bl XMC_GPIO_Init
 133              	.LVL7:
 143:../FF_Main.c  **** 	XMC_GPIO_Init(P2_11, &pin_input_config_pullup);
 134              	 .loc 1 143 0
 135 0056 2E48     	 ldr r0,.L7+4
 136 0058 0B21     	 mov r1,#11
 137 005a 221C     	 mov r2,r4
 138 005c FFF7FEFF 	 bl XMC_GPIO_Init
 139              	.LVL8:
 144:../FF_Main.c  **** 
 145:../FF_Main.c  **** 	XMC_GPIO_CONFIG_t pin_output_config_push_pull =
 140              	 .loc 1 145 0
 141 0060 02AC     	 add r4,sp,#8
 142 0062 231C     	 mov r3,r4
 143 0064 06CE     	 ldmia r6!,{r1,r2}
 144 0066 06C3     	 stmia r3!,{r1,r2}
 145 0068 371C     	 mov r7,r6
 146:../FF_Main.c  **** 			{
 147:../FF_Main.c  **** 			   .mode                = XMC_GPIO_MODE_OUTPUT_PUSH_PULL,
 148:../FF_Main.c  **** 			   .input_hysteresis    = XMC_GPIO_INPUT_HYSTERESIS_STANDARD,
 149:../FF_Main.c  **** 			   .output_level        = XMC_GPIO_OUTPUT_LEVEL_HIGH,
 150:../FF_Main.c  **** 			};
 151:../FF_Main.c  **** 
 152:../FF_Main.c  **** 	/* Output for Waveform Generation Flap Flap */
 153:../FF_Main.c  **** 	XMC_GPIO_Init(P0_13, &pin_output_config_push_pull); /* !AD    */
 146              	 .loc 1 153 0
 147 006a 2A4D     	 ldr r5,.L7+8
 148 006c 281C     	 mov r0,r5
 149 006e 0D21     	 mov r1,#13
 150 0070 221C     	 mov r2,r4
 151 0072 FFF7FEFF 	 bl XMC_GPIO_Init
 152              	.LVL9:
 154:../FF_Main.c  **** 	XMC_GPIO_Init(P0_1, &pin_output_config_push_pull); /* !COL    */
 153              	 .loc 1 154 0
 154 0076 281C     	 mov r0,r5
 155 0078 0121     	 mov r1,#1
 156 007a 221C     	 mov r2,r4
 157 007c FFF7FEFF 	 bl XMC_GPIO_Init
 158              	.LVL10:
 155:../FF_Main.c  **** 	XMC_GPIO_Init(P0_2, &pin_output_config_push_pull); /* !Start    */
 159              	 .loc 1 155 0
 160 0080 281C     	 mov r0,r5
 161 0082 0221     	 mov r1,#2
 162 0084 221C     	 mov r2,r4
 163 0086 FFF7FEFF 	 bl XMC_GPIO_Init
 164              	.LVL11:
 156:../FF_Main.c  **** 
 157:../FF_Main.c  **** 	/* LEDs */
 158:../FF_Main.c  ****    XMC_GPIO_Init(XMC_GPIO_PORT0,4, &pin_output_config_push_pull);
 165              	 .loc 1 158 0
 166 008a 281C     	 mov r0,r5
 167 008c 0421     	 mov r1,#4
 168 008e 221C     	 mov r2,r4
 169 0090 FFF7FEFF 	 bl XMC_GPIO_Init
 170              	.LVL12:
 159:../FF_Main.c  ****    XMC_GPIO_Init(XMC_GPIO_PORT0,3, &pin_output_config_push_pull);
 171              	 .loc 1 159 0
 172 0094 281C     	 mov r0,r5
 173 0096 0321     	 mov r1,#3
 174 0098 221C     	 mov r2,r4
 175 009a FFF7FEFF 	 bl XMC_GPIO_Init
 176              	.LVL13:
 160:../FF_Main.c  **** 
 161:../FF_Main.c  **** 
 162:../FF_Main.c  **** 	/* Encoder Input */
 163:../FF_Main.c  **** 	XMC_GPIO_CONFIG_t pin_input_config_inv_pullup =
 177              	 .loc 1 163 0
 178 009e 6B46     	 mov r3,sp
 179 00a0 06CF     	 ldmia r7!,{r1,r2}
 180 00a2 06C3     	 stmia r3!,{r1,r2}
 164:../FF_Main.c  **** 		{
 165:../FF_Main.c  **** 		   .mode                = XMC_GPIO_MODE_INPUT_INVERTED_PULL_UP,
 166:../FF_Main.c  **** 		   .input_hysteresis    = XMC_GPIO_INPUT_HYSTERESIS_STANDARD,
 167:../FF_Main.c  **** 		   .output_level        = XMC_GPIO_OUTPUT_LEVEL_LOW,
 168:../FF_Main.c  **** 		};
 169:../FF_Main.c  **** 
 170:../FF_Main.c  **** 	XMC_GPIO_Init(P1_0, &pin_input_config_inv_pullup);
 181              	 .loc 1 170 0
 182 00a4 1C4F     	 ldr r7,.L7+12
 183 00a6 381C     	 mov r0,r7
 184 00a8 0021     	 mov r1,#0
 185 00aa 6A46     	 mov r2,sp
 186 00ac FFF7FEFF 	 bl XMC_GPIO_Init
 187              	.LVL14:
 171:../FF_Main.c  **** 	XMC_GPIO_Init(P1_1, &pin_input_config_inv_pullup);
 188              	 .loc 1 171 0
 189 00b0 381C     	 mov r0,r7
 190 00b2 0121     	 mov r1,#1
 191 00b4 6A46     	 mov r2,sp
 192 00b6 FFF7FEFF 	 bl XMC_GPIO_Init
 193              	.LVL15:
 172:../FF_Main.c  **** 	XMC_GPIO_Init(P1_2, &pin_input_config_inv_pullup);
 194              	 .loc 1 172 0
 195 00ba 381C     	 mov r0,r7
 196 00bc 0221     	 mov r1,#2
 197 00be 6A46     	 mov r2,sp
 198 00c0 FFF7FEFF 	 bl XMC_GPIO_Init
 199              	.LVL16:
 173:../FF_Main.c  **** 	XMC_GPIO_Init(P1_3, &pin_input_config_inv_pullup);
 200              	 .loc 1 173 0
 201 00c4 381C     	 mov r0,r7
 202 00c6 0321     	 mov r1,#3
 203 00c8 6A46     	 mov r2,sp
 204 00ca FFF7FEFF 	 bl XMC_GPIO_Init
 205              	.LVL17:
 174:../FF_Main.c  **** 	XMC_GPIO_Init(P1_4, &pin_input_config_inv_pullup);
 206              	 .loc 1 174 0
 207 00ce 381C     	 mov r0,r7
 208 00d0 0421     	 mov r1,#4
 209 00d2 6A46     	 mov r2,sp
 210 00d4 FFF7FEFF 	 bl XMC_GPIO_Init
 211              	.LVL18:
 175:../FF_Main.c  **** 	XMC_GPIO_Init(P1_5, &pin_input_config_inv_pullup);
 212              	 .loc 1 175 0
 213 00d8 381C     	 mov r0,r7
 214 00da 0521     	 mov r1,#5
 215 00dc 6A46     	 mov r2,sp
 216 00de FFF7FEFF 	 bl XMC_GPIO_Init
 217              	.LVL19:
 176:../FF_Main.c  **** 
 177:../FF_Main.c  **** 
 178:../FF_Main.c  **** 	/* TX Init */
 179:../FF_Main.c  **** 	XMC_GPIO_Init(P2_2, &pin_output_config_push_pull);
 218              	 .loc 1 179 0
 219 00e2 0B48     	 ldr r0,.L7+4
 220 00e4 0221     	 mov r1,#2
 221 00e6 221C     	 mov r2,r4
 222 00e8 FFF7FEFF 	 bl XMC_GPIO_Init
 223              	.LVL20:
 224              	.LBB44:
 225              	.LBB45:
 226              	 .file 2 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** {
 231:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
 235:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** }
 236:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 237:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 238:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 239:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 240:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 241:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 242:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 243:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 244:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 245:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *  Sets port pin output to high. It configures hardware registers Pn_OMR.
 246:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 247:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *  \par<b>Related APIs:</b><BR>
 248:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputLow()
 249:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 250:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 251:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().\n
 252:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 253:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 254:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 255:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 256:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 257:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** {
 258:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 259:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 260:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)0x1U << pin;
 227              	 .loc 2 260 0
 228 00ec 8023     	 mov r3,#128
 229 00ee 9B01     	 lsl r3,r3,#6
 230 00f0 6B60     	 str r3,[r5,#4]
 231              	.LVL21:
 232              	.LBE45:
 233              	.LBE44:
 234              	.LBB46:
 235              	.LBB47:
 236 00f2 0223     	 mov r3,#2
 237 00f4 6B60     	 str r3,[r5,#4]
 238              	.LVL22:
 239              	.LBE47:
 240              	.LBE46:
 241              	.LBB48:
 242              	.LBB49:
 243 00f6 0233     	 add r3,r3,#2
 244 00f8 6B60     	 str r3,[r5,#4]
 245              	.LVL23:
 246              	.LBE49:
 247              	.LBE48:
 248              	.LBB50:
 249              	.LBB51:
 261:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** }
 262:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 263:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 264:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 265:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 266:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	port pin number.
 267:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 268:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return  None
 269:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 270:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Description:</b><br>
 271:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets port pin output to low. It configures hardware registers Pn_OMR.\n
 272:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 273:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>>
 274:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh()
 275:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 276:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *\par<b>Note:</b><br>
 277:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 278:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value 
 279:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 280:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 281:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 282:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 283:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** {
 284:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 285:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 286:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10000U << pin;
 250              	 .loc 2 286 0
 251 00fa 8023     	 mov r3,#128
 252 00fc 1B03     	 lsl r3,r3,#12
 253 00fe 6B60     	 str r3,[r5,#4]
 254              	.LVL24:
 255              	.LBE51:
 256              	.LBE50:
 257              	.LBB52:
 258              	.LBB53:
 260:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** }
 259              	 .loc 2 260 0
 260 0100 1023     	 mov r3,#16
 261 0102 6B60     	 str r3,[r5,#4]
 262              	.LBE53:
 263              	.LBE52:
 180:../FF_Main.c  **** 
 181:../FF_Main.c  **** 
 182:../FF_Main.c  **** 
 183:../FF_Main.c  **** 	/* Disable Drive */
 184:../FF_Main.c  **** 	XMC_GPIO_SetOutputHigh(P0_13);
 185:../FF_Main.c  **** 	XMC_GPIO_SetOutputHigh(P0_1);
 186:../FF_Main.c  **** 	XMC_GPIO_SetOutputHigh(P0_2);
 187:../FF_Main.c  **** 
 188:../FF_Main.c  **** 	/* Disable TX  */
 189:../FF_Main.c  **** 	XMC_GPIO_SetOutputLow(P0_3);
 190:../FF_Main.c  **** 	XMC_GPIO_SetOutputHigh(P0_4);
 191:../FF_Main.c  **** 
 192:../FF_Main.c  **** 	ff_setup();
 264              	 .loc 1 192 0
 265 0104 FFF7FEFF 	 bl ff_setup
 266              	.LVL25:
 193:../FF_Main.c  **** }
 267              	 .loc 1 193 0
 268 0108 07B0     	 add sp,sp,#28
 269              	 
 270 010a F0BD     	 pop {r4,r5,r6,r7,pc}
 271              	.L8:
 272              	 .align 2
 273              	.L7:
 274 010c 00000000 	 .word .LANCHOR2
 275 0110 00020440 	 .word 1074004480
 276 0114 00000440 	 .word 1074003968
 277 0118 00010440 	 .word 1074004224
 278              	 .cfi_endproc
 279              	.LFE547:
 281              	 .section .text.ReverseBits,"ax",%progbits
 282              	 .align 2
 283              	 .global ReverseBits
 284              	 .code 16
 285              	 .thumb_func
 287              	ReverseBits:
 288              	.LFB548:
 194:../FF_Main.c  **** 
 195:../FF_Main.c  **** const XMC_SCU_CLOCK_CONFIG_t clock_config =
 196:../FF_Main.c  **** {
 197:../FF_Main.c  ****   .pclk_src = XMC_SCU_CLOCK_PCLKSRC_DOUBLE_MCLK, /*PCLK = 2*MCLK*/
 198:../FF_Main.c  ****   .rtc_src = XMC_SCU_CLOCK_RTCCLKSRC_DCO2,
 199:../FF_Main.c  ****   .fdiv = 0,  /**< Fractional divider */
 200:../FF_Main.c  ****   .idiv = 1,  /**MCLK = 32MHz */
 201:../FF_Main.c  **** };
 202:../FF_Main.c  **** 
 203:../FF_Main.c  **** unsigned char ReverseBits(uint8_t v)
 204:../FF_Main.c  **** {
 289              	 .loc 1 204 0
 290              	 .cfi_startproc
 291              	.LVL26:
 205:../FF_Main.c  ****     v = ((v >> 1) & 0x55) | ((v & 0x55) << 1);
 292              	 .loc 1 205 0
 293 0000 5522     	 mov r2,#85
 294 0002 131C     	 mov r3,r2
 295 0004 0340     	 and r3,r0
 296 0006 5B00     	 lsl r3,r3,#1
 297 0008 4008     	 lsr r0,r0,#1
 298              	.LVL27:
 299 000a 1040     	 and r0,r2
 300 000c 1843     	 orr r0,r3
 301              	.LVL28:
 206:../FF_Main.c  ****     v = ((v >> 2) & 0x33) | ((v & 0x33) << 2);
 302              	 .loc 1 206 0
 303 000e 223A     	 sub r2,r2,#34
 304 0010 131C     	 mov r3,r2
 305 0012 0340     	 and r3,r0
 306 0014 9B00     	 lsl r3,r3,#2
 307 0016 8008     	 lsr r0,r0,#2
 308              	.LVL29:
 309 0018 1040     	 and r0,r2
 310 001a 1843     	 orr r0,r3
 311              	.LVL30:
 207:../FF_Main.c  ****     v = ((v >> 4) & 0x0F) | ((v & 0x0F) << 4);
 312              	 .loc 1 207 0
 313 001c 0301     	 lsl r3,r0,#4
 314 001e 0009     	 lsr r0,r0,#4
 315              	.LVL31:
 316 0020 1843     	 orr r0,r3
 317 0022 C0B2     	 uxtb r0,r0
 318              	.LVL32:
 208:../FF_Main.c  ****     return v;
 209:../FF_Main.c  **** }
 319              	 .loc 1 209 0
 320              	 
 321 0024 7047     	 bx lr
 322              	 .cfi_endproc
 323              	.LFE548:
 325 0026 C046     	 .section .text.ReadDipSwitch,"ax",%progbits
 326              	 .align 2
 327              	 .global ReadDipSwitch
 328              	 .code 16
 329              	 .thumb_func
 331              	ReadDipSwitch:
 332              	.LFB549:
 210:../FF_Main.c  **** 
 211:../FF_Main.c  **** uint8_t ReadDipSwitch( void ){
 333              	 .loc 1 211 0
 334              	 .cfi_startproc
 335 0000 08B5     	 push {r3,lr}
 336              	.LCFI3:
 337              	 .cfi_def_cfa_offset 8
 338              	 .cfi_offset 3,-8
 339              	 .cfi_offset 14,-4
 212:../FF_Main.c  **** 
 213:../FF_Main.c  **** uint8_t Value = ((PORT2->IN & 0x00000FF0)>>4);
 340              	 .loc 1 213 0
 341 0002 044B     	 ldr r3,.L11
 342 0004 586A     	 ldr r0,[r3,#36]
 343 0006 0005     	 lsl r0,r0,#20
 344 0008 000E     	 lsr r0,r0,#24
 345              	.LVL33:
 214:../FF_Main.c  **** /* Change bits as someone may need to read more */
 215:../FF_Main.c  **** Value=ReverseBits(Value);
 346              	 .loc 1 215 0
 347 000a FFF7FEFF 	 bl ReverseBits
 348              	.LVL34:
 216:../FF_Main.c  **** Value=~Value;
 349              	 .loc 1 216 0
 350 000e C043     	 mvn r0,r0
 351              	.LVL35:
 352 0010 C0B2     	 uxtb r0,r0
 353              	.LVL36:
 217:../FF_Main.c  **** return Value;
 218:../FF_Main.c  **** 
 219:../FF_Main.c  **** }
 354              	 .loc 1 219 0
 355              	 
 356 0012 08BD     	 pop {r3,pc}
 357              	.L12:
 358              	 .align 2
 359              	.L11:
 360 0014 00020440 	 .word 1074004480
 361              	 .cfi_endproc
 362              	.LFE549:
 364              	 .section .text.__delay_ms,"ax",%progbits
 365              	 .align 2
 366              	 .global __delay_ms
 367              	 .code 16
 368              	 .thumb_func
 370              	__delay_ms:
 371              	.LFB550:
 220:../FF_Main.c  **** 
 221:../FF_Main.c  **** void __delay_ms(uint32_t d){
 372              	 .loc 1 221 0
 373              	 .cfi_startproc
 374              	.LVL37:
 222:../FF_Main.c  **** 
 223:../FF_Main.c  **** 	while(Delay_x!=d){
 375              	 .loc 1 223 0
 376 0000 01E0     	 b .L14
 377              	.L15:
 224:../FF_Main.c  **** 		  Delay_x=d;
 378              	 .loc 1 224 0
 379 0002 064B     	 ldr r3,.L18
 380 0004 1860     	 str r0,[r3]
 381              	.L14:
 223:../FF_Main.c  **** 		  Delay_x=d;
 382              	 .loc 1 223 0
 383 0006 054B     	 ldr r3,.L18
 384 0008 1B68     	 ldr r3,[r3]
 385 000a 8342     	 cmp r3,r0
 386 000c F9D1     	 bne .L15
 387 000e 00E0     	 b .L16
 388              	.L17:
 225:../FF_Main.c  **** 	  }
 226:../FF_Main.c  **** 
 227:../FF_Main.c  **** 	  while(Delay_x>0){
 228:../FF_Main.c  **** 		  __NOP();
 389              	 .loc 1 228 0
 390              	
 391 0010 C046     	 nop
 392              	
 393              	 .code 16
 394              	.L16:
 227:../FF_Main.c  **** 		  __NOP();
 395              	 .loc 1 227 0
 396 0012 024B     	 ldr r3,.L18
 397 0014 1B68     	 ldr r3,[r3]
 398 0016 002B     	 cmp r3,#0
 399 0018 FAD1     	 bne .L17
 229:../FF_Main.c  **** 	  }
 230:../FF_Main.c  **** 
 231:../FF_Main.c  **** }
 400              	 .loc 1 231 0
 401              	 
 402 001a 7047     	 bx lr
 403              	.L19:
 404              	 .align 2
 405              	.L18:
 406 001c 00000000 	 .word .LANCHOR0
 407              	 .cfi_endproc
 408              	.LFE550:
 410              	 .global __aeabi_uidiv
 411              	 .section .text.main,"ax",%progbits
 412              	 .align 2
 413              	 .global main
 414              	 .code 16
 415              	 .thumb_func
 417              	main:
 418              	.LFB551:
 232:../FF_Main.c  **** volatile uint8_t u8Address=0;
 233:../FF_Main.c  **** int main(void)
 234:../FF_Main.c  **** {
 419              	 .loc 1 234 0
 420              	 .cfi_startproc
 421 0000 30B5     	 push {r4,r5,lr}
 422              	.LCFI4:
 423              	 .cfi_def_cfa_offset 12
 424              	 .cfi_offset 4,-12
 425              	 .cfi_offset 5,-8
 426              	 .cfi_offset 14,-4
 427 0002 83B0     	 sub sp,sp,#12
 428              	.LCFI5:
 429              	 .cfi_def_cfa_offset 24
 430              	.LVL38:
 235:../FF_Main.c  **** 	uint32_t Delay = 0xFFFF;
 236:../FF_Main.c  **** 	uint8_t u8DIPSwitch=0;
 237:../FF_Main.c  **** 	/* Ensure clock frequency is set at 64MHz (MCLK) */
 238:../FF_Main.c  **** 	XMC_SCU_CLOCK_Init(&clock_config);
 431              	 .loc 1 238 0
 432 0004 4848     	 ldr r0,.L30
 433 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_Init
 434              	.LVL39:
 239:../FF_Main.c  **** 
 240:../FF_Main.c  **** 	/* Ensure fCCU reaches CCU40 */
 241:../FF_Main.c  **** 		XMC_CCU4_SetModuleClock(MODULE_PTR, XMC_CCU4_CLOCK_SCU);
 435              	 .loc 1 241 0
 436 000a 484C     	 ldr r4,.L30+4
 437 000c 201C     	 mov r0,r4
 438 000e 0021     	 mov r1,#0
 439 0010 FFF7FEFF 	 bl XMC_CCU4_SetModuleClock
 440              	.LVL40:
 242:../FF_Main.c  **** 		XMC_CCU4_Init(MODULE_PTR, XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR);
 441              	 .loc 1 242 0
 442 0014 201C     	 mov r0,r4
 443 0016 0021     	 mov r1,#0
 444 0018 FFF7FEFF 	 bl XMC_CCU4_Init
 445              	.LVL41:
 446              	.LBB80:
 447              	.LBB81:
 448              	 .file 3 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc/xmc_ccu4.h"
   1:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
   2:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @file xmc_ccu4.h
   3:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @date 2017-04-27
   4:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
   5:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @cond
   6:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
   7:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
   9:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * All rights reserved.                        
  11:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                             
  12:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * following conditions are met:   
  14:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  15:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * disclaimer.                        
  17:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  18:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  21:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  24:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  32:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  35:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  36:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Change History
  37:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * --------------
  38:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  39:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-02-20:
  40:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Initial <br>
  41:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Documentation updates <br>
  42:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  43:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-06-20:
  44:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  46:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-07-22:
  47:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  48:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  49:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-08-17:
  50:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  51:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t enum item names are updated according to the guideli
  52:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  53:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  54:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-09-29:
  55:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - In XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  56:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *       settings.
  57:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  58:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2015-10-07:
  59:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  60:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU4_SLICE_EnableMultipleEvents(
  61:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *       XMC_CCU4_SLICE_DisableMultipleEvents() APIs.
  62:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - DOC updates for the newly added APIs.
  63:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  64:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2016-03-09:
  65:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Optimization of write only registers 
  66:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  67:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2016-05-20:
  68:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Added XMC_CCU4_SLICE_StopClearTimer()
  69:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - Changed implementation of XMC_CCU4_SLICE_StopTimer() and XMC_CCU4_SLICE_ClearTimer() to av
  70:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
  71:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2017-04-27:
  72:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU4_SLICE_PRESCALER_t
  73:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
  74:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @endcond
  75:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
  76:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  77:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #ifndef XMC_CCU4_H
  78:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_H
  79:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  
  80:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
  81:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * HEADER FILES
  82:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  83:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #include "xmc_common.h"
  84:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40)
  85:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  86:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC1
  87:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  #include "xmc1_ccu4_map.h"
  88:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
  89:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  90:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC4
  91:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  #include "xmc4_ccu4_map.h"
  92:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
  93:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
  94:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
  95:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup XMClib XMC Peripheral Library
  96:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @{
  97:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
  98:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  
  99:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 100:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup CCU4
 101:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @brief Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<br>
 102:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 103:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The CCU4 peripheral is a major component for systems that need general purpose timers for signal
 104:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic con
 105:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * switched mode power supplies or interruptible power supplies, can easily be implemented with the
 106:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CCU4 peripheral.\n
 107:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where
 108:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * timer slice can work in compare mode or in capture mode.
 109:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 110:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * APIs provided in this file cover the following functional blocks of CCU4:\n
 111:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 112:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Note:
 113:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)
 114:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU4_)
 115:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 116:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Timer(Compare mode) configuration:
 117:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_COMPARE_CONFIG_t and
 118:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CompareInit().
 119:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 120:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 121:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Start and Stop the timer. (XMC_CCU4_SLICE_StartTimer(), XMC_CCU4_SLICE_StopTimer())
 122:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU4_SLICE_SetTimerPe
 123:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetTimerCompareMatch(), XMC_CCU4_SLICE_SetPrescaler(), XMC_CCU4_SLICE_SetDithe
 124:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetPassiveLevel())
 125:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU4_SLICE_EnableMultiChannelMode())
 126:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 127:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Capture configuration:
 128:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_CAPTURE_CONFIG_t and
 129:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CaptureInit().
 130:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 131:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 132:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Configure the capture functionality. (XMC_CCU4_SLICE_Capture0Config(), XMC_CCU4_SLICE_Capture
 133:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 134:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    (XMC_CCU4_SLICE_GetCaptureRegisterValue())
 135:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 136:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Function/Event configuration:
 137:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_EVENT_CONFIG_t.\n
 138:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 139:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 140:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Enable and Disable the events. (XMC_CCU4_SLICE_EnableEvent(), XMC_CCU4_SLICE_DisableEvent())
 141:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU4_SLICE_StartConfig(), XMC_C
 142:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU4_SLICE_ModulationConfig(), 
 143:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_LoadConfig(), XMC_CCU4_SLICE_GateConfig())
 144:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU4_SLICE_Directi
 145:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# Count the external events.(XMC_CCU4_SLICE_CountConfig())
 146:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU4_SLICE_EnableTrap(), XMC_CCU4
 147:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_TrapConfig())
 148:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 149:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par Interrupt configuration:
 150:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 151:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @{
 152:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 153:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  
 154:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 155:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * MACROS
 156:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 157:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /* Macro to check if the interrupt enum passed is valid */
 158:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_CHECK_INTERRUPT(interrupt) \
 159:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****     ((interrupt == XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 160:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH)              || \
 161:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP)  || \
 162:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN)|| \
 163:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT0)                 || \
 164:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT1)                 || \
 165:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT2)                 || \
 166:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_TRAP))
 167:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 168:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 169:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * ENUMS
 170:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 171:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 172:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 173:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Global data structure
 174:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 175:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t;
 176:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 177:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 178:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Slice data structure
 179:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 180:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t;
 181:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 182:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 183:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Return Value of an API
 184:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 185:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_STATUS
 186:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 187:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_OK      = 0U, /**< API fulfils request */
 188:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_ERROR       , /**< API cannot fulfil the request */
 189:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_RUNNING     , /**< The timer slice is currently running */
 190:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_IDLE          /**< The timer slice is currently idle */
 191:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_STATUS_t;
 192:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 193:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 194:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  CCU4 module clock
 195:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 196:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_CLOCK
 197:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 198:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 199:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_A     , /**< External clock-A */
 200:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_B     , /**< External clock-B */
 201:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_C       /**< External clock-C */
 202:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_CLOCK_t;
 203:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 204:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 205:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CCU4 set the shadow transfer type for multichannel mode
 206:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 207:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER
 208:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 209:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 210:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 211:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 212:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 213:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 214:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 215:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 216:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 217:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 218:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 219:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 220:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 221:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 222:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 223:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 224:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 225:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 226:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 227:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 228:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Operational modes of CCU4 slice
 229:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 230:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODE
 231:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 232:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_COMPARE  = 0U, /**< slice(CC4y) operates in Compare Mode */
 233:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_CAPTURE        /**< slice(CC4y) operates in Capture Mode */
 234:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODE_t;
 235:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 236:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 237:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer counting modes for the slice
 238:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 239:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_MODE
 240:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 241:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 242:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA        /**< Center Aligned Mode */
 243:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_MODE_t;
 244:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 245:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 246:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer repetition mode for the slice
 247:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 248:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_REPEAT_MODE
 249:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 250:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U,  /**< Repetitive mode: continuous mode of operation
 251:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE        /**< Single shot mode: Once a Period match/One mat
 252:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                       occurs timer goes to idle state */
 253:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t;
 254:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 255:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 256:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer counting direction for the CCU4 slice
 257:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 258:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_DIR
 259:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 260:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 261:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 262:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_DIR_t;
 263:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 264:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 265:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Capture mode register sets
 266:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 267:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_CAP_REG_SET
 268:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 269:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 270:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_HIGH       /**< Capture register-2, Capture register-3 used */
 271:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAP_REG_SET_t;
 272:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 273:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 274:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Prescaler mode
 275:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 276:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER_MODE
 277:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 278:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 279:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider. */
 280:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_MODE_t;
 281:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 282:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 283:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer output passive level
 284:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 285:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL
 286:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 287:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 288:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 289:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 290:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 291:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 292:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer clock Divider
 293:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 294:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER
 295:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 296:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu4 */
 297:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2      , /**< Slice Clock = fccu4/2 */
 298:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4      , /**< Slice Clock = fccu4/4 */
 299:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8      , /**< Slice Clock = fccu4/8 */
 300:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16     , /**< Slice Clock = fccu4/16 */
 301:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32     , /**< Slice Clock = fccu4/32 */
 302:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_64     , /**< Slice Clock = fccu4/64 */
 303:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_128    , /**< Slice Clock = fccu4/128 */
 304:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_256    , /**< Slice Clock = fccu4/256 */
 305:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_512    , /**< Slice Clock = fccu4/512 */
 306:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu4/1024 */
 307:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu4/2048 */
 308:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu4/4096 */
 309:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu4/8192 */
 310:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu4/16384 */
 311:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32768    /**< Slice Clock = fccu4/32768 */
 312:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_t;
 313:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 314:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 315:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Function list
 316:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 317:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_FUNCTION
 318:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 319:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_START           = 0U, /**< Start function */
 320:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_STOP                , /**< Stop function */
 321:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 322:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 323:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 324:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 325:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_GATING              , /**< Gating function */
 326:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 327:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_LOAD                , /**< Load function */
 328:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_COUNT               , /**< Counting function */
 329:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 330:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 331:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_TRAP                  /**< Trap function */
 332:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_FUNCTION_t;
 333:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 334:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 335:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event list
 336:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 337:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT
 338:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 339:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_NONE  = 0U, /**< None */
 340:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_0         , /**< Event-0 */
 341:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_1         , /**< Event-1 */
 342:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_2           /**< Event-2 */
 343:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_t;
 344:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 345:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 346:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Edge sensitivity
 347:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 348:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY
 349:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 350:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE         = 0U, /**< None */
 351:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE      , /**< Rising Edge of the input signal gen
 352:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE     , /**< Falling Edge of the input signal ge
 353:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 trigger */
 354:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE          /**< Both Rising and Falling edges cause
 355:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t;
 356:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 357:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 358:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Level sensitivity
 359:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 360:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY
 361:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 362:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 363:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 364:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   /* Below enum items can be utilised specific to the functionality */
 365:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 366:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 367:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 368:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 369:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 370:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 371:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 372:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_FILTER
 373:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 374:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filter */
 375:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES      , /**< 3 clock cycles */
 376:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES      , /**< 5 clock cycles */
 377:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES        /**< 7 clock cycles */
 378:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_FILTER_t;
 379:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 380:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 381:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU4 slice.
 382:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Interconnects are specific to each device.
 383:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 384:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef uint8_t XMC_CCU4_SLICE_INPUT_t;
 385:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 386:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 387:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 388:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 389:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_END_MODE
 390:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 391:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 392:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 393:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 394:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_END_MODE_t;
 395:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 396:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 397:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Actions that can be performed upon detection of an external Timer START event
 398:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 399:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_START_MODE
 400:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 401:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 402:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 403:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_START_MODE_t;
 404:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 405:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 406:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Modulation of timer output signals
 407:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 408:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODULATION_MODE
 409:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 410:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 411:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 412:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODULATION_MODE_t;
 413:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 414:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 415:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Trap exit mode
 416:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 417:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TRAP_EXIT_MODE
 418:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 419:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 420:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 421:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TRAP_EXIT_MODE_t;
 422:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 423:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 424:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Timer clear on capture
 425:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 426:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_CLEAR_MODE
 427:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 428:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 429:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 430:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 431:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 432:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t;
 433:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 434:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 435:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Multi Channel Shadow transfer request configuration options
 436:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 437:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MCMS_ACTION
 438:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 439:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 440:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 the actual registers upon MCS xfer 
 441:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 442:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 register values to the actual regis
 443:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 request */
 444:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 445:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 Compare register values to the actu
 446:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                 MCS xfer request */
 447:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MCMS_ACTION_t;
 448:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 449:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 450:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids
 451:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 452:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_IRQ_ID
 453:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 454:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH       = 0U , /**< Period match counting up */
 455:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH          = 1U , /**< Period match -> One match counting down */
 456:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP   = 2U , /**< Compare match counting up */
 457:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN = 3U , /**< Compare match counting down */
 458:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT0             = 8U , /**< Event-0 occurrence */
 459:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT1             = 9U , /**< Event-1 occurrence */
 460:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT2             = 10U, /**< Event-2 occurrence */
 461:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_TRAP               = 11U  /**< Trap occurrence */
 462:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_IRQ_ID_t;
 463:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 464:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 465:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 466:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 467:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MULTI_IRQ_ID
 468:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 469:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_PERIOD_MATCH       = 0x1U,   /**< Period match counting up */
 470:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_ONE_MATCH          = 0x2U,   /**< Period match -> One match counting 
 471:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP   = 0x4U,   /**< Compare match counting up */
 472:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN = 0x8U,   /**< Compare match counting down */
 473:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT0             = 0x100U, /**< Event-0 occurrence */
 474:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT1             = 0x200U, /**< Event-1 occurrence */
 475:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT2             = 0x400U, /**< Event-2 occurrence */
 476:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MULTI_IRQ_ID_t;
 477:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 478:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 479:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generat
 480:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 481:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SR_ID
 482:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 483:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 484:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 485:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 486:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 487:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SR_ID_t;
 488:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 489:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 490:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer options.
 491:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 492:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SHADOW_TRANSFER
 493:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 494:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_0            = CCU4_GCSS_S0SE_Msk, /**< Transfer Period, Compare a
 495:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 496:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-0 */
 497:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU4_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 498:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 499:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU4_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 500:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 501:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_1            = CCU4_GCSS_S1SE_Msk, /**< Transfer Period, Compare a
 502:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 503:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-1 */
 504:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU4_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 505:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual registers for S
 506:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU4_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 507:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 508:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_2            = CCU4_GCSS_S2SE_Msk, /**< Transfer Period, Compare a
 509:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 510:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-2 */
 511:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU4_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 512:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 513:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU4_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 514:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 515:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_3            = CCU4_GCSS_S3SE_Msk, /**< Transfer Period, Compare a
 516:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 517:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-3 */
 518:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU4_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 519:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 520:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU4_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 521:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 522:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SHADOW_TRANSFER_t;
 523:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 524:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V3) || defined(DOXYGEN)/* Defined for XMC1400 devices only */
 525:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 526:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer mode options.
 527:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @note Only available for XMC1400 series
 528:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 529:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE
 530:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 531:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U,  /**< Shadow transfer is 
 532:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                 One match. */
 533:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 534:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 535:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t; 
 536:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 537:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 538:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 539:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Immediate write into configuration register
 540:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 541:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 542:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_WRITE_INTO
 543:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 544:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU4_CC4_STC_IRPC_Msk,                  /**< Imm
 545:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 546:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 547:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_COMPARE_CONFIGURATION = CCU4_CC4_STC_IRCC_Msk,                 /**< Imm
 548:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 549:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 550:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU4_CC4_STC_IRLC_Msk,           /**< Imm
 551:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 552:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 553:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRDC_Msk,            /**< Imm
 554:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 555:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 556:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRFC_Msk /**< Imm
 557:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 558:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Val
 559:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_WRITE_INTO_t;
 560:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 561:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 562:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 563:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 564:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 565:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 566:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 567:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 568:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU4_CC4_STC_ASPC_Msk,        
 569:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 570:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 571:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 572:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE_SHADOW = CCU4_CC4_STC_ASCC_Msk,       
 573:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 574:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 575:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 576:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU4_CC4_STC_ASLC_Msk,        
 577:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 578:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 579:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU4_CC4_STC_ASDC_Msk,        
 580:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 581:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 582:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU4_CC4_STC_ASFC_
 583:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 584:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 585:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 586:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 587:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 588:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 589:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 590:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Used to create Mask needed for Multi-channel Shadow transfer enable/disable
 591:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 592:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MASK
 593:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 594:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 595:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 596:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 597:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 598:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MASK_t;
 599:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 600:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 601:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 602:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * DATA STRUCTURES
 603:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 604:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 605:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 606:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 607:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Needed to configure the various aspects of an External Event.
 608:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This structure will not connect the external event with an external function.
 609:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 610:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_EVENT_CONFIG
 611:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 612:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event *
 613:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 614:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an edge sensitive 
 615:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 616:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an level sensitive
 617:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 618:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_CONFIG_t;
 619:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 620:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard start*/
 621:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 622:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma push
 623:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma anon_unions
 624:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 625:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma warning 586
 626:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 627:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 628:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 629:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to compare 
 630:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 631:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 632:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_COMPARE_CONFIG
 633:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 634:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   union
 635:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   {
 636:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****     struct
 637:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****     {
 638:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 639:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t */
 640:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 641:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t*/
 642:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t shadow_xfer_clear : 1;  /**< Should PR and CR shadow xfer happen when timer is clear
 643:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 10;
 644:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 645:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 646:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 1;
 647:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 648:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_PRESCALER_MODE_t*/
 649:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 8;
 650:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t mcm_enable : 1;         /**< Multi-Channel mode enable? */
 651:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 6;
 652:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****     };
 653:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 654:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   };
 655:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 656:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                             Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t */
 657:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 658:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering */
 659:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t passive_level : 1;          /**< Configuration of ST and OUT passive levels.
 660:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t*
 661:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true.*/
 662:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_COMPARE_CONFIG_t;
 663:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 664:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 665:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to capture 
 666:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 667:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */ 
 668:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_CAPTURE_CONFIG
 669:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 670:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   union
 671:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   {
 672:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****     struct
 673:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****     {
 674:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 675:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 676:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 677:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                           Accepts enum ::XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t*/
 678:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 679:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 680:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 681:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 3;
 682:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU4_SLI
 683:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 15;
 684:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****     };
 685:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 686:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   };
 687:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 688:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 689:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;  /**< Enables the concatenation of the timer */
 690:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAPTURE_CONFIG_t;
 691:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard end*/
 692:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 693:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma pop
 694:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 695:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   #pragma warning restore
 696:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 697:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 698:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * API Prototypes
 699:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 700:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 701:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #ifdef __cplusplus
 702:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** extern "C" {
 703:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 704:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 705:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidModule(const XMC_CCU4_MODULE_t *const module)
 706:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 707:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 708:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 709:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = (module == CCU40);
 710:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 711:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41) 
 712:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU41);
 713:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 714:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 715:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)
 716:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU42);
 717:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 718:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 719:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)
 720:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU43);
 721:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 722:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 723:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 724:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } 
 725:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 726:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidSlice(const XMC_CCU4_SLICE_t *const slice)
 727:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 728:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 729:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 730:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = (slice == CCU40_CC40);
 731:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC41)  
 732:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC41);
 733:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 734:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC42)  
 735:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC42);
 736:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 737:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC43)  
 738:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC43);
 739:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 740:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41)  
 741:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC40);
 742:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC41)  
 743:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC41);
 744:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 745:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC42)  
 746:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC42);
 747:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 748:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC43)  
 749:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC43);
 750:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 751:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif 
 752:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)  
 753:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC40);
 754:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC41)  
 755:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC41);
 756:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 757:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC42)  
 758:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC42);
 759:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 760:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC43)  
 761:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC43);
 762:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 763:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 764:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)  
 765:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC40);
 766:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC41)  
 767:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC41);
 768:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 769:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC42)  
 770:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC42);
 771:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 772:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC43)  
 773:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC43);
 774:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
 775:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif 
 776:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 777:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 778:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** } 
 779:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 780:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 781:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 782:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mcs_action multi-channel shadow transfer request configuration
 783:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 784:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 785:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 786:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 787:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Initialization of global register GCTRL.<br>\n
 788:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  As part of module initialization, behaviour of the module upon detection
 789:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU4_EnableModule().
 790:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  The API call would bring up the required CCU4 module and also initialize the module for
 791:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  the required multi-channel shadow transfer.
 792:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 793:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 794:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
 795:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 796:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action);
 797:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 798:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 799:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 800:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param clock Choice of input clock to the module
 801:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 802:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 803:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 804:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 805:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.<BR>\n
 806:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
 807:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Call to this API is valid after the XMC_CCU4_Init().
 808:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 809:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 810:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.<BR>
 811:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 812:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock);
 813:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 814:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 815:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 816:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 817:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 818:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 819:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 820:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the CCU4 module and brings it to active state.<BR>\n
 821:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
 822:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API before any operations are done on the CCU4 module. Invoked from  XMC_CCU4_Init()
 823:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 824:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 825:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SetModuleClock()<BR> XMC_CCU4_DisableModule()<BR> XMC_CCU4_StartPrescaler().
 826:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 827:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module);
 828:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 829:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 830:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 831:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 832:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 833:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 834:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 835:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depen
 836:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * on the device being selected).<BR>\n
 837:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API when a CCU4 module needs to be disabled completely.
 838:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Any operation on the CCU4 module will have no effect after this API is called.
 839:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 840:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 841:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableModule()<BR> XMC_CCU4_DisableModule().
 842:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 843:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module);
 844:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 845:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 846:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 847:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 848:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 849:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 850:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 851:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<BR>\n
 852:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
 853:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU4_Init()
 854:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  (Mandatory to fully initialize the module).Directly accessed register is GIDLC.
 855:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 856:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 857:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescal
 858:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StopPrescaler().
 859:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 860:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
 861:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 862:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 863:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) CCU4_GIDLC_SPRB_Msk;
 864:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 865:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 866:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 867:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 868:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 869:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 870:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 871:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 872:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<BR>\n
 873:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Opposite of the StartPrescaler routine.
 874:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
 875:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the slices of the module.Registers directly accessed is GIDLS.
 876:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 877:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 878:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_St
 879:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 880:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StopPrescaler(XMC_CCU4_MODULE_t *const module)
 881:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 882:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StopPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 883:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= (uint32_t) CCU4_GIDLS_CPRB_Msk;
 884:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 885:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 886:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 887:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 888:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 889:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 890:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 891:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 892:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.<BR>\n
 893:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This will return true if the prescaler is running. If clock is being supplied to the slices of t
 894:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * module then returns as true.
 895:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 896:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 897:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_StopPrescaler()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_D
 898:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 899:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsPrescalerRunning(XMC_CCU4_MODULE_t *const module)
 900:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 901:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 902:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((bool)((module->GSTAT & (uint32_t) CCU4_GSTAT_PRB_Msk) == (uint32_t)CCU4_GSTAT_PRB_Msk));
 903:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 904:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 905:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 906:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 907:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
 908:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
 909:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x1 to 0xF]
 910:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 911:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 912:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 913:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 914:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 915:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GIDLC.CS3I bits.\n\n
 916:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
 917:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * of the idle state simultaneously.
 918:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 919:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 920:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock().
 921:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 922:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableMultipleClocks(XMC_CCU4_MODULE_t *const module, const uint8_t c
 923:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 924:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
 925:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Wrong clock mask", (clock_mask < 16U));
 926:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   
 927:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) clock_mask;
 928:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 929:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 930:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 931:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 932:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be Enabled.
 933:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 934:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 935:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 936:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 937:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 938:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 939:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
 940:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
 941:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  slice whose clock needs to be enabled.
 942:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 943:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 944:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_DisableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XM
 945:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 946:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_numb
 947:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 948:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 949:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Slice Number", (slice_number < 4U));
 950:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 951:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= ((uint32_t) 1) << slice_number;
 449              	 .loc 3 951 0
 450 001c E268     	 ldr r2,[r4,#12]
 451 001e 0123     	 mov r3,#1
 452 0020 1343     	 orr r3,r2
 453 0022 E360     	 str r3,[r4,#12]
 454              	.LVL42:
 455              	.LBE81:
 456              	.LBE80:
 457              	.LBB82:
 458              	.LBB83:
 863:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 459              	 .loc 3 863 0
 460 0024 E368     	 ldr r3,[r4,#12]
 461 0026 8022     	 mov r2,#128
 462 0028 5200     	 lsl r2,r2,#1
 463 002a 1343     	 orr r3,r2
 464 002c E360     	 str r3,[r4,#12]
 465              	.LBE83:
 466              	.LBE82:
 243:../FF_Main.c  **** 
 244:../FF_Main.c  **** 		/* Get the slice out of idle mode */
 245:../FF_Main.c  **** 		XMC_CCU4_EnableClock(MODULE_PTR, SLICE_NUMBER);
 246:../FF_Main.c  **** 
 247:../FF_Main.c  **** 		/* Start the prescaler and restore clocks to slices */
 248:../FF_Main.c  **** 		XMC_CCU4_StartPrescaler(MODULE_PTR);
 249:../FF_Main.c  **** 
 250:../FF_Main.c  **** 		/* Initialize the Slice */
 251:../FF_Main.c  **** 		XMC_CCU4_SLICE_CompareInit(SLICE_PTR, &compare_config);
 467              	 .loc 1 251 0
 468 002e 404D     	 ldr r5,.L30+8
 469 0030 281C     	 mov r0,r5
 470 0032 4049     	 ldr r1,.L30+12
 471 0034 FFF7FEFF 	 bl XMC_CCU4_SLICE_CompareInit
 472              	.LVL43:
 473              	.LBB84:
 474              	.LBB85:
 952:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 953:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 954:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 955:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 956:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be disabled.
 957:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 958:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 959:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 960:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
 961:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 962:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
 963:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
 964:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is possible to disable clock at slice level using the module pointer.
 965:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
 966:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GIDLS.
 967:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 968:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 969:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XMC
 970:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 971:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_DisableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_num
 972:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
 973:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 974:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Slice Number", (slice_number < 4U));
 975:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 976:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= ((uint32_t) 1) << slice_number;
 977:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 978:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 979:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 980:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 981:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param compare_init Pointer to slice configuration structure
 982:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 983:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 984:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 985:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 986:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH
 987:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yFPCS, CC4yCHC registers.\n\n 
 988:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Timer configurations in this routine.
 989:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After initialization user has to explicitly enable the shadow transfer for the required values b
 990:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask.
 991:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
 992:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 993:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * None.
 994:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
 995:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 996:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init);
 997:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
 998:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
 999:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1000:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param capture_init Pointer to slice configuration structure
1001:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1002:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1003:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1004:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1005:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS 
1006:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Capture configurations in  this routine.After initialization user h
1007:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * enable the shadow transfer for the required  values by calling XMC_CCU4_EnableShadowTransfer()
1008:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * with appropriate mask.
1009:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1010:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1011:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config().
1012:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1013:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
1014:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init);
1015:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1016:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1017:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1018:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1019:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Start Function
1020:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param start_mode Behavior of slice when the start function is activated
1021:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1022:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1023:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1024:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1025:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.\n
1026:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC4 ti
1027:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1028:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1029:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1030:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1031:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1032:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
1033:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_EVENT_t event,
1034:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode);
1035:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1036:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1037:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1038:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Stop Function
1039:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param end_mode Behavior of slice when the stop function is activated
1040:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1041:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1042:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1043:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1044:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.\n
1045:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 tim
1046:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1047:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1048:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1049:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1050:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1051:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
1052:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_EVENT_t event,
1053:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode);
1054:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1055:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1056:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1057:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External load Function
1058:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1059:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1060:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1061:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1062:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.\n\n
1063:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1064:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register\n
1065:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register\n
1066:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1067:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1068:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1069:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1070:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1071:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1072:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1073:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1074:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1075:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Modulation Function
1076:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mod_mode Desired Modulation mode
1077:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1078:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1079:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1080:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1081:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1082:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1083:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT a
1084:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.EMS bits.\n\n
1085:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1086:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1087:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * of the modulation function is configured as well.
1088:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1089:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1090:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1091:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1092:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
1093:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_EVENT_t event,
1094:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
1095:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                      const bool synch_with_pwm);
1096:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1097:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1098:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1099:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Function
1100:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1101:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1102:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1103:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1104:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.\n\n
1105:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Count function is mapped with one of the 3 events. CCU4 slice can take an external
1106:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * signal to act as the counting event. The CCU4 slice would count the
1107:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * edges present on the \b event selected.
1108:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1109:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1110:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1111:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1112:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1113:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1114:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1115:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1116:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event  Map an External event to the External Gating Function
1117:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1118:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1119:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1120:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1121:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.\n\n
1122:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Gating function is mapped with one of the 3 events.  A CCU4 slice can use an input signal that w
1123:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1124:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1125:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1126:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1127:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1128:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1129:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1130:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1131:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1132:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-0 Function
1133:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1134:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1135:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1136:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1137:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.\n\n
1138:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events.  A CCU4 slice can be configured into captur
1139:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC0V and 
1140:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1141:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1142:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1143:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1144:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1145:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1146:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1147:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1148:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-1 Function
1149:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1150:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1151:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1152:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1153:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.\n\n
1154:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture
1155:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC2V
1156:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1157:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1158:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1159:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1160:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1161:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1162:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1163:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1164:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1165:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1166:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1167:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1168:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.E
1169:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * In this mode the there is only one associated read address for all the capture registers.
1170:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Individual capture registers can still be accessed in this mode.
1171:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1172:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1173:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_GetCapturedValueFromFifo().
1174:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1175:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled(const XMC_CCU4_SLICE_t *const slice)
1176:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1177:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_IsExtendedCapReadEnabled:Invalid Module Pointer", XMC_CCU4_IsValidSlic
1178:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((bool)((slice->TC & (uint32_t) CCU4_CC4_TC_ECM_Msk) == (uint32_t)CCU4_CC4_TC_ECM_Msk));
1179:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1180:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1181:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V1) /* Defined for XMC4500, XMC4400, XMC4200, XMC4100 devices only */
1182:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1183:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1184:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number to check whether read value belongs to required slice or not
1185:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1186:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1187:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1188:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                     Range: [0x0 to 0xFFFF]
1189:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1190:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1191:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(ECRD register).\n\n
1192:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1193:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1194:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1195:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1196:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1197:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1198:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1199:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC4500, XMC4400, XMC4200 and XMC4100 series 
1200:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1201:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
1202:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #else
1203:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1204:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1205:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param set The capture register set from which the captured value is to be retrieved
1206:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1207:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t Returns the value captured in the \b slice_number
1208:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *             Range: [0x0 to 0xFFFF]
1209:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1210:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1211:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).\n\n
1212:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1213:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1214:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1215:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1216:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1217:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1218:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1219:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1220:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1221:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1222:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                             const XMC_CCU4_SLICE_CAP_REG_SET_t set);
1223:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** #endif
1224:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1225:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1226:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1227:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Direction Function
1228:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1229:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1230:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1231:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1232:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.\n\n
1233:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1234:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTIMER count direction depending on an external signal.
1235:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1236:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1237:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1238:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1239:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
1240:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1241:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1242:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1243:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1244:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1245:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1246:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1247:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.\n\n
1248:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1249:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * output of the timer's CC4yST signal depending on an external signal. 
1250:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1251:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1252:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent().
1253:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1254:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice);
1255:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1256:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1257:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1258:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param exit_mode How should a previously logged trap state be exited?
1259:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1260:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1261:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1262:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1263:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1264:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.T
1265:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1266:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1267:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1268:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1269:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1270:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1271:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1272:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1273:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
1274:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
1275:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                bool synch_with_pwm);
1276:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1277:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1278:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1279:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1280:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param ev1_config Pointer to event 1 configuration data
1281:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param ev2_config Pointer to event 2 configuration data
1282:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1283:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1284:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1285:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1286:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1287:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC4yINS reg
1288:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1289:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1290:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Event-2 input would be the override value.
1291:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1292:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1293:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig().
1294:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1295:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
1296:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
1297:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
1298:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1299:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1300:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1301:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1302:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param config Pointer to event configuration data.
1303:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1304:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1305:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1306:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1307:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures an External Event of the slice, by updating CC4yINS register .\n\n
1308:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1309:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1310:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1311:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1312:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1313:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1314:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1315:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1316:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1317:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1318:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
1319:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_t event,
1320:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config);
1321:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1322:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1323:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1324:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1325:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1326:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1327:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1328:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1329:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1330:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1331:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Selects an input for an external event, by configuring CC4yINS register.\n\n
1332:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1333:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This configures the CC4yINS.EVxIS for the selected event.
1334:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1335:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1336:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1337:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1338:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1339:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1340:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1341:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
1342:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_EVENT_t event,
1343:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_INPUT_t input);
1344:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1345:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1346:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1347:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1348:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1349:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1350:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1351:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAP
1352:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n
1353:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1354:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1355:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1356:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1357:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_TrapConfig()<BR> XMC_CCU4_SLICE_DisableTrap()<BR> XMC_CCU4_SLICE_ConfigureEvent(
1358:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInput().
1359:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1360:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableTrap(XMC_CCU4_SLICE_t *const slice)
1361:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1362:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1363:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_TRAPE_Msk;
1364:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1365:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1366:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1367:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1368:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1369:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1370:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1371:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1372:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TR
1373:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n.\n\n
1374:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will revert the changes done by XMC_CCU4_SLICE_EnableTrap().
1375:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU4 slice.
1376:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1377:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1378:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableTrap().
1379:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1380:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableTrap(XMC_CCU4_SLICE_t *const slice)
1381:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1382:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1383:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_TRAPE_Msk);
1384:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1385:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1386:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1387:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1388:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1389:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1390:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1391:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1392:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.
1393:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1394:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1395:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer()<BR> XMC_CCU4_SLICE_StopTimer().
1396:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1397:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsTimerRunning(const XMC_CCU4_SLICE_t *const slice)
1398:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1399:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1400:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   return (bool)(((slice->TCST) & CCU4_CC4_TCST_TRB_Msk) == CCU4_CC4_TCST_TRB_Msk);
1401:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1402:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1403:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1404:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1405:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1406:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   ::XMC_CCU4_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1407:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1408:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1409:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Returns the timer counting direction, by reading CC4yTCST.CDIR bit.\n\n
1410:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will return the direction in which the timer is currently
1411:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_
1412:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1413:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1414:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1415:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1416:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir(const XMC_CCU4_SLICE
1417:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1418:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1419:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU4_CC4_TCST_CDIR_Msk) >> CCU4_CC4_TC
1420:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1421:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1422:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1423:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1424:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1425:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1426:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1427:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1428:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.\n\n
1429:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have configured the CC4 slice before starting its timer.
1430:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1431:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1432:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1433:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StopTimer().
1434:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1435:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StartTimer(XMC_CCU4_SLICE_t *const slice)
1436:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1437:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1438:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
1439:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1440:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1441:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1442:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1443:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1444:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1445:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1446:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1447:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops the Timer.<BR>\n
1448:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.
1449:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1450:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1451:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1452:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1453:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopTimer(XMC_CCU4_SLICE_t *const slice)
1454:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1455:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1456:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TRBC_Msk;
1457:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1458:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1459:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1460:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1461:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1462:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1463:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1464:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1465:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.\n\n
1466:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A timer which has been stopped can still retain the last counted value.
1467:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After invoking this API the timer value will be cleared.
1468:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1469:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1470:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1471:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1472:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearTimer(XMC_CCU4_SLICE_t *const slice)
1473:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1474:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1475:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TCC_Msk;
1476:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1477:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1478:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1479:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1480:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1481:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1482:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1483:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1484:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Stops and resets the timer count to zero, by setting CC4yTCCLR.TCC and CC4yTCCLR.TRBC bit.\n\n
1485:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1486:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1487:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1488:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1489:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopClearTimer(XMC_CCU4_SLICE_t *const slice)
1490:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1491:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1492:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = CCU4_CC4_TCCLR_TRBC_Msk | CCU4_CC4_TCCLR_TCC_Msk;
1493:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1494:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1495:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1496:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1497:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1498:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    ::XMC_CCU4_SLICE_MODE_t returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in comp
1499:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                          returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in captur
1500:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1501:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1502:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1503:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.CMOD bit.\n\n
1504:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of
1505:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * invalid.
1506:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1507:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1508:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1509:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1510:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode(const XMC_CCU4_SLICE_t *const sli
1511:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1512:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1513:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_MODE_t)(((slice->TC) & CCU4_CC4_TC_CMOD_Msk) >> CCU4_CC4_TC_CMOD_Pos));
1514:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1515:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1516:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1517:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1518:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1519:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1520:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1521:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1522:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM b
1523:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1524:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1525:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * reaching the terminal count.
1526:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1527:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1528:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerRepeatMode().
1529:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1530:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
1531:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1532:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1533:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1534:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1535:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1536:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1537:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1538:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1539:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.T
1540:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1541:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1542:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * all over again after reaching the terminal count.
1543:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1544:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1545:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerRepeatMode().
1546:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1547:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode(
1548:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                                                            const XMC_CCU4_SLICE_
1549:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1550:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
1551:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TSSM_Msk) >> CCU4_CC4_TC_T
1552:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1553:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1554:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1555:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1556:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1557:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1558:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1559:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1560:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.
1561:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1562:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1563:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1564:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1565:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * greater than the compare value.
1566:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1567:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1568:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerCountingMode().
1569:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1570:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
1571:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1572:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1573:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1574:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1575:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1576:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned
1577:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1578:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1579:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.\
1580:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1581:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1582:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCountingMode().
1583:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1584:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode(
1585:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 		                                                                           const XMC_CCU4_SLICE_t
1586:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1587:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1588:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TCM_Msk) >> CCU4_CC4_TC_TCM
1589:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1590:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1591:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1592:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param period_val Timer period value
1593:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *        Range: [0x0 to 0xFFFF]
1594:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1595:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1596:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1597:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1598:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer period, by writing CC4yPRS register.\n\n
1599:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1600:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1601:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1602:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual period register.
1603:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1604:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1605:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1606:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1607:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerPeriodMatch(XMC_CCU4_SLICE_t *const slice, const uint16
1608:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1609:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1610:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->PRS = (uint32_t) period_val;
1611:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1612:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1613:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1614:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1615:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1616:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer period value
1617:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1618:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1619:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1620:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer period value currently effective, by reading CC4yPR register.\n\n
1621:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1622:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1623:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1624:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1625:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1626:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerPeri
1627:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1628:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1629:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1630:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerPeriodMatch().
1631:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1632:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch(const XMC_CCU4_SLICE_t *const slice)
1633:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1634:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1635:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->PR);
1636:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1637:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1638:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1639:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1640:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param compare_val Timer compare value
1641:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1642:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1643:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1644:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1645:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer compare value, by writing CC4yCRS register.<BR>\n
1646:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  The PWM duty cycle is determined by this value.
1647:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1648:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the the period/compare value by calling XMC_CCU4_EnableShadowTransfer() with
1649:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1650:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1651:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1652:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1653:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1654:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1655:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerCompareMatch(XMC_CCU4_SLICE_t *const slice, const uint1
1656:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1657:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1658:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->CRS = (uint32_t) compare_val;
1659:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1660:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1661:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1662:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1663:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1664:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer compare value
1665:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1666:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1667:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1668:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer compare value currently effective, by reading CC4yCRS register.\n\n
1669:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
1670:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1671:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1672:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
1673:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
1674:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerComp
1675:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1676:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is CC4yCR.
1677:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1678:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1679:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCompareMatch().
1680:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1681:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch(const XMC_CCU4_SLICE_t *const slice)
1682:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1683:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1684:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->CR);
1685:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1686:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1687:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1688:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1689:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
1690:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                             Use ::XMC_CCU4_SHADOW_TRANSFER_t enum items to create a mask of choi
1691:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                              using a bit wise OR operation.
1692:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1693:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1694:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1695:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1696:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
1697:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the GCSS register.\n\n
1698:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
1699:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * shadow transfer trigger after the API is called.
1700:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1701:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Any call to XMC_CCU4_SLICE_SetTimerPeriodMatch()<BR> XMC_CCU4_SLICE_SetTimerCompareMatch()<BR>
1702:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetPrescaler()<BR> XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
1703:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * must be succeeded by this API.
1704:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GCSS.
1705:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1706:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1707:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1708:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1709:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableShadowTransfer(XMC_CCU4_MODULE_t *const module, const uint32_t 
1710:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1711:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableShadowTransfer:Invalid Slice Pointer", XMC_CCU4_IsValidModule(module))
1712:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
1713:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1714:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1715:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1716:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1717:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1718:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer value
1719:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1720:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1721:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1722:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest timer value, from CC4yTIMER register.\n\n
1723:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1724:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1725:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerValue().
1726:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1727:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerValue(const XMC_CCU4_SLICE_t *const slice)
1728:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1729:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1730:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->TIMER);
1731:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1732:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1733:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1734:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
1735:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                  Range: [0x0 to 0xFFFF]
1736:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1737:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1738:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1739:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1740:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Loads a new timer value, by setting CC4yTIMER register.\n\n
1741:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * 
1742:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1743:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  Request to load is ignored if the timer is running.
1744:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1745:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1746:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerValue().
1747:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1748:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerValue(XMC_CCU4_SLICE_t *const slice, const uint16_t tim
1749:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1750:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1751:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TIMER = (uint32_t) timer_val;
1752:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1753:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1754:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1755:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param period_dither Boolean instruction on dithering of period match
1756:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param duty_dither Boolean instruction on dithering of compare match
1757:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param spread Dither compare value
1758:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1759:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1760:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1761:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1762:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC4yTC.DITHE and CC4yDITS bits
1763:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
1764:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
1765:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
1766:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
1767:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
1768:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetDitherCompareValue().
1769:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1770:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1771:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * After this API call, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask
1772:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to transfer the dither value.
1773:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1774:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1775:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableDithering().
1776:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1777:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1778:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const bool period_dither,
1779:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const bool duty_dither,
1780:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                     const uint8_t spread);
1781:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1782:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1783:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1784:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1785:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1786:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1787:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1788:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC4yTC.DITHE bits.\n\n
1789:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This disables the Dither mode that was set in XMC_CCU4_SLICE_EnableDithering().
1790:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This API will not clear the dither compare value.
1791:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1792:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1793:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1794:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1795:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableDithering(XMC_CCU4_SLICE_t *const slice)
1796:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1797:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1798:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
1799:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1800:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1801:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1802:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1803:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1804:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1805:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1806:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1807:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the floating prescaler, by setting CC4yTC.FPE bit.\n\n
1808:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
1809:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
1810:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
1811:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1812:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1813:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()<BR> XMC_CCU4_SLICE_DisableFloatingPrescaler()
1814:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1815:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1816:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1817:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1818:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1819:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_FPE_Msk;
1820:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1821:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1822:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1823:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1824:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1825:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1826:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1827:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1828:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the floating prescaler, by clearing CC4yTC.FPE bit.\n\n
1829:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would return the prescaler to the normal mode.
1830:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler that would be applied is the value present in CC4yPSC.
1831:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1832:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1833:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableFloatingPrescaler().
1834:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1835:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1836:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1837:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1838:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_FPE_Msk);
1839:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1840:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1841:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1842:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1843:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param comp_val Dither compare value
1844:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1845:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1846:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1847:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1848:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1849:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Sets the dither spread/compare value, by setting CC4yDITS.DCVS bits.\n\n
1850:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
1851:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
1852:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU4_EnableShadowTransfer()
1853:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * called with appropriate mask.
1854:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1855:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1856:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1857:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1858:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetDitherCompareValue(XMC_CCU4_SLICE_t *const slice, const uint
1859:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1860:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
1861:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->DITS = comp_val;
1862:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1863:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1864:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1865:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t
1866:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1867:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1868:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1869:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1870:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1871:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the slice specific prescaler divider, by configuring the CC4yPSC and CC4yFPC registers.
1872:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
1873:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * by calling XMC_CCU4_StopPrescaler().
1874:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1875:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1876:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue().
1877:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1878:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetPrescaler(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_PRESCALER_t di
1879:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1880:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1881:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1882:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param cmp_val Prescaler divider compare value
1883:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1884:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1885:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1886:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1887:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1888:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC4yFPCS register.\n
1889:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
1890:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
1891:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
1892:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * the value, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask.
1893:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1894:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1895:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1896:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1897:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU4_SLICE_t *const slice,
1898:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                                      const uint8_t cmp_val)
1899:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1900:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU4_IsVa
1901:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   /*  write to the shadow register */
1902:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->FPCS = (uint32_t) cmp_val;
1903:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1904:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1905:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1906:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1907:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1908:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1909:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1910:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the multichannel mode, by setting CC4yTC.MCME bit.<BR>\n
1911:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
1912:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
1913:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
1914:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
1915:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
1916:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1917:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1918:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultiChannelMode()<BR> XMC_CCU4_SetMultiChannelShadowTransferMode().
1919:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1920:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableMultiChannelMode(XMC_CCU4_SLICE_t *const slice)
1921:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1922:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(s
1923:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_MCME_Msk;
1924:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1925:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1926:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1927:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1928:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1929:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1930:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1931:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1932:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Disables the multichannel mode, by clearing CC4yTC.MCME bit.<BR>\n
1933:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * This would return the slices to the normal operation mode.
1934:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1935:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1936:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableMultiChannelMode().
1937:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1938:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableMultiChannelMode(XMC_CCU4_SLICE_t *const slice)
1939:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
1940:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1941:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_MCME_Msk);
1942:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
1943:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1944:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1945:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1946:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
1947:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                       Use ::XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
1948:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                             using a bit wise OR operation.
1949:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1950:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1951:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1952:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1953:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
1954:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
1955:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU4x.MCSS
1956:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1957:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1958:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  None.
1959:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** */
1960:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetMultiChannelShadowTransferMode(XMC_CCU4_MODULE_t *const module, const uint32_t sli
1961:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1962:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1963:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1964:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
1965:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                Range: [0,3]
1966:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1967:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t  Returns the Capture register value.
1968:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *              Range: [0 to 0x1FFFFF]
1969:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1970:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1971:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC4yCV[\b reg
1972:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
1973:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
1974:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
1975:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * to find out if there is a new captured value present.
1976:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1977:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1978:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetLastCapturedTimerValue().
1979:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
1980:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCaptureRegisterValue(const XMC_CCU4_SLICE_t *const slice, const uint8_t 
1981:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
1982:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
1983:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1984:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param set  The capture register set, which must be evaluated
1985:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
1986:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1987:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *     ::XMC_CCU4_STATUS_t Returns XMC_CCU4_STATUS_OK if there was new value present in the capture
1988:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *                   returns XMC_CCU4_STATUS_ERROR if there was no new value present in the capture
1989:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1990:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1991:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest captured timer value, by reading CC4yCV registers.\n\n
1992:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
1993:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 4 capt
1994:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * evaluated.\n
1995:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
1996:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * capture registers have been evaluated.
1997:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
1998:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1999:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetCaptureRegisterValue().
2000:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2001:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** XMC_CCU4_STATUS_t XMC_CCU4_SLICE_GetLastCapturedTimerValue(const XMC_CCU4_SLICE_t *const slice,
2002:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                            const XMC_CCU4_SLICE_CAP_REG_SET_t set,
2003:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                            uint32_t *val_ptr);
2004:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** 
2005:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** /**
2006:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
2007:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2008:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
2009:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
2010:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2011:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
2012:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC4yINTE register.\n\
2013:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2014:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2015:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *
2016:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
2017:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInterruptNode()<BR> XMC_CCU4_SLICE_EnableMultipleEvents()<BR> XMC_CCU4_SLICE_
2018:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableMultipleEvents().
2019:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****  */
2020:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableEvent(XMC_CCU4_SLICE_t *const slice,
2021:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****                                                 const XMC_CCU4_SLICE_IRQ_ID_t event)
2022:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** {
2023:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
2024:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableEvent:Invalid SR event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event));
2025:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 475              	 .loc 3 2025 0
 476 0038 A422     	 mov r2,#164
 477 003a A958     	 ldr r1,[r5,r2]
 478 003c 0423     	 mov r3,#4
 479 003e 0B43     	 orr r3,r1
 480 0040 AB50     	 str r3,[r5,r2]
 481              	.LBE85:
 482              	.LBE84:
 252:../FF_Main.c  **** 
 253:../FF_Main.c  **** 		/* Enable compare match events */
 254:../FF_Main.c  **** 		XMC_CCU4_SLICE_EnableEvent(SLICE_PTR, XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP);
 255:../FF_Main.c  **** 
 256:../FF_Main.c  **** 	    /* Connect compare match event to SR0 */
 257:../FF_Main.c  **** 		XMC_CCU4_SLICE_SetInterruptNode(SLICE_PTR, XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP, XMC_CCU4_SLICE
 483              	 .loc 1 257 0
 484 0042 281C     	 mov r0,r5
 485 0044 0221     	 mov r1,#2
 486 0046 0022     	 mov r2,#0
 487 0048 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetInterruptNode
 488              	.LVL44:
 489              	.LBB86:
 490              	.LBB87:
 491              	 .file 4 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include/core_cm0.h"
   1:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**************************************************************************//**
   2:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * @file     core_cm0.h
   3:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * @brief    CMSIS Cortex-M0 Core Peripheral Access Layer Header File
   4:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * @version  V5.0.1
   5:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * @date     25. November 2016
   6:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
   7:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*
   8:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  *
  10:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  *
  12:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * not use this file except in compliance with the License.
  14:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * You may obtain a copy of the License at
  15:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  *
  16:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  *
  18:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * See the License for the specific language governing permissions and
  22:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  * limitations under the License.
  23:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
  24:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  25:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #if   defined ( __ICCARM__ )
  26:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  27:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  28:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #pragma clang system_header   /* treat file as system include file */
  29:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #endif
  30:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  31:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_GENERIC
  32:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_GENERIC
  33:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  34:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #include <stdint.h>
  35:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  36:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
  37:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  extern "C" {
  38:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #endif
  39:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  40:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
  41:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  44:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****      Function definitions in header files are used to allow 'inlining'.
  46:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  47:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****      Unions are used for effective representation of core registers.
  49:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  50:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****      Function-like macros are used to allow more efficient code.
  52:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
  53:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  54:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  55:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
  56:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  *                 CMSIS definitions
  57:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
  58:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
  59:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup Cortex_M0
  60:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   @{
  61:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
  62:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  63:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*  CMSIS CM0 definitions */
  64:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_MAIN  ( 5U)                                  /*!< [31:16] CMSIS HAL mai
  65:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION_SUB   ( 0U)                                  /*!< [15:0]  CMSIS HAL sub
  66:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define __CM0_CMSIS_VERSION       ((__CM0_CMSIS_VERSION_MAIN << 16U) | \
  67:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****                                     __CM0_CMSIS_VERSION_SUB           )  /*!< CMSIS HAL version num
  68:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  69:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define __CORTEX_M                (0U)                                   /*!< Cortex-M Core */
  70:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  71:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /** __FPU_USED indicates whether an FPU is used or not.
  72:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     This core does not support an FPU at all
  73:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** */
  74:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define __FPU_USED       0U
  75:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  76:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #if defined ( __CC_ARM )
  77:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __TARGET_FPU_VFP
  78:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  79:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  80:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  81:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  82:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __ARM_PCS_VFP
  83:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  84:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  85:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  86:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __GNUC__ )
  87:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  88:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  89:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  90:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  91:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __ICCARM__ )
  92:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __ARMVFP__
  93:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  94:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #endif
  95:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
  96:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __TI_ARM__ )
  97:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __TI_VFP_SUPPORT__
  98:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  99:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 100:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 101:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __TASKING__ )
 102:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #if defined __FPU_VFP__
 103:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 104:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 105:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 106:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #elif defined ( __CSMC__ )
 107:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #if ( __CSMC__ & 0x400U)
 108:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 109:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 110:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 111:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #endif
 112:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 113:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 114:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 115:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 116:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 117:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 118:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #endif
 119:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 120:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #endif /* __CORE_CM0_H_GENERIC */
 121:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 122:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CMSIS_GENERIC
 123:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 124:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #ifndef __CORE_CM0_H_DEPENDANT
 125:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define __CORE_CM0_H_DEPENDANT
 126:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 127:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 128:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  extern "C" {
 129:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #endif
 130:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 131:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* check device defines and use defaults */
 132:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #if defined __CHECK_DEVICE_DEFINES
 133:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __CM0_REV
 134:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #define __CM0_REV               0x0000U
 135:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__CM0_REV not defined in device header file; using default!"
 136:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 137:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 138:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __NVIC_PRIO_BITS
 139:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #define __NVIC_PRIO_BITS          2U
 140:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 141:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 142:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 143:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #ifndef __Vendor_SysTickConfig
 144:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #define __Vendor_SysTickConfig    0U
 145:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 146:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #endif
 147:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #endif
 148:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 149:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* IO definitions (access restrictions to peripheral registers) */
 150:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 151:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 152:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 153:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     <strong>IO Type Qualifiers</strong> are used
 154:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     \li to specify the access to peripheral variables.
 155:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     \li for automatic generation of peripheral register debug information.
 156:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** */
 157:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #ifdef __cplusplus
 158:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 159:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #else
 160:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 161:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #endif
 162:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 163:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 164:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 165:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* following defines should be used for structure members */
 166:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 167:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 168:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 169:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 170:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group Cortex_M0 */
 171:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 172:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 173:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 174:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
 175:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  *                 Register Abstraction
 176:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   Core Register contain:
 177:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   - Core Register
 178:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   - Core NVIC Register
 179:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   - Core SCB Register
 180:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   - Core SysTick Register
 181:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 182:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 183:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 184:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 185:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** */
 186:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 187:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 188:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 189:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 190:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Core Register type definitions.
 191:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   @{
 192:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 193:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 194:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 195:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 196:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 197:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 198:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 199:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   struct
 200:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 201:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 202:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 203:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 204:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 205:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 206:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 207:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 208:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** } APSR_Type;
 209:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 210:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* APSR Register Definitions */
 211:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 212:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 213:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 214:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 215:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 216:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 217:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 218:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 219:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 220:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 221:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 222:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 223:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 224:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 225:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 226:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 227:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 228:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 229:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   struct
 230:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 231:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 232:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 233:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 234:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 235:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** } IPSR_Type;
 236:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 237:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* IPSR Register Definitions */
 238:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 239:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 240:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 241:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 242:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 243:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 244:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 245:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 246:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 247:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   struct
 248:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 249:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 250:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 251:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 252:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 253:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 254:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 255:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 256:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 257:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 258:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 259:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** } xPSR_Type;
 260:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 261:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* xPSR Register Definitions */
 262:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 263:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 264:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 265:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 266:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 267:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 268:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 269:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 270:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 271:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 272:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 273:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 274:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 275:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 276:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 277:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 278:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 279:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 280:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 281:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 282:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Union type to access the Control Registers (CONTROL).
 283:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 284:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** typedef union
 285:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 286:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   struct
 287:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 288:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved0:1;               /*!< bit:      0  Reserved */
 289:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 290:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 291:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   } b;                                   /*!< Structure used for bit  access */
 292:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t w;                            /*!< Type      used for word access */
 293:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** } CONTROL_Type;
 294:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 295:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* CONTROL Register Definitions */
 296:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 297:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 298:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 299:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CORE */
 300:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 301:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 302:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 303:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 304:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 305:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Type definitions for the NVIC Registers
 306:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   @{
 307:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 308:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 309:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 310:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 311:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 312:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 313:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 314:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 315:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED0[31U];
 316:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 317:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RSERVED1[31U];
 318:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 319:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED2[31U];
 320:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 321:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED3[31U];
 322:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED4[64U];
 323:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 324:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }  NVIC_Type;
 325:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 326:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_NVIC */
 327:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 328:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 329:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 330:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 331:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 332:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Type definitions for the System Control Block Registers
 333:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   @{
 334:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 335:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 336:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 337:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the System Control Block (SCB).
 338:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 339:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 340:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 341:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 342:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 343:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED0;
 344:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 345:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 346:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 347:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****         uint32_t RESERVED1;
 348:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 349:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 350:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** } SCB_Type;
 351:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 352:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* SCB CPUID Register Definitions */
 353:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 354:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 355:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 356:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 357:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 358:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 359:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 360:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 361:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 362:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 363:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 364:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 365:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 366:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 367:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 368:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Interrupt Control State Register Definitions */
 369:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 370:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 371:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 372:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 373:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 374:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 375:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 376:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 377:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 378:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 379:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 380:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 381:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 382:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 383:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 384:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 385:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 386:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 387:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 388:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 389:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 390:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 391:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 392:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 393:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 394:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 395:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 396:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 397:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 398:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 399:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 400:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 401:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 402:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 403:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 404:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 405:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 406:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 407:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 408:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 409:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 410:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 411:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 412:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* SCB System Control Register Definitions */
 413:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 414:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 415:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 416:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 417:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 418:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 419:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 420:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 421:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 422:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* SCB Configuration Control Register Definitions */
 423:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 424:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 425:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 426:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 427:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 428:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 429:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* SCB System Handler Control and State Register Definitions */
 430:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 431:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 432:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 433:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SCB */
 434:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 435:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 436:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 437:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 438:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 439:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Type definitions for the System Timer Registers.
 440:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   @{
 441:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 442:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 443:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 444:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief  Structure type to access the System Timer (SysTick).
 445:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 446:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** typedef struct
 447:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 448:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 449:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 450:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 451:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 452:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** } SysTick_Type;
 453:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 454:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Control / Status Register Definitions */
 455:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 456:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 457:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 458:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 459:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 460:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 461:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 462:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 463:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 464:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 465:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 466:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 467:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Reload Register Definitions */
 468:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 469:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 470:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 471:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Current Register Definitions */
 472:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 473:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 474:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 475:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* SysTick Calibration Register Definitions */
 476:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 477:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 478:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 479:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 480:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 481:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 482:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 483:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 484:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 485:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_SysTick */
 486:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 487:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 488:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 489:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_core_register
 490:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 491:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Cortex-M0 Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ove
 492:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****             Therefore they are not covered by the Cortex-M0 header file.
 493:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   @{
 494:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 495:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_CoreDebug */
 496:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 497:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 498:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 499:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 500:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 501:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 502:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   @{
 503:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 504:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 505:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 506:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 507:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] field  Name of the register bit field.
 508:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 509:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \return           Masked and shifted value.
 510:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** */
 511:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 512:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 513:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 514:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 515:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] field  Name of the register bit field.
 516:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 517:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \return           Masked and shifted bit field value.
 518:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** */
 519:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 520:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 521:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of group CMSIS_core_bitfield */
 522:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 523:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 524:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 525:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup    CMSIS_core_register
 526:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup   CMSIS_core_base     Core Definitions
 527:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief      Definitions for base addresses, unions, and structures.
 528:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   @{
 529:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 530:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 531:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* Memory mapping of Core Hardware */
 532:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 533:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 534:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 535:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 536:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 537:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 538:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 539:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 540:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 541:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 542:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*@} */
 543:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 544:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 545:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 546:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*******************************************************************************
 547:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  *                Hardware Abstraction Layer
 548:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   Core Function Interface contains:
 549:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   - Core NVIC Functions
 550:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   - Core SysTick Functions
 551:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   - Core Register Access Functions
 552:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  ******************************************************************************/
 553:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 554:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 555:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** */
 556:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 557:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 558:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 559:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* ##########################   NVIC functions  #################################### */
 560:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 561:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 562:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 563:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 564:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   @{
 565:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 566:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 567:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #ifndef CMSIS_NVIC_VIRTUAL
 568:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*#define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping   not available for Cortex-M0 */
 569:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*#define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping   not available for Cortex-M0 */
 570:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 571:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 572:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 573:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 574:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 575:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 576:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0 */
 577:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 578:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 579:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 580:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 581:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #ifndef CMSIS_VECTAB_VIRTUAL
 582:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_SetVector              __NVIC_SetVector
 583:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   #define NVIC_GetVector              __NVIC_GetVector
 584:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 585:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 586:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define NVIC_USER_IRQ_OFFSET          16
 587:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 588:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 589:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
 590:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* The following MACROS handle generation of the register offset and byte masks */
 591:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 592:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 593:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 594:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 595:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 596:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 597:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Enable Interrupt
 598:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 599:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 600:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 601:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 602:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 603:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 604:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 605:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 606:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 607:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 608:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 609:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 610:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 611:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 612:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Get Interrupt Enable status
 613:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 614:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 615:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \return             0  Interrupt is not enabled.
 616:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \return             1  Interrupt is enabled.
 617:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 618:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 619:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 620:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 621:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 622:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 623:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1
 624:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 625:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   else
 626:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 627:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     return(0U);
 628:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 629:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 630:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 631:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 632:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 633:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Disable Interrupt
 634:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 635:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 636:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 637:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 638:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 639:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 640:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 641:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 642:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 643:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     __DSB();
 644:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     __ISB();
 645:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 646:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 647:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 648:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 649:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 650:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Get Pending Interrupt
 651:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 652:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 653:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \return             0  Interrupt status is not pending.
 654:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \return             1  Interrupt status is pending.
 655:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 656:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 657:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 658:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 659:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 660:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 661:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1
 662:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 663:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   else
 664:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 665:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     return(0U);
 666:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 667:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 668:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 669:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 670:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 671:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Set Pending Interrupt
 672:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 673:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 674:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 675:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 676:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 677:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 678:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 679:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 680:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 681:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 682:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 683:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 684:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 685:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 686:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Clear Pending Interrupt
 687:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 688:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Device specific interrupt number.
 689:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \note    IRQn must not be negative.
 690:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 691:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 692:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 693:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 694:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 695:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 696:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 697:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 698:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 699:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 700:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 701:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Set Interrupt Priority
 702:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 703:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 704:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****            or negative to specify a processor exception.
 705:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]      IRQn  Interrupt number.
 706:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]  priority  Priority to set.
 707:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \note    The priority cannot be set for every processor exception.
 708:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 709:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 710:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 711:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 712:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 713:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 492              	 .loc 4 713 0
 493 004c 3A4A     	 ldr r2,.L30+16
 494 004e C521     	 mov r1,#197
 495 0050 8900     	 lsl r1,r1,#2
 496 0052 5058     	 ldr r0,[r2,r1]
 497 0054 394B     	 ldr r3,.L30+20
 498 0056 0340     	 and r3,r0
 499 0058 C020     	 mov r0,#192
 500 005a 0002     	 lsl r0,r0,#8
 501 005c 0343     	 orr r3,r0
 502 005e 5350     	 str r3,[r2,r1]
 503              	.LVL45:
 504              	.LBE87:
 505              	.LBE86:
 506              	.LBB88:
 507              	.LBB89:
 606:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 508              	 .loc 4 606 0
 509 0060 8023     	 mov r3,#128
 510 0062 9B03     	 lsl r3,r3,#14
 511 0064 1360     	 str r3,[r2]
 512              	.LVL46:
 513              	.LBE89:
 514              	.LBE88:
 515              	.LBB90:
 516              	.LBB91:
1658:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 517              	 .loc 3 1658 0
 518 0066 7F23     	 mov r3,#127
 519 0068 EB63     	 str r3,[r5,#60]
 520              	.LVL47:
 521              	.LBE91:
 522              	.LBE90:
 523              	.LBB92:
 524              	.LBB93:
1610:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 525              	 .loc 3 1610 0
 526 006a 6B63     	 str r3,[r5,#52]
 527              	.LVL48:
 528              	.LBE93:
 529              	.LBE92:
 530              	.LBB94:
 531              	.LBB95:
1712:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_ccu4.h **** }
 532              	 .loc 3 1712 0
 533 006c 7A3B     	 sub r3,r3,#122
 534 006e 2361     	 str r3,[r4,#16]
 535              	.LBE95:
 536              	.LBE94:
 258:../FF_Main.c  **** 
 259:../FF_Main.c  **** 		/* Configure NVIC */
 260:../FF_Main.c  **** 		/* Set priority */
 261:../FF_Main.c  **** 		NVIC_SetPriority(CCU40_0_IRQn, 3U);
 262:../FF_Main.c  **** 
 263:../FF_Main.c  **** 		/* Enable IRQ */
 264:../FF_Main.c  **** 		NVIC_EnableIRQ(CCU40_0_IRQn);
 265:../FF_Main.c  **** 
 266:../FF_Main.c  **** 		/* Program duty cycle = 50% at 1Hz frequency */
 267:../FF_Main.c  **** 		XMC_CCU4_SLICE_SetTimerCompareMatch(SLICE_PTR, DUTYCYCLE);
 268:../FF_Main.c  **** 		XMC_CCU4_SLICE_SetTimerPeriodMatch(SLICE_PTR, PWMPERIOD);
 269:../FF_Main.c  **** 
 270:../FF_Main.c  **** 		/* Enable shadow transfer */
 271:../FF_Main.c  **** 		XMC_CCU4_EnableShadowTransfer(MODULE_PTR, (uint32_t)(XMC_CCU4_SHADOW_TRANSFER_SLICE_0|XMC_CCU4_SH
 272:../FF_Main.c  **** 
 273:../FF_Main.c  **** 		/*Enable CCU4 output*/
 274:../FF_Main.c  **** 		/*XMC_GPIO_CONFIG_t ccu_output_config =
 275:../FF_Main.c  **** 		{
 276:../FF_Main.c  **** 		   .mode                = XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT4,
 277:../FF_Main.c  **** 		   .input_hysteresis    = XMC_GPIO_INPUT_HYSTERESIS_STANDARD,
 278:../FF_Main.c  **** 		   .output_level        = XMC_GPIO_OUTPUT_LEVEL_LOW,
 279:../FF_Main.c  **** 		};
 280:../FF_Main.c  **** 
 281:../FF_Main.c  **** 		XMC_GPIO_Init(CCU_OUTPUT, &ccu_output_config);
 282:../FF_Main.c  **** 		*/
 283:../FF_Main.c  **** 
 284:../FF_Main.c  **** 
 285:../FF_Main.c  **** 
 286:../FF_Main.c  **** 
 287:../FF_Main.c  **** 
 288:../FF_Main.c  ****   SetUpGPIO();
 537              	 .loc 1 288 0
 538 0070 FFF7FEFF 	 bl SetUpGPIO
 539              	.LVL49:
 289:../FF_Main.c  **** 
 290:../FF_Main.c  **** 
 291:../FF_Main.c  ****   MB_register_UART(XMC_UART0_CH0);
 540              	 .loc 1 291 0
 541 0074 9020     	 mov r0,#144
 542 0076 C005     	 lsl r0,r0,#23
 543 0078 FFF7FEFF 	 bl MB_register_UART
 544              	.LVL50:
 292:../FF_Main.c  ****   SysTick_Config(SystemCoreClock / TICKS_PER_SECOND);
 545              	 .loc 1 292 0
 546 007c 304B     	 ldr r3,.L30+24
 547 007e 1868     	 ldr r0,[r3]
 548 0080 FA21     	 mov r1,#250
 549 0082 8900     	 lsl r1,r1,#2
 550 0084 FFF7FEFF 	 bl __aeabi_uidiv
 551              	.LVL51:
 552              	.LBB96:
 553              	.LBB97:
 714:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 715:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 716:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   else
 717:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 718:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
 719:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 720:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 721:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 722:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 723:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 724:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 725:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Get Interrupt Priority
 726:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
 727:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 728:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****            or negative to specify a processor exception.
 729:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]   IRQn  Interrupt number.
 730:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \return             Interrupt Priority.
 731:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****                       Value is aligned automatically to the implemented priority bits of the microc
 732:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 733:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
 734:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 735:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 736:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   if ((int32_t)(IRQn) >= 0)
 737:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 738:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     return((uint32_t)(((NVIC->IP[ _IP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 739:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 740:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   else
 741:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 742:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     return((uint32_t)(((SCB->SHP[_SHP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 743:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 744:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 745:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 746:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 747:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 748:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Set Interrupt Vector
 749:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
 750:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 751:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****            or negative to specify a processor exception.
 752:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****            Address 0 must be mapped to SRAM.
 753:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]   IRQn      Interrupt number
 754:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]   vector    Address of interrupt handler function
 755:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 756:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
 757:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 758:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t *vectors = (uint32_t *)0x0U;
 759:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
 760:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 761:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 762:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 763:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 764:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   Get Interrupt Vector
 765:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details Reads an interrupt vector from interrupt vector table.
 766:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****            The interrupt number can be positive to specify a device specific interrupt,
 767:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****            or negative to specify a processor exception.
 768:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]   IRQn      Interrupt number.
 769:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \return                 Address of interrupt handler function
 770:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 771:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
 772:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 773:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   uint32_t *vectors = (uint32_t *)0x0U;
 774:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
 775:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 776:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 777:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 778:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 779:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   System Reset
 780:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details Initiates a system reset request to reset the MCU.
 781:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 782:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE void NVIC_SystemReset(void)
 783:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 784:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __DSB();                                                          /* Ensure all outstanding memor
 785:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****                                                                        buffered write are completed
 786:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 787:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);
 788:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   __DSB();                                                          /* Ensure completion of memory 
 789:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 790:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   for(;;)                                                           /* wait until reset */
 791:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 792:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     __NOP();
 793:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 794:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 795:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 796:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of CMSIS_Core_NVICFunctions */
 797:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 798:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 799:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* ##########################  FPU functions  #################################### */
 800:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 801:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 802:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
 803:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Function that provides FPU type.
 804:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   @{
 805:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 806:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 807:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 808:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   get FPU type
 809:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details returns the FPU type
 810:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \returns
 811:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****    - \b  0: No FPU
 812:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****    - \b  1: Single precision FPU
 813:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****    - \b  2: Double + Single precision FPU
 814:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 815:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
 816:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 817:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     return 0U;           /* No FPU */
 818:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** }
 819:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 820:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 821:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /*@} end of CMSIS_Core_FpuFunctions */
 822:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 823:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 824:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 825:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /* ##################################    SysTick function  ########################################
 826:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 827:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \ingroup  CMSIS_Core_FunctionInterface
 828:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
 829:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief    Functions that configure the System.
 830:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   @{
 831:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 832:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 833:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
 834:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 835:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** /**
 836:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \brief   System Tick Configuration
 837:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 838:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****            Counter is in free running mode to generate periodic interrupts.
 839:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \param [in]  ticks  Number of ticks between two interrupts.
 840:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \return          0  Function succeeded.
 841:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \return          1  Function failed.
 842:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
 843:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
 844:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****            must contain a vendor-specific implementation of this function.
 845:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****  */
 846:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 847:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** {
 848:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 554              	 .loc 4 848 0
 555 0088 0138     	 sub r0,r0,#1
 556              	.LVL52:
 557 008a 2E4B     	 ldr r3,.L30+28
 558 008c 9842     	 cmp r0,r3
 559 008e 0DD8     	 bhi .L21
 849:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   {
 850:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****     return (1UL);                                                   /* Reload value impossible */
 851:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 852:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h **** 
 853:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 560              	 .loc 4 853 0
 561 0090 2D4A     	 ldr r2,.L30+32
 562 0092 5060     	 str r0,[r2,#4]
 563              	.LVL53:
 564              	.LBB98:
 565              	.LBB99:
 718:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 566              	 .loc 4 718 0
 567 0094 2D49     	 ldr r1,.L30+36
 568 0096 0B6A     	 ldr r3,[r1,#32]
 569 0098 1B02     	 lsl r3,r3,#8
 570 009a 1B0A     	 lsr r3,r3,#8
 571 009c C020     	 mov r0,#192
 572              	.LVL54:
 573 009e 0006     	 lsl r0,r0,#24
 574 00a0 0343     	 orr r3,r0
 575 00a2 0B62     	 str r3,[r1,#32]
 576              	.LVL55:
 577              	.LBE99:
 578              	.LBE98:
 854:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 855:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 579              	 .loc 4 855 0
 580 00a4 0023     	 mov r3,#0
 581 00a6 9360     	 str r3,[r2,#8]
 856:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 582              	 .loc 4 856 0
 583 00a8 0733     	 add r3,r3,#7
 584 00aa 1360     	 str r3,[r2]
 585              	.LVL56:
 586              	.L21:
 587              	.LBE97:
 588              	.LBE96:
 293:../FF_Main.c  ****   /* Address of 0 disabels the device */
 294:../FF_Main.c  ****   __delay_ms(250);
 589              	 .loc 1 294 0
 590 00ac FA20     	 mov r0,#250
 591 00ae FFF7FEFF 	 bl __delay_ms
 592              	.LVL57:
 593              	.L22:
 295:../FF_Main.c  ****   do{
 296:../FF_Main.c  **** 	  u8DIPSwitch = ReadDipSwitch();
 594              	 .loc 1 296 0 discriminator 1
 595 00b2 FFF7FEFF 	 bl ReadDipSwitch
 596              	.LVL58:
 597 00b6 031C     	 mov r3,r0
 598              	.LVL59:
 297:../FF_Main.c  ****   }
 298:../FF_Main.c  ****   while(0==(u8DIPSwitch&0x3F));
 599              	 .loc 1 298 0 discriminator 1
 600 00b8 3F22     	 mov r2,#63
 601 00ba 1040     	 and r0,r2
 602              	.LVL60:
 603 00bc F9D0     	 beq .L22
 299:../FF_Main.c  ****   if(0!=(u8DIPSwitch&0x80)){
 604              	 .loc 1 299 0
 605 00be 1A06     	 lsl r2,r3,#24
 606 00c0 0FD5     	 bpl .L23
 300:../FF_Main.c  **** 	  /* We enter the Testmode Position will be set by DIP Switch */
 301:../FF_Main.c  **** 	  if(u8DIPSwitch&0x40){
 607              	 .loc 1 301 0
 608 00c2 5B06     	 lsl r3,r3,#25
 609 00c4 03D5     	 bpl .L24
 302:../FF_Main.c  **** 		  voService();
 610              	 .loc 1 302 0
 611 00c6 FFF7FEFF 	 bl voService
 612              	.LVL61:
 613              	.L25:
 303:../FF_Main.c  **** 		  while(1==1){
 304:../FF_Main.c  **** 		  __NOP();
 614              	 .loc 1 304 0 discriminator 1
 615              	
 616 00ca C046     	 nop
 617              	
 305:../FF_Main.c  **** 		  }
 618              	 .loc 1 305 0 discriminator 1
 619              	 .code 16
 620 00cc FDE7     	 b .L25
 621              	.L24:
 306:../FF_Main.c  **** 	  } else{
 307:../FF_Main.c  **** 		  boService=false;
 622              	 .loc 1 307 0
 623 00ce 0022     	 mov r2,#0
 624 00d0 1F4B     	 ldr r3,.L30+40
 625 00d2 1A70     	 strb r2,[r3]
 626              	.L26:
 308:../FF_Main.c  **** 		  while(1==1){
 309:../FF_Main.c  **** 			  /* We Read the Dipswitch and Write the Position */
 310:../FF_Main.c  **** 			  u8DIPSwitch = ReadDipSwitch();
 627              	 .loc 1 310 0 discriminator 1
 628 00d4 FFF7FEFF 	 bl ReadDipSwitch
 629              	.LVL62:
 311:../FF_Main.c  **** 			  voManualSetPosition((u8DIPSwitch&0x3F));
 630              	 .loc 1 311 0 discriminator 1
 631 00d8 3F23     	 mov r3,#63
 632 00da 1840     	 and r0,r3
 633              	.LVL63:
 634 00dc FFF7FEFF 	 bl voManualSetPosition
 635              	.LVL64:
 312:../FF_Main.c  **** 		  }
 636              	 .loc 1 312 0 discriminator 1
 637 00e0 F8E7     	 b .L26
 638              	.L23:
 313:../FF_Main.c  **** 	  }
 314:../FF_Main.c  **** 
 315:../FF_Main.c  **** 
 316:../FF_Main.c  ****   } else {
 317:../FF_Main.c  **** 	  boService=false;
 639              	 .loc 1 317 0
 640 00e2 0023     	 mov r3,#0
 641 00e4 1A4A     	 ldr r2,.L30+40
 642 00e6 1370     	 strb r3,[r2]
 318:../FF_Main.c  **** 	  u8Address = u8DIPSwitch&0x3F;
 643              	 .loc 1 318 0
 644 00e8 1A4A     	 ldr r2,.L30+44
 645 00ea 1070     	 strb r0,[r2]
 319:../FF_Main.c  **** 	  eMBInit(MB_RTU,u8Address,0,115200,MB_PAR_NONE);
 646              	 .loc 1 319 0
 647 00ec 1178     	 ldrb r1,[r2]
 648 00ee C9B2     	 uxtb r1,r1
 649 00f0 0093     	 str r3,[sp]
 650 00f2 0020     	 mov r0,#0
 651 00f4 0022     	 mov r2,#0
 652 00f6 E123     	 mov r3,#225
 653 00f8 5B02     	 lsl r3,r3,#9
 654 00fa FFF7FEFF 	 bl eMBInit
 655              	.LVL65:
 320:../FF_Main.c  **** 	  eMBEnable();
 656              	 .loc 1 320 0
 657 00fe FFF7FEFF 	 bl eMBEnable
 658              	.LVL66:
 659              	.LBB100:
 660              	.LBB101:
 695:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 661              	 .loc 4 695 0
 662 0102 0D4B     	 ldr r3,.L30+16
 663 0104 8022     	 mov r2,#128
 664 0106 9200     	 lsl r2,r2,#2
 665 0108 C021     	 mov r1,#192
 666 010a 4900     	 lsl r1,r1,#1
 667 010c 5A50     	 str r2,[r3,r1]
 668              	.LVL67:
 669              	.LBE101:
 670              	.LBE100:
 671              	.LBB102:
 672              	.LBB103:
 606:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Include\core_cm0.h ****   }
 673              	 .loc 4 606 0
 674 010e 1A60     	 str r2,[r3]
 675              	.LBE103:
 676              	.LBE102:
 235:../FF_Main.c  **** 	uint8_t u8DIPSwitch=0;
 677              	 .loc 1 235 0
 678 0110 114C     	 ldr r4,.L30+48
 679              	.LVL68:
 680              	.L29:
 321:../FF_Main.c  **** 	  NVIC_ClearPendingIRQ(USIC0_0_IRQn);
 322:../FF_Main.c  **** 	  NVIC_EnableIRQ(USIC0_0_IRQn);
 323:../FF_Main.c  **** 	  while(1)
 324:../FF_Main.c  **** 	  {
 325:../FF_Main.c  **** 		/* Infinite loop */
 326:../FF_Main.c  **** 		  if(Delay>0){
 681              	 .loc 1 326 0
 682 0112 002C     	 cmp r4,#0
 683 0114 01D0     	 beq .L27
 327:../FF_Main.c  **** 			  Delay--;
 684              	 .loc 1 327 0
 685 0116 013C     	 sub r4,r4,#1
 686              	.LVL69:
 687 0118 03E0     	 b .L28
 688              	.L27:
 689              	.LVL70:
 690              	.LBB104:
 691              	.LBB105:
 287:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** }
 288:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 289:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 290:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 291:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param port constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 292:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param pin  port pin number.
 293:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 294:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 295:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 296:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 297:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Configures port pin output to Toggle. It configures hardware registers Pn_OMR.
 298:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 299:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 300:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 301:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 302:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 303:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode(). Regis
 304:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  * and does not contain any flip-flop. A read action delivers the value of 0.
 305:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 306:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 307:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 308:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_ToggleOutput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
 309:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** {
 310:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_ToggleOutput: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 311:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h **** 
 312:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = 0x10001U << pin;
 692              	 .loc 2 312 0
 693 011a 104A     	 ldr r2,.L30+52
 694 011c 104B     	 ldr r3,.L30+56
 695 011e 5A60     	 str r2,[r3,#4]
 696              	.LVL71:
 697              	.LBE105:
 698              	.LBE104:
 328:../FF_Main.c  **** 		  }else{
 329:../FF_Main.c  **** 			  XMC_GPIO_ToggleOutput(XMC_GPIO_PORT0,4);
 330:../FF_Main.c  **** 			  Delay=0xFFFF;
 699              	 .loc 1 330 0
 700 0120 0D4C     	 ldr r4,.L30+48
 701              	.LVL72:
 702              	.L28:
 331:../FF_Main.c  **** 		  }
 332:../FF_Main.c  **** 		  mb_stack_task();
 703              	 .loc 1 332 0
 704 0122 FFF7FEFF 	 bl mb_stack_task
 705              	.LVL73:
 333:../FF_Main.c  **** 	  }
 706              	 .loc 1 333 0
 707 0126 F4E7     	 b .L29
 708              	.L31:
 709              	 .align 2
 710              	.L30:
 711 0128 00000000 	 .word .LANCHOR3
 712 012c 00000448 	 .word 1208221696
 713 0130 00010448 	 .word 1208221952
 714 0134 00000000 	 .word .LANCHOR4
 715 0138 00E100E0 	 .word -536813312
 716 013c FF00FFFF 	 .word -65281
 717 0140 00000000 	 .word SystemCoreClock
 718 0144 FFFFFF00 	 .word 16777215
 719 0148 10E000E0 	 .word -536813552
 720 014c 00ED00E0 	 .word -536810240
 721 0150 00000000 	 .word .LANCHOR1
 722 0154 00000000 	 .word .LANCHOR5
 723 0158 FFFF0000 	 .word 65535
 724 015c 10001000 	 .word 1048592
 725 0160 00000440 	 .word 1074003968
 726              	 .cfi_endproc
 727              	.LFE551:
 729              	 .section .text.Default_handler,"ax",%progbits
 730              	 .align 2
 731              	 .global Default_handler
 732              	 .code 16
 733              	 .thumb_func
 735              	Default_handler:
 736              	.LFB552:
 334:../FF_Main.c  **** 	}
 335:../FF_Main.c  **** }
 336:../FF_Main.c  **** void Default_handler( void ){
 737              	 .loc 1 336 0
 738              	 .cfi_startproc
 337:../FF_Main.c  **** /* We shall never end here */
 338:../FF_Main.c  **** }
 739              	 .loc 1 338 0
 740              	 
 741 0000 7047     	 bx lr
 742              	 .cfi_endproc
 743              	.LFE552:
 745 0002 C046     	 .section .text.USIC0_0_IRQHandler,"ax",%progbits
 746              	 .align 2
 747              	 .global USIC0_0_IRQHandler
 748              	 .code 16
 749              	 .thumb_func
 751              	USIC0_0_IRQHandler:
 752              	.LFB553:
 339:../FF_Main.c  **** 
 340:../FF_Main.c  **** void USIC0_0_IRQHandler ( void ){
 753              	 .loc 1 340 0
 754              	 .cfi_startproc
 755 0000 10B5     	 push {r4,lr}
 756              	.LCFI6:
 757              	 .cfi_def_cfa_offset 8
 758              	 .cfi_offset 4,-8
 759              	 .cfi_offset 14,-4
 760              	.LVL74:
 761              	.LBB106:
 762              	.LBB107:
 763              	 .file 5 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc/xmc_uart.h"
   1:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  /**
   2:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @file xmc_uart.h
   3:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @date 2016-05-20
   4:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
   5:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @cond
   6:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
   7:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
   9:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * All rights reserved.                        
  11:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *                                             
  12:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * following conditions are met:   
  14:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  15:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * disclaimer.                        
  17:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  18:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  21:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  24:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  32:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
  35:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
  36:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Change History
  37:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * --------------
  38:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
  39:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-02-20:
  40:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Initial
  41:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *      
  42:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-05-20:
  43:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Description updated <br>
  44:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_TriggerServiceRequest() and XMC_UART_CH_SelectInterruptNodePointer <br>
  45:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
  46:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-06-20:
  47:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
  49:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-09-01:
  50:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Modified XMC_UART_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br
  51:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Modified XMC_UART_CH_EVENT_t enum for supporting XMC_UART_CH_EnableEvent() and XMC_UART_CH
  52:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *       for supporting multiple events configuration <br>
  53:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  54:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 2016-05-20:
  55:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_EnableDataTransmission() and XMC_UART_CH_DisableDataTransmission()
  56:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
  57:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @endcond 
  58:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
  59:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
  60:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
  61:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #ifndef XMC_UART_H
  62:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART_H
  63:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
  64:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
  65:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * HEADER FILES
  66:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
  67:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
  68:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #include "xmc_usic.h"
  69:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
  70:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
  71:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @{
  73:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
  74:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
  75:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
  76:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @addtogroup UART
  77:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @brief Universal Asynchronous Receiver/Transmitter (UART) driver for XMC microcontroller family.
  78:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
  79:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * The UART driver uses Universal Serial Interface Channel(USIC) module to implement UART protocol.
  80:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * It provides APIs to configure USIC channel for UART communication. The driver enables the user
  81:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * in getting the status of UART protocol events, configuring interrupt service requests, protocol
  82:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * related parameter configuration etc.
  83:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  84:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * UART driver features:
  85:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Configuration structure XMC_UART_CH_CONFIG_t and initialization function XMC_UART_CH_Init()
  86:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Enumeration of events with their bit masks @ref XMC_UART_CH_EVENT_t, @ref XMC_UART_CH_STATUS_
  87:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows the selection of input source for the DX0 input stage using the API XMC_UART_CH_SetInp
  88:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows configuration of baudrate using XMC_UART_CH_SetBaudrate() and configuration of data le
  89:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  XMC_UART_CH_SetWordLength() and XMC_UART_CH_SetFrameLength()
  90:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Provides the status of UART protocol events, XMC_UART_CH_GetStatusFlag()
  91:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows transmission of data using XMC_UART_CH_Transmit() and gets received data using XMC_UAR
  92:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  93:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @{
  94:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
  95:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
  96:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
  97:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * MACROS
  98:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
  99:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 100:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC0)
 101:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART0_CH0 XMC_USIC0_CH0 /**< USIC0 channel 0 base address */
 102:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART0_CH1 XMC_USIC0_CH1 /**< USIC0 channel 1 base address */
 103:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 104:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 105:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC1)
 106:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART1_CH0 XMC_USIC1_CH0 /**< USIC1 channel 0 base address */
 107:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART1_CH1 XMC_USIC1_CH1 /**< USIC1 channel 1 base address */
 108:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 109:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 110:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC2)
 111:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART2_CH0 XMC_USIC2_CH0 /**< USIC2 channel 0 base address */
 112:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART2_CH1 XMC_USIC2_CH1 /**< USIC2 channel 1 base address */
 113:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 114:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 115:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 116:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * ENUMS
 117:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 118:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 119:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 120:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * UART driver status
 121:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 122:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_STATUS
 123:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 124:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_OK,     /**< UART driver status : OK*/
 125:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_ERROR,  /**< UART driver status : ERROR */
 126:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_BUSY    /**< UART driver status : BUSY */
 127:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_STATUS_t;
 128:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 129:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 130:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** * UART portocol status. The enum values can be used for getting the status of UART channel.
 131:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** *
 132:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** */
 133:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_STATUS_FLAG
 134:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 135:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE = USIC_CH_PSR_ASCMode_TXIDLE_Msk,                 /**< 
 136:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEPTION_IDLE = USIC_CH_PSR_ASCMode_RXIDLE_Msk,                    /**< 
 137:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED = USIC_CH_PSR_ASCMode_SBD_Msk,       /**< 
 138:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_COLLISION_DETECTED = USIC_CH_PSR_ASCMode_COL_Msk,                   /**< 
 139:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVER_NOISE_DETECTED = USIC_CH_PSR_ASCMode_RNS_Msk,              /**< 
 140:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_FORMAT_ERROR_IN_STOP_BIT_0 = USIC_CH_PSR_ASCMode_FER0_Msk,          /**< 
 141:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_FORMAT_ERROR_IN_STOP_BIT_1 = USIC_CH_PSR_ASCMode_FER1_Msk,          /**< 
 142:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVE_FRAME_FINISHED = USIC_CH_PSR_ASCMode_RFF_Msk,               /**< 
 143:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMITTER_FRAME_FINISHED = USIC_CH_PSR_ASCMode_TFF_Msk,           /**< 
 144:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSFER_STATUS_BUSY = USIC_CH_PSR_ASCMode_BUSY_Msk,                /**< 
 145:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_ASCMode_RSIF_Msk,           /**< 
 146:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_ASCMode_DLIF_Msk,                /**< 
 147:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_ASCMode_TSIF_Msk,           /**< 
 148:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_ASCMode_TBIF_Msk,          /**< 
 149:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_ASCMode_RIF_Msk,                   /**< 
 150:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_ASCMode_AIF_Msk,       /**< 
 151:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_ASCMode_BRGIF_Msk      /**< 
 152:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_STATUS_FLAG_t;
 153:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 154:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 155:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** * UART configuration events. The enums can be used for configuring events using the CCR register.
 156:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** */
 157:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_CH_UART_EVENT
 158:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 159:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 160:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 161:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 162:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 163:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 164:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 165:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 166:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   
 167:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_SYNCHRONIZATION_BREAK = USIC_CH_PCR_ASCMode_SBIEN_Msk, /**< Event synchronizati
 168:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_COLLISION = USIC_CH_PCR_ASCMode_CDEN_Msk,              /**< Event collision */
 169:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_RECEIVER_NOISE = USIC_CH_PCR_ASCMode_RNIEN_Msk,        /**< Event receiver nois
 170:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_FORMAT_ERROR = USIC_CH_PCR_ASCMode_FEIEN_Msk,          /**< Event format error 
 171:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_FRAME_FINISHED = USIC_CH_PCR_ASCMode_FFIEN_Msk         /**< Event frame finishe
 172:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_EVENT_t;
 173:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 174:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 175:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * UART Input sampling frequency options
 176:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 177:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INPUT_SAMPLING_FREQ
 178:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 179:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_SAMPLING_FREQ_FPERIPH            = XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH,    
 180:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_D
 181:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INPUT_SAMPLING_FREQ_t;
 182:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 183:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 184:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * UART input stages
 185:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 186:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INPUT
 187:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 188:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD = 0UL   /**< UART input stage DX0*/
 189:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #if UC_FAMILY == XMC1
 190:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   ,
 191:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD1 = 3UL, /**< UART input stage DX3*/
 192:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD2 = 5UL  /**< UART input stage DX5*/
 193:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 194:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INPUT_t;
 195:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 196:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 197:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 198:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * UART channel interrupt node pointers
 199:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 200:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INTERRUPT_NODE_POINTER
 201:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 202:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANS
 203:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANS
 204:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEI
 205:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTER
 206:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTO
 207:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INTERRUPT_NODE_POINTER_t;
 208:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 209:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 210:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * DATA STRUCTURES
 211:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 212:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 213:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 214:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * UART initialization structure
 215:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** */
 216:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** typedef struct XMC_UART_CH_CONFIG
 217:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 218:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   uint32_t baudrate;                         /**< Desired baudrate. \b Range: minimum= 100, maximum
 219:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t data_bits;                         /**< Number of bits for the data field. Value configur
 220:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****                                                   \b Range: minimum= 1, maximum= 16*/
 221:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t frame_length;                      /**< Indicates nmber of bits in a frame. Configured as
 222:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****                                                   \b Range: minimum= 1, maximum= 63*/
 223:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t stop_bits;                         /**< Number of stop bits. \b Range: minimum= 1, maximu
 224:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t oversampling;						           /**< Number of samples for a symbol(DCTQ).\b Range: minimum
 225:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;     /**< Parity mode. \b Range: @ref XMC_USIC_CH_PARITY_MO
 226:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****                                                   @ref XMC_USIC_CH_PARITY_MODE_ODD*/
 227:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_CONFIG_t;
 228:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 229:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 230:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * API PROTOTYPES
 231:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 232:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 233:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #ifdef __cplusplus
 234:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** extern "C" {
 235:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 236:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 237:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 238:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 239:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, XMC_UART0_CH1,XMC_UART1_CH0, XMC_UART1_CH1,XMC_UART2_CH0, XM
 240:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param config Constant pointer to UART configuration structure of type @ref XMC_UART_CH_CONFIG_t
 241:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status of initializing the USIC channel for UART protocol.\n
 242:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: @ref XMC_UART_CH_STATUS_OK if initialization is successful.\n
 243:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *                    @ref XMC_UART_CH_STATUS_ERROR if configuration of baudrate failed.
 244:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 245:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 246:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Initializes the USIC channel for UART protocol.\n\n
 247:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * During the initialization, USIC channel is enabled, baudrate is configured with the defined over
 248:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * in the intialization structure. If the oversampling value is set to 0 in the structure, the defa
 249:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * is considered. Sampling point for each symbol is configured at the half of sampling period. Symb
 250:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * majority decision among 3 samples. 
 251:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Word length is configured with the number of data bits. If the value of \a frame_length is 0, th
 252:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * is set to the same value as word length. If \a frame_length is greater than 0, it is set as the 
 253:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Parity mode is set to the value configured for \a parity_mode.
 254:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * The USIC channel should be set to UART mode by calling the XMC_UART_CH_Start() API after the ini
 255:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 256:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 257:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Start(), XMC_UART_CH_Stop(), XMC_UART_CH_Transmit()\n\n\n
 258:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 259:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_Init(XMC_USIC_CH_t *const channel, const XMC_UART_CH_CONFIG_t *const config);
 260:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 261:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 262:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 263:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 264:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 265:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 266:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 267:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the USIC channel operation mode to UART mode.\n\n
 268:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * CCR register bitfield \a Mode is set to 2(UART mode). This API should be called after configurin
 269:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * the USIC channel. Transmission and reception can happen only when the UART mode is set. 
 270:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * This is an inline function.
 271:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 272:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 273:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Stop(), XMC_UART_CH_Transmit()\n\n\n
 274:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 275:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_Start(XMC_USIC_CH_t *const channel)
 276:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 277:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   channel->CCR = (uint32_t)(((channel->CCR) & (~USIC_CH_CCR_MODE_Msk)) | (uint32_t)XMC_USIC_CH_OPER
 278:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** }
 279:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 280:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 281:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 282:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 283:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status to indicate if the communication channel is stopped successf
 284:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *                              @ref XMC_UART_CH_STATUS_OK if the communication channel is stopped.
 285:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *                              @ref XMC_UART_CH_STATUS_BUSY if the communication channel is busy.
 286:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 287:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 288:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Stops the UART communication.\n\n
 289:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * CCR register bitfield \a Mode is reset. This disables the communication.
 290:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Before starting the communication again, the channel has to be reconfigured.
 291:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 292:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 293:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Init() \n\n\n
 294:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 295:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** XMC_UART_CH_STATUS_t XMC_UART_CH_Stop(XMC_USIC_CH_t *const channel);
 296:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 297:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 298:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 299:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   \b Range: @ref XMC_UART0_CH0, XMC_UART0_CH1 ,XMC_UART1_CH0, XMC_UART1_CH1, XMC_UART2_CH0,
 300:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param rate Desired baudrate. \n
 301:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *           \b Range: minimum value = 100, maximum value depends on the peripheral clock frequency
 302:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/
 303:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 304:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 This can be related to the number of samples for each logic state of the data signal.\n
 305:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 \b Range: 4 to 32. Value should be chosen based on the protocol used.
 306:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status indicating the baudrate configuration.\n
 307:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 			     \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 308:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 309:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 310:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description:</b><br>
 311:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the bus speed in bits per second.\n\n
 312:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Derives the values of \a STEP and PDIV to arrive at the optimum realistic speed possible.
 313:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \a oversampling is the number of samples to be taken for each symbol of UART protocol.
 314:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Default \a oversampling of 16 is considered if the input \a oversampling is less than 4. It is r
 315:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * a minimum oversampling of 4 for UART.
 316:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 317:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 318:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Init(), XMC_UART_CH_Stop()
 319:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 320:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** XMC_UART_CH_STATUS_t XMC_UART_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 321:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 322:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 323:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 324:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 325:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  data Data to be transmitted. \n 
 326:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: 16 bit unsigned data within the range 0 to 65535. Actual size of
 327:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *          data transmitted depends on the configured number of bits for the UART protocol in the 
 328:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 329:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 330:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 331:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Transmits data over serial communication channel using UART protocol.\n\n
 332:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Based on the channel configuration, data is either put to the transmit FIFO or to TBUF register.
 333:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Before putting data to TBUF, the API waits for TBUF to finish shifting its contents to shift reg
 334:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * So user can continuously execute the API without checking for TBUF busy status. Based on the num
 335:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * data bits configured, the lower significant bits will be extracted for transmission.
 336:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 337:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: When FIFO is not configured, the API waits for the TBUF to be available. 
 338:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * This makes the execution a blocking call.
 339:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 340:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 341:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_GetReceivedData() \n\n\n
 342:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 343:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data);
 344:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 345:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 346:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 347:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 348:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return uint16_t Received data over UART communication channel.
 349:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 350:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Provides one word of data received over UART communication channel.\n\n
 351:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Based on the channel configuration, data is either read from the receive FIFO or RBUF register.
 352:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Before returning the value, there is no check for data validity. User should check the appropria
 353:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * data receive flags(standard receive/alternative receive/FIFO standard receive/FIFO alternative r
 354:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * before executing the API. Reading from an empty receive FIFO can generate a receive error event.
 355:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 356:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 357:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_GetStatusFlag(), XMC_UART_CH_Transmit() \n\n\n
 358:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 359:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** uint16_t XMC_UART_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 360:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 361:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 362:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 363:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 364:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  word_length Data word length. \n
 365:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: minimum= 1, maximum= 16.
 366:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 367:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 368:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 369:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the data word length in number of bits.\n\n
 370:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Word length can range from 1 to 16. It indicates the number of data bits in a data word.
 371:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * The value of \a word_length will be decremented by 1 before setting the value to \a SCTR registe
 372:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * If the UART data bits is more than 16, then the frame length should be set to the actual number 
 373:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * word length should be configured with the number of bits expected in each transaction. For examp
 374:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * for UART communication is 20 bits, then the frame length should be set as 20. Word length can be
 375:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * transmit and receive handling. If data is stored as 8bit array, then the word length can be set 
 376:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * a full message of UART data should be transmitted/ received as 3 data words.
 377:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 378:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 379:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SetFrameLength() \n\n\n
 380:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 381:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
 382:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 383:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetWordLength(channel, word_length);
 384:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** }
 385:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 386:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 387:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 388:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 389:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  frame_length Number of data bits in each UART frame. \n
 390:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: minimum= 1, maximum= 64.
 391:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 392:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 393:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 394:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the number of data bits for UART communication.\n\n
 395:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * The frame length is configured by setting the input value to \a SCTR register.
 396:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * The value of \a frame_length will be decremented by 1, before setting it to the register.
 397:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Frame length should not be set to 64 for UART communication.
 398:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 399:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 400:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SetWordLength() \n\n\n
 401:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 402:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
 403:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 404:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetFrameLength(channel, frame_length);
 405:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** }
 406:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 407:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 408:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 409:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 410:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  event Event bitmasks to enable. Use the type @ref XMC_UART_CH_EVENT_t for naming events.
 411:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART_CH_EVENT_RECEIVE_START, @ref XMC_UART_CH_EVENT_DATA_LOST,
 412:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  @ref XMC_UART_CH_EVENT_TRANSMIT_SHIFT, @ref XMC_UART_CH_EVENT_TRANSMIT_BUFFER,
 413:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  etc.
 414:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 415:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 416:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 417:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Enables interrupt events for UART communication.\n\n
 418:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 419:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @ref XMC_UART_CH_EVENT_t enumerates multiple event bitmasks. These enumerations can be used as i
 420:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Events are configured by setting bits in the CCR register.
 421:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 422:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_DisableEvent(), XMC_UART_CH_SetInterruptNodePointer(), XMC_UART_CH_GetStatusFlag() \
 423:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 424:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 425:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 426:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 427:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 428:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 429:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  event Bitmask of events to disable. Use the type @ref XMC_UART_CH_EVENT_t for naming eve
 430:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART_CH_EVENT_RECEIVE_START, @ref XMC_UART_CH_EVENT_DATA_LOST,
 431:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  @ref XMC_UART_CH_EVENT_TRANSMIT_SHIFT, @ref XMC_UART_CH_EVENT_TRANSMIT_BUFFER,
 432:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  etc.
 433:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 434:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 435:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 436:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Disables the interrupt events by clearing the bits in CCR register.\n\n
 437:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 438:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EVENT_FLAG_t enumerates multiple event bitmasks. These enumerations can be used as i
 439:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 440:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 441:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_ClearStatusFlag(), XMC_UART_CH_EnableEvent() \n\n\n
 442:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 443:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 444:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 445:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 446:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 447:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 448:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param service_request Service request number for generating protocol interrupts.\n
 449:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: 0 to 5.
 450:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 451:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 452:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 453:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the interrupt node for UART channel protocol events.\n\n
 454:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * For all the protocol events enlisted in the enumeration XMC_UART_CH_EVENT_t, one common
 455:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * interrupt gets generated. The service request connects the interrupt node to the UART 
 456:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * protocol events.
 457:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 458:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 459:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 460:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent() \n\n\n
 461:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 462:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 463:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****                                                          const uint8_t service_request)
 464:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 465:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, 
 466:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****                                               (uint32_t)service_request);
 467:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** }
 468:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 469:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 470:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 471:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 472:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 473:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  \b Range: @ref XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 474:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  			@ref XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 475:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param service_request Service request number.\n
 476:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  \b Range: 0 to 5.
 477:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 478:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 479:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 480:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the interrupt node for USIC channel events. \n\n
 481:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 482:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 483:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 484:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 485:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 486:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent() \n\n\n
 487:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 488:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 489:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****                                                             const XMC_UART_CH_INTERRUPT_NODE_POINTE
 490:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****                                                             const uint32_t service_request)
 491:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 492:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 493:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 		                                       (uint32_t)service_request);
 494:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** }
 495:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 496:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 497:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 498:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@r
 499:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 500:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 			\b Range: 0 to 5.
 501:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 502:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 503:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 504:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Trigger a UART interrupt service request.\n\n
 505:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * When the UART service request is triggered, the NVIC interrupt associated with it will be
 506:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * generated if enabled.
 507:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 508:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 509:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SelectInterruptNodePointer() \n\n\n
 510:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 511:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
 512:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 513:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 514:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** }
 515:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 516:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 517:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 518:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 519:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return Status of UART channel events. \n 
 520:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: Use @ref XMC_UART_CH_STATUS_FLAG_t enumerations for
 521:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 					event bitmasks. @ref XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE, @ref XMC_UART_CH_STATUS_FLA
 522:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 					@ref XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED etc.
 523:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 524:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 525:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Provides the status of UART channel events.\n\n
 526:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Status provided by the API represents the status of multiple events at their bit positions. The 
 527:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * obtained using the enumeration XMC_UART_CH_STATUS_FLAG_t. Event status is obtained by reading
 528:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * the register PSR_ASCMode.
 529:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 530:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 531:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent(),  XMC_UART_CH_ClearStatusFlag()\n\n\n
 532:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 533:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE uint32_t XMC_UART_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 534:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 535:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   return channel->PSR_ASCMode;
 764              	 .loc 5 535 0
 765 0002 9023     	 mov r3,#144
 766 0004 DB05     	 lsl r3,r3,#23
 767 0006 9C6C     	 ldr r4,[r3,#72]
 768              	.LBE107:
 769              	.LBE106:
 341:../FF_Main.c  **** /* This is the IRQ Handler for the USCI ( USART in the Atmel World ) */
 342:../FF_Main.c  **** 
 343:../FF_Main.c  **** 
 344:../FF_Main.c  **** /* This can be called by diffetent Sources therfore we need to determine witch */
 345:../FF_Main.c  **** uint32_t status = XMC_UART_CH_GetStatusFlag( XMC_UART0_CH0 );
 346:../FF_Main.c  **** 
 347:../FF_Main.c  ****     // Did we receive data?
 348:../FF_Main.c  ****     if ((status & (XMC_UART_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION | XMC_UART_CH_STATUS_FLAG
 770              	 .loc 1 348 0
 771 0008 C023     	 mov r3,#192
 772 000a 1B02     	 lsl r3,r3,#8
 773 000c 1C42     	 tst r4,r3
 774 000e 09D0     	 beq .L34
 349:../FF_Main.c  ****     {
 350:../FF_Main.c  ****     	/* We need to add the correct callback here */
 351:../FF_Main.c  ****     	MB_RxHandler();
 775              	 .loc 1 351 0
 776 0010 FFF7FEFF 	 bl MB_RxHandler
 777              	.LVL75:
 778              	.LBB108:
 779              	.LBB109:
 536:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** }
 537:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** 
 538:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** /**
 539:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 540:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 541:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @param flag UART events to be cleared. \n
 542:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: Use @ref XMC_UART_CH_STATUS_FLAG_t enumerations for
 543:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 					event bitmasks. @ref XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE, @ref XMC_UART_CH_STATUS_FLA
 544:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * 					@ref XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED etc.
 545:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 546:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 547:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 548:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Clears the status of UART channel events.\n\n
 549:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 550:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_STATUS_FLAG_t enumerates multiple event bitmasks. These enumerations can be used as 
 551:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * Events are cleared by setting the bitmask to the PSCR register.
 552:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  *
 553:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 554:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_DisableEvent(),  XMC_UART_CH_GetStatusFlag()\n\n\n
 555:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****  */
 556:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, const uint32_t flag)
 557:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h **** {
 558:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PSCR = flag;
 780              	 .loc 5 558 0
 781 0014 9023     	 mov r3,#144
 782 0016 DB05     	 lsl r3,r3,#23
 783 0018 8022     	 mov r2,#128
 784 001a 1202     	 lsl r2,r2,#8
 785 001c DA64     	 str r2,[r3,#76]
 786              	.LVL76:
 787              	.LBE109:
 788              	.LBE108:
 789              	.LBB110:
 790              	.LBB111:
 791 001e 8022     	 mov r2,#128
 792 0020 D201     	 lsl r2,r2,#7
 793 0022 DA64     	 str r2,[r3,#76]
 794              	.LVL77:
 795              	.L34:
 796              	.LBE111:
 797              	.LBE110:
 352:../FF_Main.c  ****     	XMC_UART_CH_ClearStatusFlag(XMC_UART0_CH0, XMC_UART_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICAT
 353:../FF_Main.c  ****     	XMC_UART_CH_ClearStatusFlag(XMC_UART0_CH0, XMC_UART_CH_STATUS_FLAG_RECEIVE_INDICATION);
 354:../FF_Main.c  ****     }
 355:../FF_Main.c  **** 
 356:../FF_Main.c  ****     /* Transmission in Progress ? */
 357:../FF_Main.c  ****     if (( status & ( XMC_UART_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION)) != 0U){
 798              	 .loc 1 357 0
 799 0024 A304     	 lsl r3,r4,#18
 800 0026 04D5     	 bpl .L35
 801              	.LVL78:
 802              	.LBB112:
 803              	.LBB113:
 804              	 .loc 5 558 0
 805 0028 8022     	 mov r2,#128
 806 002a 9201     	 lsl r2,r2,#6
 807 002c 9023     	 mov r3,#144
 808 002e DB05     	 lsl r3,r3,#23
 809 0030 DA64     	 str r2,[r3,#76]
 810              	.LVL79:
 811              	.L35:
 812              	.LBE113:
 813              	.LBE112:
 358:../FF_Main.c  ****     	/* We can if requiered refill data to the buffer */
 359:../FF_Main.c  ****     	 XMC_UART_CH_ClearStatusFlag(XMC_UART0_CH0, XMC_UART_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION
 360:../FF_Main.c  **** 
 361:../FF_Main.c  ****     }
 362:../FF_Main.c  **** 
 363:../FF_Main.c  ****     /* Transmitt finished */
 364:../FF_Main.c  ****     if ((status & ( XMC_UART_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION)) != 0U){
 814              	 .loc 1 364 0
 815 0032 E304     	 lsl r3,r4,#19
 816 0034 06D5     	 bpl .L36
 817              	.LVL80:
 818              	.LBB114:
 819              	.LBB115:
 820              	 .loc 5 558 0
 821 0036 8022     	 mov r2,#128
 822 0038 5201     	 lsl r2,r2,#5
 823 003a 9023     	 mov r3,#144
 824 003c DB05     	 lsl r3,r3,#23
 825 003e DA64     	 str r2,[r3,#76]
 826              	.LBE115:
 827              	.LBE114:
 365:../FF_Main.c  ****     	/* We can if requiered refill data to the buffer */
 366:../FF_Main.c  ****     	XMC_UART_CH_ClearStatusFlag(XMC_UART0_CH0, XMC_UART_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION);
 367:../FF_Main.c  ****     	MB_TxHandler();
 828              	 .loc 1 367 0
 829 0040 FFF7FEFF 	 bl MB_TxHandler
 830              	.LVL81:
 831              	.L36:
 368:../FF_Main.c  ****     }
 369:../FF_Main.c  **** 
 370:../FF_Main.c  **** 	if ((status & ( XMC_UART_CH_STATUS_FLAG_TRANSMITTER_FRAME_FINISHED)) != 0U){
 832              	 .loc 1 370 0
 833 0044 E305     	 lsl r3,r4,#23
 834 0046 04D5     	 bpl .L33
 835              	.LVL82:
 836              	.LBB116:
 837              	.LBB117:
 838              	 .loc 5 558 0
 839 0048 8022     	 mov r2,#128
 840 004a 5200     	 lsl r2,r2,#1
 841 004c 9023     	 mov r3,#144
 842 004e DB05     	 lsl r3,r3,#23
 843 0050 DA64     	 str r2,[r3,#76]
 844              	.LVL83:
 845              	.L33:
 846              	.LBE117:
 847              	.LBE116:
 371:../FF_Main.c  **** 	    	/* We can if requiered refill data to the buffer */
 372:../FF_Main.c  **** 	    	XMC_UART_CH_ClearStatusFlag(XMC_UART0_CH0, XMC_UART_CH_STATUS_FLAG_TRANSMITTER_FRAME_FINISHED
 373:../FF_Main.c  **** 
 374:../FF_Main.c  **** 	}
 375:../FF_Main.c  **** 
 376:../FF_Main.c  **** }
 848              	 .loc 1 376 0
 849              	 
 850 0052 10BD     	 pop {r4,pc}
 851              	 .cfi_endproc
 852              	.LFE553:
 854              	 .global u8Address
 855              	 .global clock_config
 856              	 .global Delay_x
 857              	 .global boService
 858              	 .global compare_config
 859              	 .comm tx_pin_config,8,4
 860              	 .comm rx_pin_config,8,4
 861              	 .section .rodata
 862              	 .align 2
 863              	 .set .LANCHOR2,.+0
 864              	.LC0:
 865 0000 10       	 .byte 16
 866 0001 00       	 .byte 0
 867 0002 0000     	 .space 2
 868 0004 00000100 	 .word 65536
 869              	.LC1:
 870 0008 80       	 .byte -128
 871 0009 00       	 .byte 0
 872 000a 0000     	 .space 2
 873 000c 01000000 	 .word 1
 874              	.LC2:
 875 0010 30       	 .byte 48
 876 0011 00       	 .byte 0
 877 0012 0000     	 .space 2
 878 0014 00000100 	 .word 65536
 879              	 .section .rodata.clock_config,"a",%progbits
 880              	 .align 2
 881              	 .set .LANCHOR3,.+0
 884              	clock_config:
 885 0000 00       	 .byte 0
 886 0001 01       	 .byte 1
 887 0002 0000     	 .space 2
 888 0004 00000100 	 .word 65536
 889 0008 00000000 	 .word 0
 890              	 .section .data.boService,"aw",%progbits
 891              	 .set .LANCHOR1,.+0
 894              	boService:
 895 0000 01       	 .byte 1
 896              	 .section .data.compare_config,"aw",%progbits
 897              	 .align 2
 898              	 .set .LANCHOR4,.+0
 901              	compare_config:
 902 0000 02       	 .byte 2
 903 0001 00       	 .byte 0
 904 0002 00       	 .byte 0
 905 0003 00       	 .byte 0
 906 0004 0A       	 .byte 10
 907 0005 00       	 .byte 0
 908 0006 0000     	 .space 2
 909              	 .section .bss.u8Address,"aw",%nobits
 910              	 .set .LANCHOR5,.+0
 913              	u8Address:
 914 0000 00       	 .space 1
 915              	 .section .bss.Delay_x,"aw",%nobits
 916              	 .align 2
 917              	 .set .LANCHOR0,.+0
 920              	Delay_x:
 921 0000 00000000 	 .space 4
 922              	 .text
 923              	.Letext0:
 924              	 .file 6 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 925              	 .file 7 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Infineon/XMC1100_series/Include/XMC1100.h"
 926              	 .file 8 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 927              	 .file 9 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc/xmc_usic.h"
 928              	 .file 10 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc/xmc1_gpio.h"
 929              	 .file 11 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc/xmc1_scu.h"
 930              	 .file 12 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/freemodbus-v1.5.0/port/port.h"
 931              	 .file 13 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/freemodbus-v1.5.0/modbus/include/mbport.h"
 932              	 .file 14 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/freemodbus-v1.5.0/modbus/include/mb.h"
 933              	 .file 15 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Infineon/XMC1100_series/Include/system_XMC1100.h"
 934              	 .file 16 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc/xmc_scu.h"
 935              	 .file 17 "../modbus_if.h"
DEFINED SYMBOLS
                            *ABS*:00000000 FF_Main.c
    {standard input}:18     .text.SysTick_Handler:00000000 $t
    {standard input}:23     .text.SysTick_Handler:00000000 SysTick_Handler
    {standard input}:59     .text.SysTick_Handler:00000020 $d
    {standard input}:65     .text.SetUpGPIO:00000000 $t
    {standard input}:70     .text.SetUpGPIO:00000000 SetUpGPIO
    {standard input}:274    .text.SetUpGPIO:0000010c $d
    {standard input}:282    .text.ReverseBits:00000000 $t
    {standard input}:287    .text.ReverseBits:00000000 ReverseBits
    {standard input}:326    .text.ReadDipSwitch:00000000 $t
    {standard input}:331    .text.ReadDipSwitch:00000000 ReadDipSwitch
    {standard input}:360    .text.ReadDipSwitch:00000014 $d
    {standard input}:365    .text.__delay_ms:00000000 $t
    {standard input}:370    .text.__delay_ms:00000000 __delay_ms
    {standard input}:406    .text.__delay_ms:0000001c $d
    {standard input}:412    .text.main:00000000 $t
    {standard input}:417    .text.main:00000000 main
    {standard input}:711    .text.main:00000128 $d
    {standard input}:730    .text.Default_handler:00000000 $t
    {standard input}:735    .text.Default_handler:00000000 Default_handler
    {standard input}:746    .text.USIC0_0_IRQHandler:00000000 $t
    {standard input}:751    .text.USIC0_0_IRQHandler:00000000 USIC0_0_IRQHandler
    {standard input}:913    .bss.u8Address:00000000 u8Address
    {standard input}:884    .rodata.clock_config:00000000 clock_config
    {standard input}:920    .bss.Delay_x:00000000 Delay_x
    {standard input}:894    .data.boService:00000000 boService
    {standard input}:901    .data.compare_config:00000000 compare_config
                            *COM*:00000008 tx_pin_config
                            *COM*:00000008 rx_pin_config
    {standard input}:862    .rodata:00000000 $d
    {standard input}:880    .rodata.clock_config:00000000 $d
    {standard input}:897    .data.compare_config:00000000 $d
    {standard input}:914    .bss.u8Address:00000000 $d
    {standard input}:916    .bss.Delay_x:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
ff_check_position
XMC_GPIO_Init
ff_setup
__aeabi_uidiv
XMC_SCU_CLOCK_Init
XMC_CCU4_SetModuleClock
XMC_CCU4_Init
XMC_CCU4_SLICE_CompareInit
XMC_CCU4_SLICE_SetInterruptNode
MB_register_UART
voService
voManualSetPosition
eMBInit
eMBEnable
mb_stack_task
SystemCoreClock
MB_RxHandler
MB_TxHandler
