   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,1
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "mbutils.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.xMBUtilSetBits,"ax",%progbits
  18              	 .align 2
  19              	 .global xMBUtilSetBits
  20              	 .code 16
  21              	 .thumb_func
  23              	xMBUtilSetBits:
  24              	.LFB100:
  25              	 .file 1 "../freemodbus-v1.5.0/modbus/functions/mbutils.c"
   1:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** /* 
   2:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * FreeModbus Libary: A portable Modbus implementation for Modbus ASCII/RTU.
   3:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * Copyright (c) 2006 Christian Walter <wolti@sil.at>
   4:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * All rights reserved.
   5:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  *
   6:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * Redistribution and use in source and binary forms, with or without
   7:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * modification, are permitted provided that the following conditions
   8:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * are met:
   9:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * 1. Redistributions of source code must retain the above copyright
  10:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  *    notice, this list of conditions and the following disclaimer.
  11:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  *    documentation and/or other materials provided with the distribution.
  14:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * 3. The name of the author may not be used to endorse or promote products
  15:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  *    derived from this software without specific prior written permission.
  16:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  *
  17:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  18:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  19:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  20:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
  21:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  22:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  23:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  24:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  25:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  26:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  *
  28:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  * File: $Id: mbutils.c,v 1.6 2007/02/18 23:49:07 wolti Exp $
  29:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****  */
  30:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  31:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** /* ----------------------- System includes ----------------------------------*/
  32:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** #include "stdlib.h"
  33:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** #include "string.h"
  34:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  35:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** /* ----------------------- Platform includes --------------------------------*/
  36:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** #include "port.h"
  37:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  38:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** /* ----------------------- Modbus includes ----------------------------------*/
  39:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** #include "mb.h"
  40:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** #include "mbproto.h"
  41:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  42:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** /* ----------------------- Defines ------------------------------------------*/
  43:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** #define BITS_UCHAR      8U
  44:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  45:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** /* ----------------------- Start implementation -----------------------------*/
  46:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** void
  47:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** xMBUtilSetBits( UCHAR * ucByteBuf, USHORT usBitOffset, UCHAR ucNBits,
  48:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****                 UCHAR ucValue )
  49:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** {
  26              	 .loc 1 49 0
  27              	 .cfi_startproc
  28              	.LVL0:
  29 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  30              	.LCFI0:
  31              	 .cfi_def_cfa_offset 20
  32              	 .cfi_offset 4,-20
  33              	 .cfi_offset 5,-16
  34              	 .cfi_offset 6,-12
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37              	.LVL1:
  50:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     USHORT          usWordBuf;
  51:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     USHORT          usMask;
  52:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     USHORT          usByteOffset;
  53:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     USHORT          usNPreBits;
  54:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     USHORT          usValue = ucValue;
  55:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  56:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     assert( ucNBits <= 8 );
  57:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     assert( ( size_t )BITS_UCHAR == sizeof( UCHAR ) * 8 );
  58:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  59:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* Calculate byte offset for first byte containing the bit values starting
  60:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****      * at usBitOffset. */
  61:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usByteOffset = ( USHORT )( ( usBitOffset ) / BITS_UCHAR );
  38              	 .loc 1 61 0
  39 0002 CD08     	 lsr r5,r1,#3
  40              	.LVL2:
  62:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  63:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* How many bits precede our bits to set. */
  64:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usNPreBits = ( USHORT )( usBitOffset - usByteOffset * BITS_UCHAR );
  41              	 .loc 1 64 0
  42 0004 EF00     	 lsl r7,r5,#3
  43 0006 CE1B     	 sub r6,r1,r7
  44 0008 B6B2     	 uxth r6,r6
  45              	.LVL3:
  65:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  66:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* Move bit field into position over bits to set */
  67:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usValue <<= usNPreBits;
  46              	 .loc 1 67 0
  47 000a B340     	 lsl r3,r3,r6
  48              	.LVL4:
  49 000c 1E1C     	 mov r6,r3
  50              	.LVL5:
  68:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  69:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* Prepare a mask for setting the new bits. */
  70:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usMask = ( USHORT )( ( 1 << ( USHORT ) ucNBits ) - 1 );
  51              	 .loc 1 70 0
  52 000e 0124     	 mov r4,#1
  53 0010 9440     	 lsl r4,r4,r2
  54 0012 221C     	 mov r2,r4
  55              	.LVL6:
  56 0014 013A     	 sub r2,r2,#1
  57 0016 92B2     	 uxth r2,r2
  58              	.LVL7:
  71:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usMask <<= usBitOffset - usByteOffset * BITS_UCHAR;
  59              	 .loc 1 71 0
  60 0018 C91B     	 sub r1,r1,r7
  61              	.LVL8:
  62 001a 8A40     	 lsl r2,r2,r1
  63              	.LVL9:
  64 001c 111C     	 mov r1,r2
  65              	.LVL10:
  72:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  73:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* copy bits into temporary storage. */
  74:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usWordBuf = ucByteBuf[usByteOffset];
  66              	 .loc 1 74 0
  67 001e 4419     	 add r4,r0,r5
  68 0020 2278     	 ldrb r2,[r4]
  69              	.LVL11:
  75:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usWordBuf |= ucByteBuf[usByteOffset + 1] << BITS_UCHAR;
  70              	 .loc 1 75 0
  71 0022 0135     	 add r5,r5,#1
  72              	.LVL12:
  73 0024 4019     	 add r0,r0,r5
  74              	.LVL13:
  75 0026 0378     	 ldrb r3,[r0]
  76 0028 1B02     	 lsl r3,r3,#8
  77 002a 1343     	 orr r3,r2
  78              	.LVL14:
  76:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  77:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* Zero out bit field bits and then or value bits into them. */
  78:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usWordBuf = ( USHORT )( ( usWordBuf & ( ~usMask ) ) | usValue );
  79              	 .loc 1 78 0
  80 002c 8B43     	 bic r3,r1
  81              	.LVL15:
  82 002e 3343     	 orr r3,r6
  83 0030 9BB2     	 uxth r3,r3
  84              	.LVL16:
  79:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  80:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* move bits back into storage */
  81:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     ucByteBuf[usByteOffset] = ( UCHAR )( usWordBuf & 0xFF );
  85              	 .loc 1 81 0
  86 0032 2370     	 strb r3,[r4]
  82:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     ucByteBuf[usByteOffset + 1] = ( UCHAR )( usWordBuf >> BITS_UCHAR );
  87              	 .loc 1 82 0
  88 0034 1B0A     	 lsr r3,r3,#8
  89              	.LVL17:
  90 0036 0370     	 strb r3,[r0]
  91              	.LVL18:
  83:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** }
  92              	 .loc 1 83 0
  93              	 
  94              	.LVL19:
  95              	.LVL20:
  96 0038 F0BD     	 pop {r4,r5,r6,r7,pc}
  97              	 .cfi_endproc
  98              	.LFE100:
 100 003a C046     	 .section .text.xMBUtilGetBits,"ax",%progbits
 101              	 .align 2
 102              	 .global xMBUtilGetBits
 103              	 .code 16
 104              	 .thumb_func
 106              	xMBUtilGetBits:
 107              	.LFB101:
  84:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  85:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** UCHAR
  86:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** xMBUtilGetBits( UCHAR * ucByteBuf, USHORT usBitOffset, UCHAR ucNBits )
  87:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** {
 108              	 .loc 1 87 0
 109              	 .cfi_startproc
 110              	.LVL21:
 111 0000 10B5     	 push {r4,lr}
 112              	.LCFI1:
 113              	 .cfi_def_cfa_offset 8
 114              	 .cfi_offset 4,-8
 115              	 .cfi_offset 14,-4
  88:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     USHORT          usWordBuf;
  89:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     USHORT          usMask;
  90:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     USHORT          usByteOffset;
  91:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     USHORT          usNPreBits;
  92:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  93:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* Calculate byte offset for first byte containing the bit values starting
  94:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****      * at usBitOffset. */
  95:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usByteOffset = ( USHORT )( ( usBitOffset ) / BITS_UCHAR );
 116              	 .loc 1 95 0
 117 0002 CC08     	 lsr r4,r1,#3
 118              	.LVL22:
  96:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
  97:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* How many bits precede our bits to set. */
  98:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usNPreBits = ( USHORT )( usBitOffset - usByteOffset * BITS_UCHAR );
 119              	 .loc 1 98 0
 120 0004 E300     	 lsl r3,r4,#3
 121 0006 C91A     	 sub r1,r1,r3
 122              	.LVL23:
 123 0008 89B2     	 uxth r1,r1
 124              	.LVL24:
  99:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
 100:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* Prepare a mask for setting the new bits. */
 101:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usMask = ( USHORT )( ( 1 << ( USHORT ) ucNBits ) - 1 );
 125              	 .loc 1 101 0
 126 000a 0123     	 mov r3,#1
 127 000c 9340     	 lsl r3,r3,r2
 128 000e 1A1C     	 mov r2,r3
 129              	.LVL25:
 130 0010 013A     	 sub r2,r2,#1
 131              	.LVL26:
 102:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
 103:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* copy bits into temporary storage. */
 104:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usWordBuf = ucByteBuf[usByteOffset];
 132              	 .loc 1 104 0
 133 0012 035D     	 ldrb r3,[r0,r4]
 134              	.LVL27:
 105:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usWordBuf |= ucByteBuf[usByteOffset + 1] << BITS_UCHAR;
 135              	 .loc 1 105 0
 136 0014 0419     	 add r4,r0,r4
 137              	.LVL28:
 138 0016 6078     	 ldrb r0,[r4,#1]
 139              	.LVL29:
 140 0018 0002     	 lsl r0,r0,#8
 141 001a 1843     	 orr r0,r3
 142              	.LVL30:
 106:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
 107:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* throw away unneeded bits. */
 108:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usWordBuf >>= usNPreBits;
 143              	 .loc 1 108 0
 144 001c 0841     	 asr r0,r0,r1
 145              	.LVL31:
 109:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
 110:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     /* mask away bits above the requested bitfield. */
 111:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     usWordBuf &= usMask;
 146              	 .loc 1 111 0
 147 001e 1040     	 and r0,r2
 148              	.LVL32:
 112:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
 113:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     return ( UCHAR ) usWordBuf;
 149              	 .loc 1 113 0
 150 0020 C0B2     	 uxtb r0,r0
 114:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** }
 151              	 .loc 1 114 0
 152              	 
 153              	.LVL33:
 154 0022 10BD     	 pop {r4,pc}
 155              	 .cfi_endproc
 156              	.LFE101:
 158              	 .section .text.prveMBError2Exception,"ax",%progbits
 159              	 .align 2
 160              	 .global prveMBError2Exception
 161              	 .code 16
 162              	 .thumb_func
 164              	prveMBError2Exception:
 165              	.LFB102:
 115:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
 116:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** eMBException
 117:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** prveMBError2Exception( eMBErrorCode eErrorCode )
 118:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** {
 166              	 .loc 1 118 0
 167              	 .cfi_startproc
 168              	.LVL34:
 119:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     eMBException    eStatus;
 120:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
 121:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     switch ( eErrorCode )
 169              	 .loc 1 121 0
 170 0000 0128     	 cmp r0,#1
 171 0002 0AD0     	 beq .L8
 172 0004 0028     	 cmp r0,#0
 173 0006 02D0     	 beq .L6
 174 0008 0728     	 cmp r0,#7
 175 000a 02D0     	 beq .L7
 176 000c 03E0     	 b .L9
 177              	.L6:
 122:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     {
 123:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****         case MB_ENOERR:
 124:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****             eStatus = MB_EX_NONE;
 178              	 .loc 1 124 0
 179 000e 0020     	 mov r0,#0
 180              	.LVL35:
 181 0010 04E0     	 b .L5
 182              	.LVL36:
 183              	.L7:
 125:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****             break;
 126:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
 127:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****         case MB_ENOREG:
 128:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****             eStatus = MB_EX_ILLEGAL_DATA_ADDRESS;
 129:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****             break;
 130:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
 131:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****         case MB_ETIMEDOUT:
 132:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****             eStatus = MB_EX_SLAVE_BUSY;
 184              	 .loc 1 132 0
 185 0012 0620     	 mov r0,#6
 186              	.LVL37:
 133:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****             break;
 187              	 .loc 1 133 0
 188 0014 02E0     	 b .L5
 189              	.LVL38:
 190              	.L9:
 134:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
 135:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****         default:
 136:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****             eStatus = MB_EX_SLAVE_DEVICE_FAILURE;
 191              	 .loc 1 136 0
 192 0016 0420     	 mov r0,#4
 193              	.LVL39:
 137:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****             break;
 194              	 .loc 1 137 0
 195 0018 00E0     	 b .L5
 196              	.LVL40:
 197              	.L8:
 128:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****             break;
 198              	 .loc 1 128 0
 199 001a 0220     	 mov r0,#2
 200              	.LVL41:
 201              	.L5:
 138:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     }
 139:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** 
 140:../freemodbus-v1.5.0/modbus/functions/mbutils.c ****     return eStatus;
 141:../freemodbus-v1.5.0/modbus/functions/mbutils.c **** }
 202              	 .loc 1 141 0
 203              	 
 204 001c 7047     	 bx lr
 205              	 .cfi_endproc
 206              	.LFE102:
 208 001e C046     	 .text
 209              	.Letext0:
 210              	 .file 2 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 211              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 212              	 .file 4 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/freemodbus-v1.5.0/port/port.h"
 213              	 .file 5 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/freemodbus-v1.5.0/modbus/include/mbproto.h"
 214              	 .file 6 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/freemodbus-v1.5.0/modbus/include/mb.h"
DEFINED SYMBOLS
                            *ABS*:00000000 mbutils.c
    {standard input}:18     .text.xMBUtilSetBits:00000000 $t
    {standard input}:23     .text.xMBUtilSetBits:00000000 xMBUtilSetBits
    {standard input}:101    .text.xMBUtilGetBits:00000000 $t
    {standard input}:106    .text.xMBUtilGetBits:00000000 xMBUtilGetBits
    {standard input}:159    .text.prveMBError2Exception:00000000 $t
    {standard input}:164    .text.prveMBError2Exception:00000000 prveMBError2Exception
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
