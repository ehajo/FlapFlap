   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,1
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_usic.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_USIC_CH_Disable,"ax",%progbits
  18              	 .align 2
  19              	 .global XMC_USIC_CH_Disable
  20              	 .code 16
  21              	 .thumb_func
  23              	XMC_USIC_CH_Disable:
  24              	.LFB112:
  25              	 .file 1 "../Libraries/XMCLib/src/xmc_usic.c"
   1:../Libraries/XMCLib/src/xmc_usic.c **** /**
   2:../Libraries/XMCLib/src/xmc_usic.c ****  * @file xmc_usic.c
   3:../Libraries/XMCLib/src/xmc_usic.c ****  * @date 2015-09-01
   4:../Libraries/XMCLib/src/xmc_usic.c ****  *
   5:../Libraries/XMCLib/src/xmc_usic.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_usic.c ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usic.c ****  *
   9:../Libraries/XMCLib/src/xmc_usic.c ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usic.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usic.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_usic.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  21:../Libraries/XMCLib/src/xmc_usic.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_usic.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_usic.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_usic.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_usic.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_usic.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_usic.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_usic.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_usic.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_usic.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_usic.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_usic.c ****  *
  36:../Libraries/XMCLib/src/xmc_usic.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_usic.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_usic.c ****  *
  39:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Documentation improved <br>
  42:../Libraries/XMCLib/src/xmc_usic.c ****  *
  43:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-05-08:
  44:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Clearing bit fields PDIV, PCTQ, PPPEN in XMC_USIC_CH_SetBaudrate() API <br>
  45:../Libraries/XMCLib/src/xmc_usic.c ****  *      
  46:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:../Libraries/XMCLib/src/xmc_usic.c ****  *
  49:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-27:
  50:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  51:../Libraries/XMCLib/src/xmc_usic.c ****  *
  52:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-28:
  53:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added asserts to XMC_USIC_CH_ConfigExternalInputSignalToBRG() <br>
  54:../Libraries/XMCLib/src/xmc_usic.c ****  *
  55:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-09-01:
  56:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed warning in the asserts <br>
  57:../Libraries/XMCLib/src/xmc_usic.c ****  *
  58:../Libraries/XMCLib/src/xmc_usic.c ****  * @endcond
  59:../Libraries/XMCLib/src/xmc_usic.c ****  *
  60:../Libraries/XMCLib/src/xmc_usic.c ****  */
  61:../Libraries/XMCLib/src/xmc_usic.c **** 
  62:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  63:../Libraries/XMCLib/src/xmc_usic.c ****  * HEADER FILES
  64:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  65:../Libraries/XMCLib/src/xmc_usic.c **** 
  66:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_usic.h"
  67:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_scu.h"
  68:../Libraries/XMCLib/src/xmc_usic.c **** 
  69:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  70:../Libraries/XMCLib/src/xmc_usic.c ****  * MACROS
  71:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  72:../Libraries/XMCLib/src/xmc_usic.c **** 
  73:../Libraries/XMCLib/src/xmc_usic.c **** #define USIC_CH_INPR_Msk       (0x7UL)
  74:../Libraries/XMCLib/src/xmc_usic.c **** 
  75:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  76:../Libraries/XMCLib/src/xmc_usic.c ****  * API IMPLEMENTATION
  77:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  78:../Libraries/XMCLib/src/xmc_usic.c **** 
  79:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel)
  80:../Libraries/XMCLib/src/xmc_usic.c **** {
  81:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
  82:../Libraries/XMCLib/src/xmc_usic.c **** 
  83:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1))
  84:../Libraries/XMCLib/src/xmc_usic.c ****   {
  85:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC0);
  86:../Libraries/XMCLib/src/xmc_usic.c ****   }
  87:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
  88:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1))
  89:../Libraries/XMCLib/src/xmc_usic.c ****   {
  90:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC1);
  91:../Libraries/XMCLib/src/xmc_usic.c ****   }
  92:../Libraries/XMCLib/src/xmc_usic.c **** #endif
  93:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
  94:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1))
  95:../Libraries/XMCLib/src/xmc_usic.c ****   {
  96:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC2);
  97:../Libraries/XMCLib/src/xmc_usic.c ****   }
  98:../Libraries/XMCLib/src/xmc_usic.c **** #endif
  99:../Libraries/XMCLib/src/xmc_usic.c ****   else
 100:../Libraries/XMCLib/src/xmc_usic.c ****   {
 101:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0U/*Always*/);
 102:../Libraries/XMCLib/src/xmc_usic.c ****   }
 103:../Libraries/XMCLib/src/xmc_usic.c **** 
 104:../Libraries/XMCLib/src/xmc_usic.c ****   /* USIC channel switched on*/
 105:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (USIC_CH_KSCFG_MODEN_Msk | USIC_CH_KSCFG_BPMODEN_Msk);
 106:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 107:../Libraries/XMCLib/src/xmc_usic.c ****   {
 108:../Libraries/XMCLib/src/xmc_usic.c ****     /* Wait till the channel is enabled */
 109:../Libraries/XMCLib/src/xmc_usic.c ****   }
 110:../Libraries/XMCLib/src/xmc_usic.c **** 
 111:../Libraries/XMCLib/src/xmc_usic.c ****   /* Set USIC channel in IDLE mode */
 112:../Libraries/XMCLib/src/xmc_usic.c ****   channel->CCR &= (uint32_t)~USIC_CH_CCR_MODE_Msk;
 113:../Libraries/XMCLib/src/xmc_usic.c **** }
 114:../Libraries/XMCLib/src/xmc_usic.c **** 
 115:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel)
 116:../Libraries/XMCLib/src/xmc_usic.c **** {
  26              	 .loc 1 116 0
  27              	 .cfi_startproc
  28              	.LVL0:
 117:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
  29              	 .loc 1 117 0
  30 0000 C368     	 ldr r3,[r0,#12]
  31 0002 0322     	 mov r2,#3
  32 0004 9343     	 bic r3,r2
  33 0006 013A     	 sub r2,r2,#1
  34 0008 1343     	 orr r3,r2
  35 000a C360     	 str r3,[r0,#12]
 118:../Libraries/XMCLib/src/xmc_usic.c **** }
  36              	 .loc 1 118 0
  37              	 
  38 000c 7047     	 bx lr
  39              	 .cfi_endproc
  40              	.LFE112:
  42              	 .global __aeabi_uidiv
  43 000e C046     	 .section .text.XMC_USIC_CH_SetBaudrate,"ax",%progbits
  44              	 .align 2
  45              	 .global XMC_USIC_CH_SetBaudrate
  46              	 .code 16
  47              	 .thumb_func
  49              	XMC_USIC_CH_SetBaudrate:
  50              	.LFB113:
 119:../Libraries/XMCLib/src/xmc_usic.c **** 
 120:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 121:../Libraries/XMCLib/src/xmc_usic.c **** {
  51              	 .loc 1 121 0
  52              	 .cfi_startproc
  53              	.LVL1:
  54 0000 F0B5     	 push {r4,r5,r6,r7,lr}
  55              	.LCFI0:
  56              	 .cfi_def_cfa_offset 20
  57              	 .cfi_offset 4,-20
  58              	 .cfi_offset 5,-16
  59              	 .cfi_offset 6,-12
  60              	 .cfi_offset 7,-8
  61              	 .cfi_offset 14,-4
  62 0002 5F46     	 mov r7,fp
  63 0004 4E46     	 mov r6,r9
  64 0006 C0B4     	 push {r6,r7}
  65              	.LCFI1:
  66              	 .cfi_def_cfa_offset 28
  67              	 .cfi_offset 9,-28
  68              	 .cfi_offset 11,-24
  69 0008 83B0     	 sub sp,sp,#12
  70              	.LCFI2:
  71              	 .cfi_def_cfa_offset 40
 122:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 123:../Libraries/XMCLib/src/xmc_usic.c ****   
 124:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock;
 125:../Libraries/XMCLib/src/xmc_usic.c ****   
 126:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider;
 127:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider_min;
 128:../Libraries/XMCLib/src/xmc_usic.c **** 
 129:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv;
 130:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int;
 131:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int_min;
 132:../Libraries/XMCLib/src/xmc_usic.c ****   
 133:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac;
 134:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac_min;
 135:../Libraries/XMCLib/src/xmc_usic.c **** 
 136:../Libraries/XMCLib/src/xmc_usic.c ****   /* The rate and peripheral clock are divided by 100 to be able to use only 32bit arithmetic */
 137:../Libraries/XMCLib/src/xmc_usic.c ****   if ((rate >= 100U) && (oversampling != 0U))
  72              	 .loc 1 137 0
  73 000a 6329     	 cmp r1,#99
  74 000c 3DD9     	 bls .L7
  75              	 .loc 1 137 0 is_stmt 0 discriminator 1
  76 000e 002A     	 cmp r2,#0
  77 0010 3DD0     	 beq .L8
  78 0012 151C     	 mov r5,r2
  79 0014 0C1C     	 mov r4,r1
  80 0016 8346     	 mov fp,r0
 138:../Libraries/XMCLib/src/xmc_usic.c ****   {
 139:../Libraries/XMCLib/src/xmc_usic.c ****     peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / 100U;
  81              	 .loc 1 139 0 is_stmt 1
  82 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
  83              	.LVL2:
  84 001c 6421     	 mov r1,#100
  85 001e FFF7FEFF 	 bl __aeabi_uidiv
  86              	.LVL3:
  87 0022 8146     	 mov r9,r0
  88              	.LVL4:
 140:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
  89              	 .loc 1 140 0
  90 0024 201C     	 mov r0,r4
  91              	.LVL5:
  92 0026 6421     	 mov r1,#100
  93 0028 FFF7FEFF 	 bl __aeabi_uidiv
  94              	.LVL6:
  95 002c 071C     	 mov r7,r0
  96              	.LVL7:
 141:../Libraries/XMCLib/src/xmc_usic.c **** 
 142:../Libraries/XMCLib/src/xmc_usic.c ****     clock_divider_min = 1U;
 143:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 144:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
  97              	 .loc 1 144 0
  98 002e 1B4E     	 ldr r6,.L10
 143:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
  99              	 .loc 1 143 0
 100 0030 0123     	 mov r3,#1
 101 0032 0193     	 str r3,[sp,#4]
 142:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 102              	 .loc 1 142 0
 103 0034 0093     	 str r3,[sp]
 145:../Libraries/XMCLib/src/xmc_usic.c **** 
 146:../Libraries/XMCLib/src/xmc_usic.c ****     for(clock_divider = 1023U; clock_divider > 0U; --clock_divider)
 104              	 .loc 1 146 0
 105 0036 341C     	 mov r4,r6
 106 0038 11E0     	 b .L4
 107              	.LVL8:
 108              	.L6:
 147:../Libraries/XMCLib/src/xmc_usic.c ****     {
 148:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv = ((peripheral_clock * clock_divider) / (rate * oversampling));
 109              	 .loc 1 148 0
 110 003a 4846     	 mov r0,r9
 111 003c 6043     	 mul r0,r4
 112 003e 291C     	 mov r1,r5
 113 0040 7943     	 mul r1,r7
 114 0042 FFF7FEFF 	 bl __aeabi_uidiv
 115              	.LVL9:
 149:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 116              	 .loc 1 149 0
 117 0046 830A     	 lsr r3,r0,#10
 118              	.LVL10:
 150:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 119              	 .loc 1 150 0
 120 0048 8005     	 lsl r0,r0,#22
 121              	.LVL11:
 122 004a 800D     	 lsr r0,r0,#22
 123              	.LVL12:
 151:../Libraries/XMCLib/src/xmc_usic.c **** 
 152:../Libraries/XMCLib/src/xmc_usic.c ****       if ((pdiv_int < 1024U) && (pdiv_frac < pdiv_frac_min))
 124              	 .loc 1 152 0
 125 004c 134A     	 ldr r2,.L10
 126 004e 9342     	 cmp r3,r2
 127 0050 04D8     	 bhi .L5
 128              	 .loc 1 152 0 is_stmt 0 discriminator 1
 129 0052 B042     	 cmp r0,r6
 130 0054 02D2     	 bcs .L5
 153:../Libraries/XMCLib/src/xmc_usic.c ****       {
 154:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_frac_min = pdiv_frac;
 131              	 .loc 1 154 0 is_stmt 1
 132 0056 061C     	 mov r6,r0
 133              	.LVL13:
 155:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_int_min = pdiv_int;
 134              	 .loc 1 155 0
 135 0058 0193     	 str r3,[sp,#4]
 136              	.LVL14:
 156:../Libraries/XMCLib/src/xmc_usic.c ****         clock_divider_min = clock_divider;
 137              	 .loc 1 156 0
 138 005a 0094     	 str r4,[sp]
 139              	.LVL15:
 140              	.L5:
 146:../Libraries/XMCLib/src/xmc_usic.c ****     {
 141              	 .loc 1 146 0 discriminator 2
 142 005c 013C     	 sub r4,r4,#1
 143              	.LVL16:
 144              	.L4:
 146:../Libraries/XMCLib/src/xmc_usic.c ****     {
 145              	 .loc 1 146 0 is_stmt 0 discriminator 1
 146 005e 002C     	 cmp r4,#0
 147 0060 EBD1     	 bne .L6
 157:../Libraries/XMCLib/src/xmc_usic.c ****       }
 158:../Libraries/XMCLib/src/xmc_usic.c ****     }
 159:../Libraries/XMCLib/src/xmc_usic.c **** 
 160:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL |
 148              	 .loc 1 160 0 is_stmt 1
 149 0062 8023     	 mov r3,#128
 150 0064 1B02     	 lsl r3,r3,#8
 151 0066 009F     	 ldr r7,[sp]
 152              	.LVL17:
 153 0068 1F43     	 orr r7,r3
 154 006a 5B46     	 mov r3,fp
 155 006c 1F61     	 str r7,[r3,#16]
 161:../Libraries/XMCLib/src/xmc_usic.c ****                    (clock_divider_min << USIC_CH_FDR_STEP_Pos);
 162:../Libraries/XMCLib/src/xmc_usic.c **** 
 163:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 156              	 .loc 1 163 0
 157 006e 5A69     	 ldr r2,[r3,#20]
 158 0070 0B4B     	 ldr r3,.L10+4
 159 0072 1340     	 and r3,r2
 164:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 165:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 166:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 167:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 160              	 .loc 1 167 0
 161 0074 013D     	 sub r5,r5,#1
 162              	.LVL18:
 163 0076 AD02     	 lsl r5,r5,#10
 164              	.LVL19:
 166:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 165              	 .loc 1 166 0
 166 0078 1D43     	 orr r5,r3
 168:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 167              	 .loc 1 168 0
 168 007a 019E     	 ldr r6,[sp,#4]
 169              	.LVL20:
 170 007c 013E     	 sub r6,r6,#1
 171 007e 3604     	 lsl r6,r6,#16
 167:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 172              	 .loc 1 167 0
 173 0080 3543     	 orr r5,r6
 163:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 174              	 .loc 1 163 0
 175 0082 5B46     	 mov r3,fp
 176 0084 5D61     	 str r5,[r3,#20]
 177              	.LVL21:
 169:../Libraries/XMCLib/src/xmc_usic.c ****                     
 170:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 178              	 .loc 1 170 0
 179 0086 0020     	 mov r0,#0
 180 0088 02E0     	 b .L3
 181              	.LVL22:
 182              	.L7:
 171:../Libraries/XMCLib/src/xmc_usic.c ****   }
 172:../Libraries/XMCLib/src/xmc_usic.c ****   else 
 173:../Libraries/XMCLib/src/xmc_usic.c ****   {
 174:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 183              	 .loc 1 174 0
 184 008a 0120     	 mov r0,#1
 185              	.LVL23:
 186 008c 00E0     	 b .L3
 187              	.LVL24:
 188              	.L8:
 189 008e 0120     	 mov r0,#1
 190              	.LVL25:
 191              	.L3:
 175:../Libraries/XMCLib/src/xmc_usic.c ****   }
 176:../Libraries/XMCLib/src/xmc_usic.c ****   
 177:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 178:../Libraries/XMCLib/src/xmc_usic.c **** }
 192              	 .loc 1 178 0
 193 0090 03B0     	 add sp,sp,#12
 194              	 
 195 0092 0CBC     	 pop {r2,r3}
 196 0094 9146     	 mov r9,r2
 197 0096 9B46     	 mov fp,r3
 198 0098 F0BD     	 pop {r4,r5,r6,r7,pc}
 199              	.L11:
 200 009a C046     	 .align 2
 201              	.L10:
 202 009c FF030000 	 .word 1023
 203 00a0 EF8000FC 	 .word -67075857
 204              	 .cfi_endproc
 205              	.LFE113:
 207              	 .section .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG,"ax",%progbits
 208              	 .align 2
 209              	 .global XMC_USIC_CH_ConfigExternalInputSignalToBRG
 210              	 .code 16
 211              	 .thumb_func
 213              	XMC_USIC_CH_ConfigExternalInputSignalToBRG:
 214              	.LFB114:
 179:../Libraries/XMCLib/src/xmc_usic.c **** 
 180:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 181:../Libraries/XMCLib/src/xmc_usic.c **** 		                                        const uint16_t pdiv,
 182:../Libraries/XMCLib/src/xmc_usic.c **** 												const uint32_t oversampling,
 183:../Libraries/XMCLib/src/xmc_usic.c **** 												const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
 184:../Libraries/XMCLib/src/xmc_usic.c **** {
 215              	 .loc 1 184 0
 216              	 .cfi_startproc
 217              	.LVL26:
 218 0000 30B5     	 push {r4,r5,lr}
 219              	.LCFI3:
 220              	 .cfi_def_cfa_offset 12
 221              	 .cfi_offset 4,-12
 222              	 .cfi_offset 5,-8
 223              	 .cfi_offset 14,-4
 224              	.LVL27:
 225              	.LBB6:
 226              	.LBB7:
 227              	 .file 2 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2017-02-10
   4:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.16 - XMC Peripheral Driver Library 
   8:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  81:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
  82:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
  83:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
  84:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  85:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  86:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  87:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  88:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  89:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
  90:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
  91:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
  92:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
  93:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
  94:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
  95:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
  96:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
  97:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
  98:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
  99:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 100:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 101:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 102:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 103:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 104:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 105:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 106:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 107:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 108:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 109:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 110:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 111:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 112:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 113:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 114:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 115:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 116:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 117:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 118:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 119:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 120:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 122:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 123:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 124:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 125:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 126:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 127:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 128:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 129:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 130:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 131:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 132:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 133:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 134:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 135:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 136:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 137:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 138:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 139:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 140:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 141:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 142:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 143:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 144:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 145:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 146:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 147:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 148:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 149:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 150:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 151:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 152:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 153:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 154:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 155:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 156:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 157:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 158:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 159:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 160:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 161:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 162:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 163:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 164:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 165:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 166:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 167:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 168:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 169:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 170:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 171:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 172:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 173:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 174:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 175:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 176:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 177:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 178:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 179:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 180:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 181:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 182:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 183:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 184:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 185:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 186:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 187:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 188:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 189:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 190:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 191:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 192:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 193:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 194:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 195:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 196:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 197:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 198:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 199:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 200:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 201:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 202:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 203:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 204:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 205:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 206:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 207:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 208:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 209:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 210:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 211:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 212:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 213:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 214:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 215:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 216:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 217:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 218:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 219:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 220:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 221:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 222:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 223:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 224:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 225:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 226:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 227:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 228:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 229:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 230:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 231:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 232:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 233:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 234:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 235:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 236:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 237:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 238:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 239:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 240:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 241:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 242:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 243:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 244:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 245:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 246:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 247:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 248:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 249:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 250:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 251:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 252:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 253:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 254:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 255:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 256:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 257:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 258:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 259:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 260:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 261:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 262:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 263:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 264:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 265:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 266:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 267:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 268:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 269:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 270:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 271:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 272:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 273:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 274:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 275:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 276:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 277:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 278:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 279:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 280:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 281:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 282:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 283:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 284:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 285:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 286:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 287:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 288:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 289:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 290:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 291:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 292:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 293:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 294:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 295:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 296:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 297:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 298:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 299:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 300:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 301:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 302:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 303:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 304:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 305:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 306:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 307:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 308:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 309:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 310:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 311:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 312:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 313:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 314:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 315:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 316:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 317:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 318:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 319:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 320:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 321:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 322:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 323:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 324:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 325:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 326:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 327:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 328:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 329:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 330:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 331:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 332:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 333:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 334:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 335:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 336:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 337:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 338:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 339:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 340:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 341:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 342:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 343:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 344:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 345:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 346:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 347:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 348:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 349:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 350:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 351:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 352:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 353:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 354:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 355:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 356:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 357:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 358:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 359:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 360:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 361:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 362:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 363:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 364:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 365:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 366:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 367:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 368:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 369:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 370:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 371:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 372:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 373:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 374:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 375:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 376:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 377:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 378:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 379:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 380:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 381:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 382:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 383:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 384:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 385:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 386:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 387:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 388:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 389:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 390:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 391:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 392:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 393:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 394:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 395:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 396:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 397:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 398:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 399:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 400:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 401:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 402:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 403:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 404:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 405:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 406:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 407:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 408:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 409:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 410:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 411:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 412:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 413:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 414:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 415:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 416:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 417:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 418:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 419:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 420:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 421:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 422:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 423:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 424:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 425:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 426:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 427:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 428:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 429:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 430:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 431:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 432:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 433:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 434:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 435:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 436:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 437:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 438:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 439:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 440:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 441:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 442:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 443:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 444:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 445:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 446:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 447:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 448:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 449:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** */
 450:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 451:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 452:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 453:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Msk /**< Shift MSB first. The 
 454:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 455:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 456:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 457:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 458:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 459:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 460:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 461:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 462:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 463:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 464:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 465:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 466:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 467:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 468:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 469:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 470:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 471:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 472:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 473:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 474:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 475:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 476:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 477:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 478:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 479:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 480:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 481:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 482:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 483:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 484:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 485:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 486:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 487:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 488:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 489:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 490:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 491:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 492:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 493:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 494:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 495:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 496:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 497:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 498:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 499:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 500:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   };
 501:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 502:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 503:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 504:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 505:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 506:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 507:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 508:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 509:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 510:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   };
 511:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 512:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 513:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 514:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 515:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 516:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 517:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 518:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 519:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 520:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 521:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 522:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 523:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 524:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 525:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 526:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 527:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 528:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 529:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 530:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 531:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 532:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 533:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 534:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 535:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 536:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 537:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 538:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 539:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 540:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 541:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 542:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 543:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 544:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 545:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 546:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 547:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 548:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 549:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 550:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 551:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 552:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 553:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 554:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 555:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 556:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 557:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 558:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 559:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 560:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 562:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 563:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 564:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 565:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 566:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 567:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 568:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 569:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 570:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 571:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 572:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 573:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 574:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 575:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 576:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 577:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 578:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 579:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 580:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 581:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 582:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 583:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 584:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 585:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 586:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 587:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 588:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 589:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 590:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 591:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 592:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 593:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 594:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 595:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 596:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 597:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 598:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 599:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 600:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 601:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 602:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 603:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 604:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 605:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 606:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 607:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 608:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 609:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 610:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 611:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 612:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 613:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 614:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 615:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 616:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 617:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 618:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 619:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 620:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 621:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 622:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 623:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 624:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 625:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 626:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 627:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 628:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 629:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 630:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 631:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 632:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 633:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 634:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 635:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 636:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 637:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 638:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 639:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 640:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 641:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 642:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 643:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 644:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 645:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 646:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 647:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 648:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 649:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 650:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 651:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 652:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 653:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 654:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 655:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 656:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 657:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 658:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 659:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 660:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 661:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 662:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 663:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 664:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 665:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 666:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 667:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 668:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 669:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 670:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 671:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 672:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 673:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 674:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 675:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 676:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 677:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 678:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 679:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 680:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 681:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 682:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 683:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 684:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 685:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 686:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 687:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 688:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 689:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 690:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 691:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 692:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 693:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 694:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 695:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 696:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 697:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 698:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 699:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 700:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 701:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 702:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 703:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 704:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 705:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 706:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 707:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 708:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 709:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 710:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 711:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 712:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 713:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 714:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 715:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 716:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 717:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 718:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 719:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 720:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 721:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 722:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 723:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 724:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 725:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 726:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 727:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 728:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 729:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 730:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 731:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 732:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 733:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 734:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 735:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 736:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 737:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 738:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 739:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 740:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 741:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 742:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 743:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 744:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 745:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 746:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 747:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 748:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 749:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 750:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 751:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 752:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 753:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 754:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 755:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 756:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 757:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 758:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 759:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 760:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 761:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 762:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 763:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 764:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 765:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 766:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 767:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 768:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 769:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 770:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 771:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 772:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 773:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 774:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 775:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 776:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 777:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 778:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 779:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 780:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 781:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 782:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 783:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 784:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 785:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 786:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 787:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 788:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 789:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 790:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 791:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 792:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 793:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 794:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 795:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 796:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 797:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 798:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 799:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 800:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 801:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 802:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 803:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 804:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 805:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 806:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 807:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 808:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 809:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 810:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 811:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 812:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 813:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 814:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 815:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 816:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 817:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 818:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 819:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 820:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 821:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 822:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 823:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 824:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 825:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 826:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 827:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 828:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 829:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 830:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 831:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 832:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 833:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 834:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 835:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 836:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 837:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 838:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 839:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 840:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 841:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 842:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 843:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 844:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 845:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 846:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 847:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 848:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 849:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 850:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 851:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 852:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 853:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 854:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 855:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 856:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 857:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 858:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 859:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 860:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 861:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 862:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 863:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 864:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 865:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 866:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 867:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 868:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 869:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 870:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 871:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 872:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 873:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 874:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 875:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 876:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 877:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 878:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 879:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 880:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 881:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 882:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 883:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 884:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 885:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 886:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 887:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 888:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 889:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 890:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 891:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 892:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 893:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 894:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 895:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 896:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 897:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 898:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 899:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 900:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 901:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 902:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 903:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 904:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 905:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 906:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 907:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 908:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 909:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 910:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 911:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 912:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 913:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 914:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 915:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 916:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 917:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 918:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 919:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 920:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 921:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 922:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
 923:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 924:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 925:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 926:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
 927:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 928:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 929:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 930:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 931:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
 932:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
 933:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
 934:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 935:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
 936:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
 937:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 938:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** 
 939:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** /**
 940:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 941:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 942:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
 943:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 944:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 945:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 946:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
 947:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  *
 948:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 949:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
 950:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****  */
 951:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
 952:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** {
 953:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 228              	 .loc 2 953 0
 229 0002 4469     	 ldr r4,[r0,#20]
 230 0004 0325     	 mov r5,#3
 231 0006 AC43     	 bic r4,r5
 232 0008 013D     	 sub r5,r5,#1
 233 000a 2C43     	 orr r4,r5
 234 000c 4461     	 str r4,[r0,#20]
 235              	.LVL28:
 236              	.LBE7:
 237              	.LBE6:
 238              	.LBB8:
 239              	.LBB9:
 935:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
 240              	 .loc 2 935 0
 241 000e 056A     	 ldr r5,[r0,#32]
 242 0010 074C     	 ldr r4,.L13
 243 0012 2C40     	 and r4,r5
 936:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h **** }
 244              	 .loc 2 936 0
 245 0014 9B02     	 lsl r3,r3,#10
 246              	.LVL29:
 935:C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
 247              	 .loc 2 935 0
 248 0016 2343     	 orr r3,r4
 249 0018 0362     	 str r3,[r0,#32]
 250              	.LBE9:
 251              	.LBE8:
 185:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Divider out of range", ((1U < pdiv) || (p
 186:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Oversampling out of range", ((1U < oversa
 187:../Libraries/XMCLib/src/xmc_usic.c **** 
 188:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the external input frequency source through DX1 */
 189:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetBRGInputClockSource(channel, XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T);
 190:../Libraries/XMCLib/src/xmc_usic.c **** 
 191:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the trigger combination mode */
 192:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetInputTriggerCombinationMode(channel,XMC_USIC_CH_INPUT_DX1,combination_mode);
 193:../Libraries/XMCLib/src/xmc_usic.c **** 
 194:../Libraries/XMCLib/src/xmc_usic.c ****   /* Configuring the dividers and oversampling */
 195:../Libraries/XMCLib/src/xmc_usic.c ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 252              	 .loc 1 195 0
 253 001a 4469     	 ldr r4,[r0,#20]
 254 001c 054B     	 ldr r3,.L13+4
 255 001e 2340     	 and r3,r4
 196:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 197:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PCTQ_Msk |
 198:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PPPEN_Msk)) |
 199:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 256              	 .loc 1 199 0
 257 0020 013A     	 sub r2,r2,#1
 258              	.LVL30:
 259 0022 9202     	 lsl r2,r2,#10
 260              	.LVL31:
 198:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 261              	 .loc 1 198 0
 262 0024 1A43     	 orr r2,r3
 200:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 263              	 .loc 1 200 0
 264 0026 0139     	 sub r1,r1,#1
 265              	.LVL32:
 266 0028 0904     	 lsl r1,r1,#16
 199:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 267              	 .loc 1 199 0
 268 002a 1143     	 orr r1,r2
 195:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 269              	 .loc 1 195 0
 270 002c 4161     	 str r1,[r0,#20]
 201:../Libraries/XMCLib/src/xmc_usic.c **** }
 271              	 .loc 1 201 0
 272              	 
 273 002e 30BD     	 pop {r4,r5,pc}
 274              	.L14:
 275              	 .align 2
 276              	.L13:
 277 0030 FFF3FFFF 	 .word -3073
 278 0034 EF8000FC 	 .word -67075857
 279              	 .cfi_endproc
 280              	.LFE114:
 282              	 .section .text.XMC_USIC_CH_TXFIFO_Configure,"ax",%progbits
 283              	 .align 2
 284              	 .global XMC_USIC_CH_TXFIFO_Configure
 285              	 .code 16
 286              	 .thumb_func
 288              	XMC_USIC_CH_TXFIFO_Configure:
 289              	.LFB115:
 202:../Libraries/XMCLib/src/xmc_usic.c **** 
 203:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
 204:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 205:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 206:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 207:../Libraries/XMCLib/src/xmc_usic.c **** {
 290              	 .loc 1 207 0
 291              	 .cfi_startproc
 292              	.LVL33:
 293 0000 70B5     	 push {r4,r5,r6,lr}
 294              	.LCFI4:
 295              	 .cfi_def_cfa_offset 16
 296              	 .cfi_offset 4,-16
 297              	 .cfi_offset 5,-12
 298              	 .cfi_offset 6,-8
 299              	 .cfi_offset 14,-4
 208:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 209:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 300              	 .loc 1 209 0
 301 0002 8425     	 mov r5,#132
 302 0004 6D00     	 lsl r5,r5,#1
 303 0006 4659     	 ldr r6,[r0,r5]
 304 0008 064C     	 ldr r4,.L16
 305 000a 3440     	 and r4,r6
 306 000c 4451     	 str r4,[r0,r5]
 210:../Libraries/XMCLib/src/xmc_usic.c **** 
 211:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 0, A standard transmit buffer event occurs when the filling level equals the limit value
 212:../Libraries/XMCLib/src/xmc_usic.c ****    * lower due to transmission of a data word
 213:../Libraries/XMCLib/src/xmc_usic.c ****    * STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 214:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 215:../Libraries/XMCLib/src/xmc_usic.c ****    */
 216:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)(channel->TBCTR & (uint32_t)~(USIC_CH_TBCTR_LIMIT_Msk |
 307              	 .loc 1 216 0
 308 000e 4659     	 ldr r6,[r0,r5]
 309 0010 054C     	 ldr r4,.L16+4
 310 0012 2640     	 and r6,r4
 217:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 218:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_SIZE_Msk)) |
 219:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 311              	 .loc 1 219 0
 312 0014 1B02     	 lsl r3,r3,#8
 313              	.LVL34:
 314 0016 1943     	 orr r1,r3
 315              	.LVL35:
 220:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 221:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 316              	 .loc 1 221 0
 317 0018 1406     	 lsl r4,r2,#24
 219:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 318              	 .loc 1 219 0
 319 001a 0A1C     	 mov r2,r1
 320              	.LVL36:
 321 001c 2243     	 orr r2,r4
 218:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 322              	 .loc 1 218 0
 323 001e 3243     	 orr r2,r6
 216:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 324              	 .loc 1 216 0
 325 0020 4251     	 str r2,[r0,r5]
 222:../Libraries/XMCLib/src/xmc_usic.c **** }
 326              	 .loc 1 222 0
 327              	 
 328 0022 70BD     	 pop {r4,r5,r6,pc}
 329              	.L17:
 330              	 .align 2
 331              	.L16:
 332 0024 FFFFFFF8 	 .word -117440513
 333 0028 C0C0FFF8 	 .word -117456704
 334              	 .cfi_endproc
 335              	.LFE115:
 337              	 .section .text.XMC_USIC_CH_RXFIFO_Configure,"ax",%progbits
 338              	 .align 2
 339              	 .global XMC_USIC_CH_RXFIFO_Configure
 340              	 .code 16
 341              	 .thumb_func
 343              	XMC_USIC_CH_RXFIFO_Configure:
 344              	.LFB116:
 223:../Libraries/XMCLib/src/xmc_usic.c **** 
 224:../Libraries/XMCLib/src/xmc_usic.c **** 
 225:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
 226:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 227:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 228:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 229:../Libraries/XMCLib/src/xmc_usic.c **** {
 345              	 .loc 1 229 0
 346              	 .cfi_startproc
 347              	.LVL37:
 348 0000 70B5     	 push {r4,r5,r6,lr}
 349              	.LCFI5:
 350              	 .cfi_def_cfa_offset 16
 351              	 .cfi_offset 4,-16
 352              	 .cfi_offset 5,-12
 353              	 .cfi_offset 6,-8
 354              	 .cfi_offset 14,-4
 230:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 231:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 355              	 .loc 1 231 0
 356 0002 8625     	 mov r5,#134
 357 0004 6D00     	 lsl r5,r5,#1
 358 0006 4659     	 ldr r6,[r0,r5]
 359 0008 084C     	 ldr r4,.L19
 360 000a 3440     	 and r4,r6
 361 000c 4451     	 str r4,[r0,r5]
 232:../Libraries/XMCLib/src/xmc_usic.c **** 
 233:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 1, A standard receive buffer event occurs when the filling level equals the limit value 
 234:../Libraries/XMCLib/src/xmc_usic.c ****    *  due to the reception of a new data word
 235:../Libraries/XMCLib/src/xmc_usic.c ****    */
 236:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (uint32_t)~(USIC_CH_RBCTR_LIMIT_Msk |
 362              	 .loc 1 236 0
 363 000e 4659     	 ldr r6,[r0,r5]
 364 0010 074C     	 ldr r4,.L19+4
 365 0012 2640     	 and r6,r4
 237:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 238:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_LOF_Msk)) |
 239:../Libraries/XMCLib/src/xmc_usic.c ****                    ((limit << USIC_CH_RBCTR_LIMIT_Pos) |
 366              	 .loc 1 239 0
 367 0014 1B02     	 lsl r3,r3,#8
 368              	.LVL38:
 369 0016 1943     	 orr r1,r3
 370              	.LVL39:
 240:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 241:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos) |
 371              	 .loc 1 241 0
 372 0018 1406     	 lsl r4,r2,#24
 240:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 373              	 .loc 1 240 0
 374 001a 0A1C     	 mov r2,r1
 375              	.LVL40:
 376 001c 2243     	 orr r2,r4
 236:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 377              	 .loc 1 236 0
 378 001e 3243     	 orr r2,r6
 379 0020 8021     	 mov r1,#128
 380 0022 4905     	 lsl r1,r1,#21
 381 0024 0A43     	 orr r2,r1
 382 0026 4251     	 str r2,[r0,r5]
 242:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)USIC_CH_RBCTR_LOF_Msk));
 243:../Libraries/XMCLib/src/xmc_usic.c **** }
 383              	 .loc 1 243 0
 384              	 
 385 0028 70BD     	 pop {r4,r5,r6,pc}
 386              	.L20:
 387 002a C046     	 .align 2
 388              	.L19:
 389 002c FFFFFFF8 	 .word -117440513
 390 0030 C0C0FFEF 	 .word -268451648
 391              	 .cfi_endproc
 392              	.LFE116:
 394              	 .section .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit,"ax",%progbits
 395              	 .align 2
 396              	 .global XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
 397              	 .code 16
 398              	 .thumb_func
 400              	XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:
 401              	.LFB117:
 244:../Libraries/XMCLib/src/xmc_usic.c **** 
 245:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 246:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 247:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 248:../Libraries/XMCLib/src/xmc_usic.c **** {
 402              	 .loc 1 248 0
 403              	 .cfi_startproc
 404              	.LVL41:
 405 0000 30B5     	 push {r4,r5,lr}
 406              	.LCFI6:
 407              	 .cfi_def_cfa_offset 12
 408              	 .cfi_offset 4,-12
 409              	 .cfi_offset 5,-8
 410              	 .cfi_offset 14,-4
 249:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 250:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 411              	 .loc 1 250 0
 412 0002 8423     	 mov r3,#132
 413 0004 5B00     	 lsl r3,r3,#1
 414 0006 C558     	 ldr r5,[r0,r3]
 415 0008 054C     	 ldr r4,.L22
 416 000a 2C40     	 and r4,r5
 417 000c C450     	 str r4,[r0,r3]
 251:../Libraries/XMCLib/src/xmc_usic.c **** 
 252:../Libraries/XMCLib/src/xmc_usic.c ****   /* STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 253:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 254:../Libraries/XMCLib/src/xmc_usic.c ****    */
 255:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((uint32_t)(channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) |
 418              	 .loc 1 255 0
 419 000e C558     	 ldr r5,[r0,r3]
 420 0010 044C     	 ldr r4,.L22+4
 421 0012 2C40     	 and r4,r5
 256:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 422              	 .loc 1 256 0
 423 0014 1202     	 lsl r2,r2,#8
 424              	.LVL42:
 255:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 425              	 .loc 1 255 0
 426 0016 2243     	 orr r2,r4
 257:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 427              	 .loc 1 257 0
 428 0018 0906     	 lsl r1,r1,#24
 429              	.LVL43:
 255:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 430              	 .loc 1 255 0
 431 001a 1143     	 orr r1,r2
 432 001c C150     	 str r1,[r0,r3]
 258:../Libraries/XMCLib/src/xmc_usic.c **** }
 433              	 .loc 1 258 0
 434              	 
 435 001e 30BD     	 pop {r4,r5,pc}
 436              	.L23:
 437              	 .align 2
 438              	.L22:
 439 0020 FFFFFFF8 	 .word -117440513
 440 0024 FFC0FFFF 	 .word -16129
 441              	 .cfi_endproc
 442              	.LFE117:
 444              	 .section .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit,"ax",%progbits
 445              	 .align 2
 446              	 .global XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 447              	 .code 16
 448              	 .thumb_func
 450              	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:
 451              	.LFB118:
 259:../Libraries/XMCLib/src/xmc_usic.c **** 
 260:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 261:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 262:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 263:../Libraries/XMCLib/src/xmc_usic.c **** {
 452              	 .loc 1 263 0
 453              	 .cfi_startproc
 454              	.LVL44:
 455 0000 30B5     	 push {r4,r5,lr}
 456              	.LCFI7:
 457              	 .cfi_def_cfa_offset 12
 458              	 .cfi_offset 4,-12
 459              	 .cfi_offset 5,-8
 460              	 .cfi_offset 14,-4
 264:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 265:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 461              	 .loc 1 265 0
 462 0002 8623     	 mov r3,#134
 463 0004 5B00     	 lsl r3,r3,#1
 464 0006 C558     	 ldr r5,[r0,r3]
 465 0008 054C     	 ldr r4,.L25
 466 000a 2C40     	 and r4,r5
 467 000c C450     	 str r4,[r0,r3]
 266:../Libraries/XMCLib/src/xmc_usic.c **** 
 267:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((uint32_t)(channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) |
 468              	 .loc 1 267 0
 469 000e C558     	 ldr r5,[r0,r3]
 470 0010 044C     	 ldr r4,.L25+4
 471 0012 2C40     	 and r4,r5
 268:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 472              	 .loc 1 268 0
 473 0014 1202     	 lsl r2,r2,#8
 474              	.LVL45:
 267:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 475              	 .loc 1 267 0
 476 0016 2243     	 orr r2,r4
 269:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos));
 477              	 .loc 1 269 0
 478 0018 0906     	 lsl r1,r1,#24
 479              	.LVL46:
 267:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 480              	 .loc 1 267 0
 481 001a 1143     	 orr r1,r2
 482 001c C150     	 str r1,[r0,r3]
 270:../Libraries/XMCLib/src/xmc_usic.c **** }
 483              	 .loc 1 270 0
 484              	 
 485 001e 30BD     	 pop {r4,r5,pc}
 486              	.L26:
 487              	 .align 2
 488              	.L25:
 489 0020 FFFFFFF8 	 .word -117440513
 490 0024 FFC0FFFF 	 .word -16129
 491              	 .cfi_endproc
 492              	.LFE118:
 494              	 .section .text.XMC_USIC_CH_SetInterruptNodePointer,"ax",%progbits
 495              	 .align 2
 496              	 .global XMC_USIC_CH_SetInterruptNodePointer
 497              	 .code 16
 498              	 .thumb_func
 500              	XMC_USIC_CH_SetInterruptNodePointer:
 501              	.LFB119:
 271:../Libraries/XMCLib/src/xmc_usic.c **** 
 272:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 273:../Libraries/XMCLib/src/xmc_usic.c ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 274:../Libraries/XMCLib/src/xmc_usic.c ****                                          const uint32_t service_request)
 275:../Libraries/XMCLib/src/xmc_usic.c **** {
 502              	 .loc 1 275 0
 503              	 .cfi_startproc
 504              	.LVL47:
 505 0000 10B5     	 push {r4,lr}
 506              	.LCFI8:
 507              	 .cfi_def_cfa_offset 8
 508              	 .cfi_offset 4,-8
 509              	 .cfi_offset 14,-4
 276:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 510              	 .loc 1 276 0
 511 0002 8369     	 ldr r3,[r0,#24]
 512 0004 0724     	 mov r4,#7
 513 0006 8C40     	 lsl r4,r4,r1
 514 0008 A343     	 bic r3,r4
 277:../Libraries/XMCLib/src/xmc_usic.c ****                   (service_request << (uint32_t)interrupt_node));
 515              	 .loc 1 277 0
 516 000a 8A40     	 lsl r2,r2,r1
 517              	.LVL48:
 276:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 518              	 .loc 1 276 0
 519 000c 1343     	 orr r3,r2
 520 000e 8361     	 str r3,[r0,#24]
 278:../Libraries/XMCLib/src/xmc_usic.c **** }
 521              	 .loc 1 278 0
 522              	 
 523 0010 10BD     	 pop {r4,pc}
 524              	 .cfi_endproc
 525              	.LFE119:
 527 0012 C046     	 .section .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer,"ax",%progbits
 528              	 .align 2
 529              	 .global XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 530              	 .code 16
 531              	 .thumb_func
 533              	XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:
 534              	.LFB120:
 279:../Libraries/XMCLib/src/xmc_usic.c **** 
 280:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 281:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
 282:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 283:../Libraries/XMCLib/src/xmc_usic.c **** {
 535              	 .loc 1 283 0
 536              	 .cfi_startproc
 537              	.LVL49:
 538 0000 30B5     	 push {r4,r5,lr}
 539              	.LCFI9:
 540              	 .cfi_def_cfa_offset 12
 541              	 .cfi_offset 4,-12
 542              	 .cfi_offset 5,-8
 543              	 .cfi_offset 14,-4
 284:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 544              	 .loc 1 284 0
 545 0002 8425     	 mov r5,#132
 546 0004 6D00     	 lsl r5,r5,#1
 547 0006 4359     	 ldr r3,[r0,r5]
 548 0008 0724     	 mov r4,#7
 549 000a 8C40     	 lsl r4,r4,r1
 550 000c A343     	 bic r3,r4
 285:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 551              	 .loc 1 285 0
 552 000e 8A40     	 lsl r2,r2,r1
 553              	.LVL50:
 284:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 554              	 .loc 1 284 0
 555 0010 1343     	 orr r3,r2
 556 0012 4351     	 str r3,[r0,r5]
 286:../Libraries/XMCLib/src/xmc_usic.c **** }
 557              	 .loc 1 286 0
 558              	 
 559 0014 30BD     	 pop {r4,r5,pc}
 560              	 .cfi_endproc
 561              	.LFE120:
 563 0016 C046     	 .section .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer,"ax",%progbits
 564              	 .align 2
 565              	 .global XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 566              	 .code 16
 567              	 .thumb_func
 569              	XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:
 570              	.LFB121:
 287:../Libraries/XMCLib/src/xmc_usic.c **** 
 288:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 289:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
 290:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 291:../Libraries/XMCLib/src/xmc_usic.c **** {
 571              	 .loc 1 291 0
 572              	 .cfi_startproc
 573              	.LVL51:
 574 0000 30B5     	 push {r4,r5,lr}
 575              	.LCFI10:
 576              	 .cfi_def_cfa_offset 12
 577              	 .cfi_offset 4,-12
 578              	 .cfi_offset 5,-8
 579              	 .cfi_offset 14,-4
 292:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 580              	 .loc 1 292 0
 581 0002 8625     	 mov r5,#134
 582 0004 6D00     	 lsl r5,r5,#1
 583 0006 4359     	 ldr r3,[r0,r5]
 584 0008 0724     	 mov r4,#7
 585 000a 8C40     	 lsl r4,r4,r1
 586 000c A343     	 bic r3,r4
 293:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 587              	 .loc 1 293 0
 588 000e 8A40     	 lsl r2,r2,r1
 589              	.LVL52:
 292:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 590              	 .loc 1 292 0
 591 0010 1343     	 orr r3,r2
 592 0012 4351     	 str r3,[r0,r5]
 294:../Libraries/XMCLib/src/xmc_usic.c **** }
 593              	 .loc 1 294 0
 594              	 
 595 0014 30BD     	 pop {r4,r5,pc}
 596              	 .cfi_endproc
 597              	.LFE121:
 599 0016 C046     	 .section .text.XMC_USIC_Enable,"ax",%progbits
 600              	 .align 2
 601              	 .global XMC_USIC_Enable
 602              	 .code 16
 603              	 .thumb_func
 605              	XMC_USIC_Enable:
 606              	.LFB122:
 295:../Libraries/XMCLib/src/xmc_usic.c **** 
 296:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Enable(XMC_USIC_t *const usic)
 297:../Libraries/XMCLib/src/xmc_usic.c **** {
 607              	 .loc 1 297 0
 608              	 .cfi_startproc
 609              	.LVL53:
 610 0000 08B5     	 push {r3,lr}
 611              	.LCFI11:
 612              	 .cfi_def_cfa_offset 8
 613              	 .cfi_offset 3,-8
 614              	 .cfi_offset 14,-4
 298:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == USIC0)
 615              	 .loc 1 298 0
 616 0002 034B     	 ldr r3,.L32
 617 0004 9842     	 cmp r0,r3
 618 0006 02D1     	 bne .L30
 299:../Libraries/XMCLib/src/xmc_usic.c ****   {
 300:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 301:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 619              	 .loc 1 301 0
 620 0008 0820     	 mov r0,#8
 621              	.LVL54:
 622 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 623              	.LVL55:
 624              	.L30:
 302:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 303:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 304:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 305:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 306:../Libraries/XMCLib/src/xmc_usic.c ****   }
 307:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 308:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC1)
 309:../Libraries/XMCLib/src/xmc_usic.c ****   {
 310:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 311:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 312:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 313:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 314:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 315:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 316:../Libraries/XMCLib/src/xmc_usic.c ****   }
 317:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 318:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 319:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC2)
 320:../Libraries/XMCLib/src/xmc_usic.c ****   {
 321:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 322:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 323:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 324:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 325:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 326:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 327:../Libraries/XMCLib/src/xmc_usic.c ****   }
 328:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 329:../Libraries/XMCLib/src/xmc_usic.c ****   else
 330:../Libraries/XMCLib/src/xmc_usic.c ****   {
 331:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 332:../Libraries/XMCLib/src/xmc_usic.c ****   }
 333:../Libraries/XMCLib/src/xmc_usic.c **** }
 625              	 .loc 1 333 0
 626              	 
 627 000e 08BD     	 pop {r3,pc}
 628              	.L33:
 629              	 .align 2
 630              	.L32:
 631 0010 08000048 	 .word 1207959560
 632              	 .cfi_endproc
 633              	.LFE122:
 635              	 .section .text.XMC_USIC_CH_Enable,"ax",%progbits
 636              	 .align 2
 637              	 .global XMC_USIC_CH_Enable
 638              	 .code 16
 639              	 .thumb_func
 641              	XMC_USIC_CH_Enable:
 642              	.LFB111:
  80:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
 643              	 .loc 1 80 0
 644              	 .cfi_startproc
 645              	.LVL56:
 646 0000 10B5     	 push {r4,lr}
 647              	.LCFI12:
 648              	 .cfi_def_cfa_offset 8
 649              	 .cfi_offset 4,-8
 650              	 .cfi_offset 14,-4
 651 0002 041C     	 mov r4,r0
  83:../Libraries/XMCLib/src/xmc_usic.c ****   {
 652              	 .loc 1 83 0
 653 0004 9023     	 mov r3,#144
 654 0006 DB05     	 lsl r3,r3,#23
 655 0008 9842     	 cmp r0,r3
 656 000a 02D0     	 beq .L35
  83:../Libraries/XMCLib/src/xmc_usic.c ****   {
 657              	 .loc 1 83 0 is_stmt 0 discriminator 1
 658 000c 074B     	 ldr r3,.L38
 659 000e 9842     	 cmp r0,r3
 660 0010 02D1     	 bne .L36
 661              	.L35:
  85:../Libraries/XMCLib/src/xmc_usic.c ****   }
 662              	 .loc 1 85 0 is_stmt 1
 663 0012 0748     	 ldr r0,.L38+4
 664              	.LVL57:
 665 0014 FFF7FEFF 	 bl XMC_USIC_Enable
 666              	.LVL58:
 667              	.L36:
 105:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 668              	 .loc 1 105 0
 669 0018 0323     	 mov r3,#3
 670 001a E360     	 str r3,[r4,#12]
 671              	.L37:
 106:../Libraries/XMCLib/src/xmc_usic.c ****   {
 672              	 .loc 1 106 0 discriminator 1
 673 001c E368     	 ldr r3,[r4,#12]
 674 001e DB07     	 lsl r3,r3,#31
 675 0020 FCD5     	 bpl .L37
 112:../Libraries/XMCLib/src/xmc_usic.c **** }
 676              	 .loc 1 112 0
 677 0022 236C     	 ldr r3,[r4,#64]
 678 0024 0F22     	 mov r2,#15
 679 0026 9343     	 bic r3,r2
 680 0028 2364     	 str r3,[r4,#64]
 113:../Libraries/XMCLib/src/xmc_usic.c **** 
 681              	 .loc 1 113 0
 682              	 
 683              	.LVL59:
 684 002a 10BD     	 pop {r4,pc}
 685              	.L39:
 686              	 .align 2
 687              	.L38:
 688 002c 00020048 	 .word 1207960064
 689 0030 08000048 	 .word 1207959560
 690              	 .cfi_endproc
 691              	.LFE111:
 693              	 .section .text.XMC_USIC_Disable,"ax",%progbits
 694              	 .align 2
 695              	 .global XMC_USIC_Disable
 696              	 .code 16
 697              	 .thumb_func
 699              	XMC_USIC_Disable:
 700              	.LFB123:
 334:../Libraries/XMCLib/src/xmc_usic.c **** 
 335:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Disable(XMC_USIC_t *const usic)
 336:../Libraries/XMCLib/src/xmc_usic.c **** {
 701              	 .loc 1 336 0
 702              	 .cfi_startproc
 703              	.LVL60:
 704 0000 08B5     	 push {r3,lr}
 705              	.LCFI13:
 706              	 .cfi_def_cfa_offset 8
 707              	 .cfi_offset 3,-8
 708              	 .cfi_offset 14,-4
 337:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == (XMC_USIC_t *)USIC0)
 709              	 .loc 1 337 0
 710 0002 034B     	 ldr r3,.L42
 711 0004 9842     	 cmp r0,r3
 712 0006 02D1     	 bne .L40
 338:../Libraries/XMCLib/src/xmc_usic.c ****   {
 339:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 340:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 341:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 342:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 343:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 713              	 .loc 1 343 0
 714 0008 0820     	 mov r0,#8
 715              	.LVL61:
 716 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 717              	.LVL62:
 718              	.L40:
 344:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 345:../Libraries/XMCLib/src/xmc_usic.c ****   }
 346:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 347:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC1)
 348:../Libraries/XMCLib/src/xmc_usic.c ****   {
 349:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 350:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 351:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 352:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 353:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 354:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 355:../Libraries/XMCLib/src/xmc_usic.c ****   }
 356:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 357:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 358:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC2)
 359:../Libraries/XMCLib/src/xmc_usic.c ****   {
 360:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 361:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 362:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 363:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 364:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 365:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 366:../Libraries/XMCLib/src/xmc_usic.c ****   }
 367:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 368:../Libraries/XMCLib/src/xmc_usic.c ****   else
 369:../Libraries/XMCLib/src/xmc_usic.c ****   {
 370:../Libraries/XMCLib/src/xmc_usic.c **** 	  XMC_ASSERT("USIC module not available", 0/*Always*/);
 371:../Libraries/XMCLib/src/xmc_usic.c ****   }
 372:../Libraries/XMCLib/src/xmc_usic.c ****   
 373:../Libraries/XMCLib/src/xmc_usic.c **** }
 719              	 .loc 1 373 0
 720              	 
 721 000e 08BD     	 pop {r3,pc}
 722              	.L43:
 723              	 .align 2
 724              	.L42:
 725 0010 08000048 	 .word 1207959560
 726              	 .cfi_endproc
 727              	.LFE123:
 729              	 .text
 730              	.Letext0:
 731              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 732              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 733              	 .file 5 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Infineon/XMC1100_series/Include/XMC1100.h"
 734              	 .file 6 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc/xmc1_scu.h"
 735              	 .file 7 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/CMSIS/Infineon/XMC1100_series/Include/system_XMC1100.h"
 736              	 .file 8 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/Libraries/XMCLib/inc/xmc_scu.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usic.c
    {standard input}:18     .text.XMC_USIC_CH_Disable:00000000 $t
    {standard input}:23     .text.XMC_USIC_CH_Disable:00000000 XMC_USIC_CH_Disable
    {standard input}:44     .text.XMC_USIC_CH_SetBaudrate:00000000 $t
    {standard input}:49     .text.XMC_USIC_CH_SetBaudrate:00000000 XMC_USIC_CH_SetBaudrate
    {standard input}:202    .text.XMC_USIC_CH_SetBaudrate:0000009c $d
    {standard input}:208    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 $t
    {standard input}:213    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 XMC_USIC_CH_ConfigExternalInputSignalToBRG
    {standard input}:277    .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000030 $d
    {standard input}:283    .text.XMC_USIC_CH_TXFIFO_Configure:00000000 $t
    {standard input}:288    .text.XMC_USIC_CH_TXFIFO_Configure:00000000 XMC_USIC_CH_TXFIFO_Configure
    {standard input}:332    .text.XMC_USIC_CH_TXFIFO_Configure:00000024 $d
    {standard input}:338    .text.XMC_USIC_CH_RXFIFO_Configure:00000000 $t
    {standard input}:343    .text.XMC_USIC_CH_RXFIFO_Configure:00000000 XMC_USIC_CH_RXFIFO_Configure
    {standard input}:389    .text.XMC_USIC_CH_RXFIFO_Configure:0000002c $d
    {standard input}:395    .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:400    .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
    {standard input}:439    .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000020 $d
    {standard input}:445    .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:450    .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
    {standard input}:489    .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000020 $d
    {standard input}:495    .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:500    .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 XMC_USIC_CH_SetInterruptNodePointer
    {standard input}:528    .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:533    .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
    {standard input}:564    .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:569    .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
    {standard input}:600    .text.XMC_USIC_Enable:00000000 $t
    {standard input}:605    .text.XMC_USIC_Enable:00000000 XMC_USIC_Enable
    {standard input}:631    .text.XMC_USIC_Enable:00000010 $d
    {standard input}:636    .text.XMC_USIC_CH_Enable:00000000 $t
    {standard input}:641    .text.XMC_USIC_CH_Enable:00000000 XMC_USIC_CH_Enable
    {standard input}:688    .text.XMC_USIC_CH_Enable:0000002c $d
    {standard input}:694    .text.XMC_USIC_Disable:00000000 $t
    {standard input}:699    .text.XMC_USIC_Disable:00000000 XMC_USIC_Disable
    {standard input}:725    .text.XMC_USIC_Disable:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
XMC_SCU_CLOCK_GetPeripheralClockFrequency
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_GatePeripheralClock
