   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,1
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "mbfuncinput.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.eMBFuncReadInputRegister,"ax",%progbits
  18              	 .align 2
  19              	 .global eMBFuncReadInputRegister
  20              	 .code 16
  21              	 .thumb_func
  23              	eMBFuncReadInputRegister:
  24              	.LFB100:
  25              	 .file 1 "../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c"
   1:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** /* 
   2:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * FreeModbus Libary: A portable Modbus implementation for Modbus ASCII/RTU.
   3:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * Copyright (c) 2006 Christian Walter <wolti@sil.at>
   4:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * All rights reserved.
   5:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  *
   6:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * Redistribution and use in source and binary forms, with or without
   7:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * modification, are permitted provided that the following conditions
   8:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * are met:
   9:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * 1. Redistributions of source code must retain the above copyright
  10:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  *    notice, this list of conditions and the following disclaimer.
  11:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  *    documentation and/or other materials provided with the distribution.
  14:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * 3. The name of the author may not be used to endorse or promote products
  15:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  *    derived from this software without specific prior written permission.
  16:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  *
  17:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  18:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  19:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  20:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
  21:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  22:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  23:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  24:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  25:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  26:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  *
  28:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  * File: $Id: mbfuncinput.c,v 1.10 2007/09/12 10:15:56 wolti Exp $
  29:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****  */
  30:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  31:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** /* ----------------------- System includes ----------------------------------*/
  32:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #include "stdlib.h"
  33:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #include "string.h"
  34:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  35:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** /* ----------------------- Platform includes --------------------------------*/
  36:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #include "port.h"
  37:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  38:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** /* ----------------------- Modbus includes ----------------------------------*/
  39:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #include "mb.h"
  40:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #include "mbframe.h"
  41:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #include "mbproto.h"
  42:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #include "mbconfig.h"
  43:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  44:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** /* ----------------------- Defines ------------------------------------------*/
  45:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #define MB_PDU_FUNC_READ_ADDR_OFF           ( MB_PDU_DATA_OFF )
  46:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #define MB_PDU_FUNC_READ_REGCNT_OFF         ( MB_PDU_DATA_OFF + 2 )
  47:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #define MB_PDU_FUNC_READ_SIZE               ( 4 )
  48:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #define MB_PDU_FUNC_READ_REGCNT_MAX         ( 0x007D )
  49:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  50:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #define MB_PDU_FUNC_READ_RSP_BYTECNT_OFF    ( MB_PDU_DATA_OFF )
  51:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  52:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** /* ----------------------- Static functions ---------------------------------*/
  53:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** eMBException    prveMBError2Exception( eMBErrorCode eErrorCode );
  54:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  55:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** /* ----------------------- Start implementation -----------------------------*/
  56:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** #if MB_FUNC_READ_INPUT_ENABLED > 0
  57:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  58:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** eMBException
  59:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** eMBFuncReadInputRegister( UCHAR * pucFrame, USHORT * usLen )
  60:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** {
  26              	 .loc 1 60 0
  27              	 .cfi_startproc
  28              	.LVL0:
  29 0000 70B5     	 push {r4,r5,r6,lr}
  30              	.LCFI0:
  31              	 .cfi_def_cfa_offset 16
  32              	 .cfi_offset 4,-16
  33              	 .cfi_offset 5,-12
  34              	 .cfi_offset 6,-8
  35              	 .cfi_offset 14,-4
  36              	.LVL1:
  61:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     USHORT          usRegAddress;
  62:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     USHORT          usRegCount;
  63:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     UCHAR          *pucFrameCur;
  64:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  65:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     eMBException    eStatus = MB_EX_NONE;
  66:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     eMBErrorCode    eRegStatus;
  67:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  68:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     if( *usLen == ( MB_PDU_FUNC_READ_SIZE + MB_PDU_SIZE_MIN ) )
  37              	 .loc 1 68 0
  38 0002 0B88     	 ldrh r3,[r1]
  39 0004 052B     	 cmp r3,#5
  40 0006 2BD1     	 bne .L4
  69:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     {
  70:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         usRegAddress = ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF] << 8 );
  41              	 .loc 1 70 0
  42 0008 4378     	 ldrb r3,[r0,#1]
  43 000a 1B02     	 lsl r3,r3,#8
  44              	.LVL2:
  71:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         usRegAddress |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_ADDR_OFF + 1] );
  45              	 .loc 1 71 0
  46 000c 8278     	 ldrb r2,[r0,#2]
  47 000e 1343     	 orr r3,r2
  48              	.LVL3:
  72:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         usRegAddress++;
  49              	 .loc 1 72 0
  50 0010 0133     	 add r3,r3,#1
  51              	.LVL4:
  52 0012 9CB2     	 uxth r4,r3
  53              	.LVL5:
  73:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  74:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         usRegCount = ( USHORT )( pucFrame[MB_PDU_FUNC_READ_REGCNT_OFF] << 8 );
  54              	 .loc 1 74 0
  55 0014 C578     	 ldrb r5,[r0,#3]
  56 0016 2D02     	 lsl r5,r5,#8
  57              	.LVL6:
  75:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         usRegCount |= ( USHORT )( pucFrame[MB_PDU_FUNC_READ_REGCNT_OFF + 1] );
  58              	 .loc 1 75 0
  59 0018 0379     	 ldrb r3,[r0,#4]
  60 001a 1D43     	 orr r5,r3
  61              	.LVL7:
  76:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  77:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         /* Check if the number of registers to read is valid. If not
  78:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****          * return Modbus illegal data value exception. 
  79:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****          */
  80:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         if( ( usRegCount >= 1 )
  81:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             && ( usRegCount < MB_PDU_FUNC_READ_REGCNT_MAX ) )
  62              	 .loc 1 81 0
  63 001c 6B1E     	 sub r3,r5,#1
  64 001e 9BB2     	 uxth r3,r3
  80:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             && ( usRegCount < MB_PDU_FUNC_READ_REGCNT_MAX ) )
  65              	 .loc 1 80 0
  66 0020 7B2B     	 cmp r3,#123
  67 0022 1FD8     	 bhi .L5
  68 0024 0E1C     	 mov r6,r1
  69 0026 031C     	 mov r3,r0
  70              	.LVL8:
  82:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         {
  83:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             /* Set the current PDU data pointer to the beginning. */
  84:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             pucFrameCur = &pucFrame[MB_PDU_FUNC_OFF];
  85:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             *usLen = MB_PDU_FUNC_OFF;
  71              	 .loc 1 85 0
  72 0028 0022     	 mov r2,#0
  73 002a 0A80     	 strh r2,[r1]
  74              	.LVL9:
  86:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  87:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             /* First byte contains the function code. */
  88:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             *pucFrameCur++ = MB_FUNC_READ_INPUT_REGISTER;
  75              	 .loc 1 88 0
  76 002c 0432     	 add r2,r2,#4
  77 002e 0270     	 strb r2,[r0]
  89:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             *usLen += 1;
  78              	 .loc 1 89 0
  79 0030 0A88     	 ldrh r2,[r1]
  80 0032 0132     	 add r2,r2,#1
  81 0034 0A80     	 strh r2,[r1]
  90:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  91:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             /* Second byte in the response contain the number of bytes. */
  92:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             *pucFrameCur++ = ( UCHAR )( usRegCount * 2 );
  82              	 .loc 1 92 0
  83 0036 0230     	 add r0,r0,#2
  84              	.LVL10:
  85 0038 6A00     	 lsl r2,r5,#1
  86 003a 5A70     	 strb r2,[r3,#1]
  93:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             *usLen += 1;
  87              	 .loc 1 93 0
  88 003c 0B88     	 ldrh r3,[r1]
  89              	.LVL11:
  90 003e 0133     	 add r3,r3,#1
  91 0040 0B80     	 strh r3,[r1]
  94:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  95:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             eRegStatus =
  92              	 .loc 1 95 0
  93 0042 211C     	 mov r1,r4
  94              	.LVL12:
  95 0044 2A1C     	 mov r2,r5
  96 0046 FFF7FEFF 	 bl eMBRegInputCB
  97              	.LVL13:
  96:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****                 eMBRegInputCB( pucFrameCur, usRegAddress, usRegCount );
  97:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** 
  98:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             /* If an error occured convert it into a Modbus exception. */
  99:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             if( eRegStatus != MB_ENOERR )
  98              	 .loc 1 99 0
  99 004a 0028     	 cmp r0,#0
 100 004c 02D0     	 beq .L3
 100:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             {
 101:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****                 eStatus = prveMBError2Exception( eRegStatus );
 101              	 .loc 1 101 0
 102 004e FFF7FEFF 	 bl prveMBError2Exception
 103              	.LVL14:
 104 0052 08E0     	 b .L2
 105              	.LVL15:
 106              	.L3:
 102:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             }
 103:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             else
 104:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             {
 105:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****                 *usLen += usRegCount * 2;
 107              	 .loc 1 105 0
 108 0054 6D00     	 lsl r5,r5,#1
 109              	.LVL16:
 110 0056 3388     	 ldrh r3,[r6]
 111 0058 5D19     	 add r5,r3,r5
 112 005a 3580     	 strh r5,[r6]
  65:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     eMBErrorCode    eRegStatus;
 113              	 .loc 1 65 0
 114 005c 0020     	 mov r0,#0
 115              	.LVL17:
 116 005e 02E0     	 b .L2
 117              	.LVL18:
 118              	.L4:
 106:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             }
 107:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         }
 108:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         else
 109:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         {
 110:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****             eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 111:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         }
 112:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     }
 113:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     else
 114:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     {
 115:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         /* Can't be a valid read input register request because the length
 116:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****          * is incorrect. */
 117:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         eStatus = MB_EX_ILLEGAL_DATA_VALUE;
 119              	 .loc 1 117 0
 120 0060 0320     	 mov r0,#3
 121              	.LVL19:
 122 0062 00E0     	 b .L2
 123              	.LVL20:
 124              	.L5:
 110:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****         }
 125              	 .loc 1 110 0
 126 0064 0320     	 mov r0,#3
 127              	.LVL21:
 128              	.L2:
 118:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     }
 119:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c ****     return eStatus;
 120:../freemodbus-v1.5.0/modbus/functions/mbfuncinput.c **** }
 129              	 .loc 1 120 0
 130              	 
 131 0066 70BD     	 pop {r4,r5,r6,pc}
 132              	 .cfi_endproc
 133              	.LFE100:
 135              	 .text
 136              	.Letext0:
 137              	 .file 2 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 138              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 139              	 .file 4 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/freemodbus-v1.5.0/port/port.h"
 140              	 .file 5 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/freemodbus-v1.5.0/modbus/include/mbproto.h"
 141              	 .file 6 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/freemodbus-v1.5.0/modbus/include/mb.h"
DEFINED SYMBOLS
                            *ABS*:00000000 mbfuncinput.c
    {standard input}:18     .text.eMBFuncReadInputRegister:00000000 $t
    {standard input}:23     .text.eMBFuncReadInputRegister:00000000 eMBFuncReadInputRegister
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
eMBRegInputCB
prveMBError2Exception
