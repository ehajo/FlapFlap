   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,1
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "mbfuncother.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.eMBSetSlaveID,"ax",%progbits
  18              	 .align 2
  19              	 .global eMBSetSlaveID
  20              	 .code 16
  21              	 .thumb_func
  23              	eMBSetSlaveID:
  24              	.LFB100:
  25              	 .file 1 "../freemodbus-v1.5.0/modbus/functions/mbfuncother.c"
   1:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** /* 
   2:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * FreeModbus Libary: A portable Modbus implementation for Modbus ASCII/RTU.
   3:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * Copyright (c) 2006 Christian Walter <wolti@sil.at>
   4:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * All rights reserved.
   5:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  *
   6:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * Redistribution and use in source and binary forms, with or without
   7:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * modification, are permitted provided that the following conditions
   8:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * are met:
   9:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * 1. Redistributions of source code must retain the above copyright
  10:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  *    notice, this list of conditions and the following disclaimer.
  11:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * 2. Redistributions in binary form must reproduce the above copyright
  12:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  *    notice, this list of conditions and the following disclaimer in the
  13:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  *    documentation and/or other materials provided with the distribution.
  14:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * 3. The name of the author may not be used to endorse or promote products
  15:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  *    derived from this software without specific prior written permission.
  16:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  *
  17:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  18:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  19:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  20:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
  21:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  22:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  23:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  24:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  25:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  26:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  27:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  *
  28:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  * File: $Id: mbfuncother.c,v 1.8 2006/12/07 22:10:34 wolti Exp $
  29:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****  */
  30:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** 
  31:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** /* ----------------------- System includes ----------------------------------*/
  32:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** #include "stdlib.h"
  33:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** #include "string.h"
  34:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** 
  35:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** /* ----------------------- Platform includes --------------------------------*/
  36:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** #include "port.h"
  37:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** 
  38:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** /* ----------------------- Modbus includes ----------------------------------*/
  39:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** #include "mb.h"
  40:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** #include "mbframe.h"
  41:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** #include "mbproto.h"
  42:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** #include "mbconfig.h"
  43:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** 
  44:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** #if MB_FUNC_OTHER_REP_SLAVEID_ENABLED > 0
  45:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** 
  46:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** /* ----------------------- Static variables ---------------------------------*/
  47:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** static UCHAR    ucMBSlaveID[MB_FUNC_OTHER_REP_SLAVEID_BUF];
  48:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** static USHORT   usMBSlaveIDLen;
  49:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** 
  50:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** /* ----------------------- Start implementation -----------------------------*/
  51:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** 
  52:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** eMBErrorCode
  53:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** eMBSetSlaveID( UCHAR ucSlaveID, BOOL xIsRunning,
  54:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****                UCHAR const *pucAdditional, USHORT usAdditionalLen )
  55:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** {
  26              	 .loc 1 55 0
  27              	 .cfi_startproc
  28              	.LVL0:
  29 0000 38B5     	 push {r3,r4,r5,lr}
  30              	.LCFI0:
  31              	 .cfi_def_cfa_offset 16
  32              	 .cfi_offset 3,-16
  33              	 .cfi_offset 4,-12
  34              	 .cfi_offset 5,-8
  35              	 .cfi_offset 14,-4
  36 0002 1C1C     	 mov r4,r3
  37              	.LVL1:
  56:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****     eMBErrorCode    eStatus = MB_ENOERR;
  57:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** 
  58:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****     /* See Modbus Application Protocol Specification V1.1b
  59:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****      * the first byte in the buffer is the bytecount, second byte in the buffer is reserved for
  60:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****      * the parameter ucSlaveID and the third one for running flag. The rest of
  61:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****      * the buffer is available for additional data. */
  62:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****     if( usAdditionalLen + 3 < MB_FUNC_OTHER_REP_SLAVEID_BUF )
  38              	 .loc 1 62 0
  39 0004 0333     	 add r3,r3,#3
  40              	.LVL2:
  41 0006 1F2B     	 cmp r3,#31
  42 0008 1AD8     	 bhi .L4
  63:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****     {
  64:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****         usMBSlaveIDLen = 0;
  65:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****         ucMBSlaveID[usMBSlaveIDLen++] = usAdditionalLen + 2;
  43              	 .loc 1 65 0
  44 000a 0F4B     	 ldr r3,.L7
  45 000c A51C     	 add r5,r4,#2
  46 000e 1D70     	 strb r5,[r3]
  66:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****         ucMBSlaveID[usMBSlaveIDLen++] = ucSlaveID;
  47              	 .loc 1 66 0
  48 0010 5870     	 strb r0,[r3,#1]
  67:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****         ucMBSlaveID[usMBSlaveIDLen++] = ( UCHAR )( xIsRunning ? 0xFF : 0x00 );
  49              	 .loc 1 67 0
  50 0012 0320     	 mov r0,#3
  51              	.LVL3:
  52 0014 0D4B     	 ldr r3,.L7+4
  53 0016 1880     	 strh r0,[r3]
  54 0018 0029     	 cmp r1,#0
  55 001a 01D0     	 beq .L5
  56 001c FF21     	 mov r1,#255
  57              	.LVL4:
  58 001e 00E0     	 b .L3
  59              	.LVL5:
  60              	.L5:
  61 0020 0021     	 mov r1,#0
  62              	.LVL6:
  63              	.L3:
  64              	 .loc 1 67 0 is_stmt 0 discriminator 4
  65 0022 094B     	 ldr r3,.L7
  66 0024 9970     	 strb r1,[r3,#2]
  68:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****         if( usAdditionalLen > 0 )
  67              	 .loc 1 68 0 is_stmt 1 discriminator 4
  68 0026 002C     	 cmp r4,#0
  69 0028 0CD0     	 beq .L6
  69:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****         {
  70:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****             memcpy( &ucMBSlaveID[usMBSlaveIDLen], pucAdditional,
  70              	 .loc 1 70 0
  71 002a 181C     	 mov r0,r3
  72 002c 0330     	 add r0,r0,#3
  73 002e 111C     	 mov r1,r2
  74 0030 221C     	 mov r2,r4
  75              	.LVL7:
  76 0032 FFF7FEFF 	 bl memcpy
  77              	.LVL8:
  71:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****                     ( size_t )usAdditionalLen );
  72:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****             usMBSlaveIDLen += usAdditionalLen;
  78              	 .loc 1 72 0
  79 0036 0334     	 add r4,r4,#3
  80 0038 044B     	 ldr r3,.L7+4
  81 003a 1C80     	 strh r4,[r3]
  56:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** 
  82              	 .loc 1 56 0
  83 003c 0020     	 mov r0,#0
  84 003e 02E0     	 b .L2
  85              	.LVL9:
  86              	.L4:
  73:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****         }
  74:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****     }
  75:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****     else
  76:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****     {
  77:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****         eStatus = MB_ENORES;
  87              	 .loc 1 77 0
  88 0040 0420     	 mov r0,#4
  89              	.LVL10:
  90 0042 00E0     	 b .L2
  91              	.LVL11:
  92              	.L6:
  56:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** 
  93              	 .loc 1 56 0
  94 0044 0020     	 mov r0,#0
  95              	.LVL12:
  96              	.L2:
  78:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****     }
  79:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****     return eStatus;
  80:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** }
  97              	 .loc 1 80 0
  98              	 
  99 0046 38BD     	 pop {r3,r4,r5,pc}
 100              	.L8:
 101              	 .align 2
 102              	.L7:
 103 0048 00000000 	 .word .LANCHOR1
 104 004c 00000000 	 .word .LANCHOR0
 105              	 .cfi_endproc
 106              	.LFE100:
 108              	 .section .text.eMBFuncReportSlaveID,"ax",%progbits
 109              	 .align 2
 110              	 .global eMBFuncReportSlaveID
 111              	 .code 16
 112              	 .thumb_func
 114              	eMBFuncReportSlaveID:
 115              	.LFB101:
  81:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** 
  82:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** eMBException
  83:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** eMBFuncReportSlaveID( UCHAR * pucFrame, USHORT * usLen )
  84:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** {
 116              	 .loc 1 84 0
 117              	 .cfi_startproc
 118              	.LVL13:
 119 0000 38B5     	 push {r3,r4,r5,lr}
 120              	.LCFI1:
 121              	 .cfi_def_cfa_offset 16
 122              	 .cfi_offset 3,-16
 123              	 .cfi_offset 4,-12
 124              	 .cfi_offset 5,-8
 125              	 .cfi_offset 14,-4
 126 0002 0D1C     	 mov r5,r1
  85:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****     memcpy( &pucFrame[MB_PDU_DATA_OFF], &ucMBSlaveID[0], ( size_t )usMBSlaveIDLen );
 127              	 .loc 1 85 0
 128 0004 0130     	 add r0,r0,#1
 129              	.LVL14:
 130 0006 054B     	 ldr r3,.L10
 131 0008 1C88     	 ldrh r4,[r3]
 132 000a 0549     	 ldr r1,.L10+4
 133              	.LVL15:
 134 000c 221C     	 mov r2,r4
 135 000e FFF7FEFF 	 bl memcpy
 136              	.LVL16:
  86:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****     *usLen = ( USHORT )( MB_PDU_DATA_OFF + usMBSlaveIDLen );
 137              	 .loc 1 86 0
 138 0012 0134     	 add r4,r4,#1
 139 0014 2C80     	 strh r4,[r5]
  87:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c ****     return MB_EX_NONE;
  88:../freemodbus-v1.5.0/modbus/functions/mbfuncother.c **** }
 140              	 .loc 1 88 0
 141 0016 0020     	 mov r0,#0
 142              	 
 143              	.LVL17:
 144 0018 38BD     	 pop {r3,r4,r5,pc}
 145              	.L11:
 146 001a C046     	 .align 2
 147              	.L10:
 148 001c 00000000 	 .word .LANCHOR0
 149 0020 00000000 	 .word .LANCHOR1
 150              	 .cfi_endproc
 151              	.LFE101:
 153              	 .section .bss.usMBSlaveIDLen,"aw",%nobits
 154              	 .align 1
 155              	 .set .LANCHOR0,.+0
 158              	usMBSlaveIDLen:
 159 0000 0000     	 .space 2
 160              	 .section .bss.ucMBSlaveID,"aw",%nobits
 161              	 .align 2
 162              	 .set .LANCHOR1,.+0
 165              	ucMBSlaveID:
 166 0000 00000000 	 .space 32
 166      00000000 
 166      00000000 
 166      00000000 
 166      00000000 
 167              	 .text
 168              	.Letext0:
 169              	 .file 2 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 170              	 .file 3 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 171              	 .file 4 "c:\\davev4-64bit\\dave-4.3.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 172              	 .file 5 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/freemodbus-v1.5.0/port/port.h"
 173              	 .file 6 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/freemodbus-v1.5.0/modbus/include/mbproto.h"
 174              	 .file 7 "C:/Projekte/Infineon_Dave/eHaJo/FlapFlap/freemodbus-v1.5.0/modbus/include/mb.h"
DEFINED SYMBOLS
                            *ABS*:00000000 mbfuncother.c
    {standard input}:18     .text.eMBSetSlaveID:00000000 $t
    {standard input}:23     .text.eMBSetSlaveID:00000000 eMBSetSlaveID
    {standard input}:103    .text.eMBSetSlaveID:00000048 $d
    {standard input}:109    .text.eMBFuncReportSlaveID:00000000 $t
    {standard input}:114    .text.eMBFuncReportSlaveID:00000000 eMBFuncReportSlaveID
    {standard input}:148    .text.eMBFuncReportSlaveID:0000001c $d
    {standard input}:154    .bss.usMBSlaveIDLen:00000000 $d
    {standard input}:158    .bss.usMBSlaveIDLen:00000000 usMBSlaveIDLen
    {standard input}:161    .bss.ucMBSlaveID:00000000 $d
    {standard input}:165    .bss.ucMBSlaveID:00000000 ucMBSlaveID
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memcpy
